/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202510192014
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantAuthRegisterOAuthReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantAuthRegisterOAuthReq{}

// UnibeeApiMerchantAuthRegisterOAuthReq Merchant OAuth Register. Pass OAuth token in request header (Auth.js JWT). Headers: X-Auth-JS-Token | X-Auth-Token | X-OAuth-Token
type UnibeeApiMerchantAuthRegisterOAuthReq struct {
	// Company Name
	CompanyName *string `json:"companyName,omitempty"`
	// Country Code
	CountryCode *string `json:"countryCode,omitempty"`
	// Country Name
	CountryName *string `json:"countryName,omitempty"`
	// The merchant member email address
	Email string `json:"email"`
	// The merchant owner's first name
	FirstName *string `json:"firstName,omitempty"`
	// The merchant owner's last name
	LastName *string `json:"lastName,omitempty"`
	// Metadataï¼ŒMap
	Metadata *map[string]interface{} `json:"metadata,omitempty"`
	// The owner's password
	Password *string `json:"password,omitempty"`
	// The owner's Phone
	Phone *string `json:"phone,omitempty"`
	// The owner's UserName
	UserName *string `json:"userName,omitempty"`
}

type _UnibeeApiMerchantAuthRegisterOAuthReq UnibeeApiMerchantAuthRegisterOAuthReq

// NewUnibeeApiMerchantAuthRegisterOAuthReq instantiates a new UnibeeApiMerchantAuthRegisterOAuthReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantAuthRegisterOAuthReq(email string) *UnibeeApiMerchantAuthRegisterOAuthReq {
	this := UnibeeApiMerchantAuthRegisterOAuthReq{}
	this.Email = email
	return &this
}

// NewUnibeeApiMerchantAuthRegisterOAuthReqWithDefaults instantiates a new UnibeeApiMerchantAuthRegisterOAuthReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantAuthRegisterOAuthReqWithDefaults() *UnibeeApiMerchantAuthRegisterOAuthReq {
	this := UnibeeApiMerchantAuthRegisterOAuthReq{}
	return &this
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCountryName returns the CountryName field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetCountryName() string {
	if o == nil || IsNil(o.CountryName) {
		var ret string
		return ret
	}
	return *o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetCountryNameOk() (*string, bool) {
	if o == nil || IsNil(o.CountryName) {
		return nil, false
	}
	return o.CountryName, true
}

// HasCountryName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) HasCountryName() bool {
	if o != nil && !IsNil(o.CountryName) {
		return true
	}

	return false
}

// SetCountryName gets a reference to the given string and assigns it to the CountryName field.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) SetCountryName(v string) {
	o.CountryName = &v
}

// GetEmail returns the Email field value
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) SetEmail(v string) {
	o.Email = v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) SetLastName(v string) {
	o.LastName = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) SetMetadata(v map[string]interface{}) {
	o.Metadata = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) SetPassword(v string) {
	o.Password = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) SetPhone(v string) {
	o.Phone = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *UnibeeApiMerchantAuthRegisterOAuthReq) SetUserName(v string) {
	o.UserName = &v
}

func (o UnibeeApiMerchantAuthRegisterOAuthReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantAuthRegisterOAuthReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.CountryCode) {
		toSerialize["countryCode"] = o.CountryCode
	}
	if !IsNil(o.CountryName) {
		toSerialize["countryName"] = o.CountryName
	}
	toSerialize["email"] = o.Email
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	return toSerialize, nil
}

func (o *UnibeeApiMerchantAuthRegisterOAuthReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantAuthRegisterOAuthReq := _UnibeeApiMerchantAuthRegisterOAuthReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varUnibeeApiMerchantAuthRegisterOAuthReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantAuthRegisterOAuthReq(varUnibeeApiMerchantAuthRegisterOAuthReq)

	return err
}

type NullableUnibeeApiMerchantAuthRegisterOAuthReq struct {
	value *UnibeeApiMerchantAuthRegisterOAuthReq
	isSet bool
}

func (v NullableUnibeeApiMerchantAuthRegisterOAuthReq) Get() *UnibeeApiMerchantAuthRegisterOAuthReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantAuthRegisterOAuthReq) Set(val *UnibeeApiMerchantAuthRegisterOAuthReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantAuthRegisterOAuthReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantAuthRegisterOAuthReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantAuthRegisterOAuthReq(val *UnibeeApiMerchantAuthRegisterOAuthReq) *NullableUnibeeApiMerchantAuthRegisterOAuthReq {
	return &NullableUnibeeApiMerchantAuthRegisterOAuthReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantAuthRegisterOAuthReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantAuthRegisterOAuthReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


