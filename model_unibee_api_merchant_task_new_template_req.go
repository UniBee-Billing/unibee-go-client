/*
OpenAPI UniBee

This is UniBee Api Server

API version: buildtime:202408060614 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantTaskNewTemplateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantTaskNewTemplateReq{}

// UnibeeApiMerchantTaskNewTemplateReq struct for UnibeeApiMerchantTaskNewTemplateReq
type UnibeeApiMerchantTaskNewTemplateReq struct {
	// ExportColumns, the export file column list, will export all columns if not specified, first char should lower case
	ExportColumns []string `json:"exportColumns,omitempty"`
	// The format of export file, xlsx|csv, will be xlsx if not specified
	Format *string `json:"format,omitempty"`
	// name
	Name string `json:"name"`
	// Payload
	Payload *map[string]string `json:"payload,omitempty"`
	// Task,InvoiceExport|UserExport|SubscriptionExport|TransactionExport|DiscountExport|UserDiscountExport
	Task string `json:"task"`
}

type _UnibeeApiMerchantTaskNewTemplateReq UnibeeApiMerchantTaskNewTemplateReq

// NewUnibeeApiMerchantTaskNewTemplateReq instantiates a new UnibeeApiMerchantTaskNewTemplateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantTaskNewTemplateReq(name string, task string) *UnibeeApiMerchantTaskNewTemplateReq {
	this := UnibeeApiMerchantTaskNewTemplateReq{}
	this.Name = name
	this.Task = task
	return &this
}

// NewUnibeeApiMerchantTaskNewTemplateReqWithDefaults instantiates a new UnibeeApiMerchantTaskNewTemplateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantTaskNewTemplateReqWithDefaults() *UnibeeApiMerchantTaskNewTemplateReq {
	this := UnibeeApiMerchantTaskNewTemplateReq{}
	return &this
}

// GetExportColumns returns the ExportColumns field value if set, zero value otherwise.
func (o *UnibeeApiMerchantTaskNewTemplateReq) GetExportColumns() []string {
	if o == nil || IsNil(o.ExportColumns) {
		var ret []string
		return ret
	}
	return o.ExportColumns
}

// GetExportColumnsOk returns a tuple with the ExportColumns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewTemplateReq) GetExportColumnsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExportColumns) {
		return nil, false
	}
	return o.ExportColumns, true
}

// HasExportColumns returns a boolean if a field has been set.
func (o *UnibeeApiMerchantTaskNewTemplateReq) HasExportColumns() bool {
	if o != nil && !IsNil(o.ExportColumns) {
		return true
	}

	return false
}

// SetExportColumns gets a reference to the given []string and assigns it to the ExportColumns field.
func (o *UnibeeApiMerchantTaskNewTemplateReq) SetExportColumns(v []string) {
	o.ExportColumns = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *UnibeeApiMerchantTaskNewTemplateReq) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewTemplateReq) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *UnibeeApiMerchantTaskNewTemplateReq) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *UnibeeApiMerchantTaskNewTemplateReq) SetFormat(v string) {
	o.Format = &v
}

// GetName returns the Name field value
func (o *UnibeeApiMerchantTaskNewTemplateReq) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewTemplateReq) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UnibeeApiMerchantTaskNewTemplateReq) SetName(v string) {
	o.Name = v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *UnibeeApiMerchantTaskNewTemplateReq) GetPayload() map[string]string {
	if o == nil || IsNil(o.Payload) {
		var ret map[string]string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewTemplateReq) GetPayloadOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *UnibeeApiMerchantTaskNewTemplateReq) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]string and assigns it to the Payload field.
func (o *UnibeeApiMerchantTaskNewTemplateReq) SetPayload(v map[string]string) {
	o.Payload = &v
}

// GetTask returns the Task field value
func (o *UnibeeApiMerchantTaskNewTemplateReq) GetTask() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Task
}

// GetTaskOk returns a tuple with the Task field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewTemplateReq) GetTaskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Task, true
}

// SetTask sets field value
func (o *UnibeeApiMerchantTaskNewTemplateReq) SetTask(v string) {
	o.Task = v
}

func (o UnibeeApiMerchantTaskNewTemplateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantTaskNewTemplateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExportColumns) {
		toSerialize["exportColumns"] = o.ExportColumns
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	toSerialize["task"] = o.Task
	return toSerialize, nil
}

func (o *UnibeeApiMerchantTaskNewTemplateReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"task",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantTaskNewTemplateReq := _UnibeeApiMerchantTaskNewTemplateReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUnibeeApiMerchantTaskNewTemplateReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantTaskNewTemplateReq(varUnibeeApiMerchantTaskNewTemplateReq)

	return err
}

type NullableUnibeeApiMerchantTaskNewTemplateReq struct {
	value *UnibeeApiMerchantTaskNewTemplateReq
	isSet bool
}

func (v NullableUnibeeApiMerchantTaskNewTemplateReq) Get() *UnibeeApiMerchantTaskNewTemplateReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantTaskNewTemplateReq) Set(val *UnibeeApiMerchantTaskNewTemplateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantTaskNewTemplateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantTaskNewTemplateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantTaskNewTemplateReq(val *UnibeeApiMerchantTaskNewTemplateReq) *NullableUnibeeApiMerchantTaskNewTemplateReq {
	return &NullableUnibeeApiMerchantTaskNewTemplateReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantTaskNewTemplateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantTaskNewTemplateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


