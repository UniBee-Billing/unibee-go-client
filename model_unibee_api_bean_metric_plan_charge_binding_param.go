/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202502180830
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiBeanMetricPlanChargeBindingParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanMetricPlanChargeBindingParam{}

// UnibeeApiBeanMetricPlanChargeBindingParam struct for UnibeeApiBeanMetricPlanChargeBindingParam
type UnibeeApiBeanMetricPlanChargeBindingParam struct {
	// ChargeType,0-standard pricing 1-graduated pricing
	ChargeType *int32 `json:"chargeType,omitempty"`
	// GraduatedAmounts, used for graduated pricing
	GraduatedAmounts []UnibeeApiBeanMetricPlanChargeGraduatedStep `json:"graduatedAmounts,omitempty"`
	// MetricId
	MetricId int64 `json:"metricId"`
	// StandardAmount, used for standard pricing
	StandardAmount *int64 `json:"standardAmount,omitempty"`
	// StandardStartValue, used for standard pricing
	StandardStartValue *int64 `json:"standardStartValue,omitempty"`
}

type _UnibeeApiBeanMetricPlanChargeBindingParam UnibeeApiBeanMetricPlanChargeBindingParam

// NewUnibeeApiBeanMetricPlanChargeBindingParam instantiates a new UnibeeApiBeanMetricPlanChargeBindingParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanMetricPlanChargeBindingParam(metricId int64) *UnibeeApiBeanMetricPlanChargeBindingParam {
	this := UnibeeApiBeanMetricPlanChargeBindingParam{}
	this.MetricId = metricId
	return &this
}

// NewUnibeeApiBeanMetricPlanChargeBindingParamWithDefaults instantiates a new UnibeeApiBeanMetricPlanChargeBindingParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanMetricPlanChargeBindingParamWithDefaults() *UnibeeApiBeanMetricPlanChargeBindingParam {
	this := UnibeeApiBeanMetricPlanChargeBindingParam{}
	return &this
}

// GetChargeType returns the ChargeType field value if set, zero value otherwise.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) GetChargeType() int32 {
	if o == nil || IsNil(o.ChargeType) {
		var ret int32
		return ret
	}
	return *o.ChargeType
}

// GetChargeTypeOk returns a tuple with the ChargeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) GetChargeTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.ChargeType) {
		return nil, false
	}
	return o.ChargeType, true
}

// HasChargeType returns a boolean if a field has been set.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) HasChargeType() bool {
	if o != nil && !IsNil(o.ChargeType) {
		return true
	}

	return false
}

// SetChargeType gets a reference to the given int32 and assigns it to the ChargeType field.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) SetChargeType(v int32) {
	o.ChargeType = &v
}

// GetGraduatedAmounts returns the GraduatedAmounts field value if set, zero value otherwise.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) GetGraduatedAmounts() []UnibeeApiBeanMetricPlanChargeGraduatedStep {
	if o == nil || IsNil(o.GraduatedAmounts) {
		var ret []UnibeeApiBeanMetricPlanChargeGraduatedStep
		return ret
	}
	return o.GraduatedAmounts
}

// GetGraduatedAmountsOk returns a tuple with the GraduatedAmounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) GetGraduatedAmountsOk() ([]UnibeeApiBeanMetricPlanChargeGraduatedStep, bool) {
	if o == nil || IsNil(o.GraduatedAmounts) {
		return nil, false
	}
	return o.GraduatedAmounts, true
}

// HasGraduatedAmounts returns a boolean if a field has been set.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) HasGraduatedAmounts() bool {
	if o != nil && !IsNil(o.GraduatedAmounts) {
		return true
	}

	return false
}

// SetGraduatedAmounts gets a reference to the given []UnibeeApiBeanMetricPlanChargeGraduatedStep and assigns it to the GraduatedAmounts field.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) SetGraduatedAmounts(v []UnibeeApiBeanMetricPlanChargeGraduatedStep) {
	o.GraduatedAmounts = v
}

// GetMetricId returns the MetricId field value
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) GetMetricId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MetricId
}

// GetMetricIdOk returns a tuple with the MetricId field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) GetMetricIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricId, true
}

// SetMetricId sets field value
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) SetMetricId(v int64) {
	o.MetricId = v
}

// GetStandardAmount returns the StandardAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) GetStandardAmount() int64 {
	if o == nil || IsNil(o.StandardAmount) {
		var ret int64
		return ret
	}
	return *o.StandardAmount
}

// GetStandardAmountOk returns a tuple with the StandardAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) GetStandardAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.StandardAmount) {
		return nil, false
	}
	return o.StandardAmount, true
}

// HasStandardAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) HasStandardAmount() bool {
	if o != nil && !IsNil(o.StandardAmount) {
		return true
	}

	return false
}

// SetStandardAmount gets a reference to the given int64 and assigns it to the StandardAmount field.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) SetStandardAmount(v int64) {
	o.StandardAmount = &v
}

// GetStandardStartValue returns the StandardStartValue field value if set, zero value otherwise.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) GetStandardStartValue() int64 {
	if o == nil || IsNil(o.StandardStartValue) {
		var ret int64
		return ret
	}
	return *o.StandardStartValue
}

// GetStandardStartValueOk returns a tuple with the StandardStartValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) GetStandardStartValueOk() (*int64, bool) {
	if o == nil || IsNil(o.StandardStartValue) {
		return nil, false
	}
	return o.StandardStartValue, true
}

// HasStandardStartValue returns a boolean if a field has been set.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) HasStandardStartValue() bool {
	if o != nil && !IsNil(o.StandardStartValue) {
		return true
	}

	return false
}

// SetStandardStartValue gets a reference to the given int64 and assigns it to the StandardStartValue field.
func (o *UnibeeApiBeanMetricPlanChargeBindingParam) SetStandardStartValue(v int64) {
	o.StandardStartValue = &v
}

func (o UnibeeApiBeanMetricPlanChargeBindingParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanMetricPlanChargeBindingParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChargeType) {
		toSerialize["chargeType"] = o.ChargeType
	}
	if !IsNil(o.GraduatedAmounts) {
		toSerialize["graduatedAmounts"] = o.GraduatedAmounts
	}
	toSerialize["metricId"] = o.MetricId
	if !IsNil(o.StandardAmount) {
		toSerialize["standardAmount"] = o.StandardAmount
	}
	if !IsNil(o.StandardStartValue) {
		toSerialize["standardStartValue"] = o.StandardStartValue
	}
	return toSerialize, nil
}

func (o *UnibeeApiBeanMetricPlanChargeBindingParam) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"metricId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiBeanMetricPlanChargeBindingParam := _UnibeeApiBeanMetricPlanChargeBindingParam{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUnibeeApiBeanMetricPlanChargeBindingParam)

	if err != nil {
		return err
	}

	*o = UnibeeApiBeanMetricPlanChargeBindingParam(varUnibeeApiBeanMetricPlanChargeBindingParam)

	return err
}

type NullableUnibeeApiBeanMetricPlanChargeBindingParam struct {
	value *UnibeeApiBeanMetricPlanChargeBindingParam
	isSet bool
}

func (v NullableUnibeeApiBeanMetricPlanChargeBindingParam) Get() *UnibeeApiBeanMetricPlanChargeBindingParam {
	return v.value
}

func (v *NullableUnibeeApiBeanMetricPlanChargeBindingParam) Set(val *UnibeeApiBeanMetricPlanChargeBindingParam) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanMetricPlanChargeBindingParam) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanMetricPlanChargeBindingParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanMetricPlanChargeBindingParam(val *UnibeeApiBeanMetricPlanChargeBindingParam) *NullableUnibeeApiBeanMetricPlanChargeBindingParam {
	return &NullableUnibeeApiBeanMetricPlanChargeBindingParam{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanMetricPlanChargeBindingParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanMetricPlanChargeBindingParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


