/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509290914
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiSystemInformationLanguage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiSystemInformationLanguage{}

// UnibeeApiSystemInformationLanguage struct for UnibeeApiSystemInformationLanguage
type UnibeeApiSystemInformationLanguage struct {
	// Language code (e.g., en, ru, vi, cn, pt)
	Code *string `json:"code,omitempty"`
	// Language full name (e.g., English, Russian, Vietnamese, Chinese, Portuguese)
	FullName *string `json:"fullName,omitempty"`
}

// NewUnibeeApiSystemInformationLanguage instantiates a new UnibeeApiSystemInformationLanguage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiSystemInformationLanguage() *UnibeeApiSystemInformationLanguage {
	this := UnibeeApiSystemInformationLanguage{}
	return &this
}

// NewUnibeeApiSystemInformationLanguageWithDefaults instantiates a new UnibeeApiSystemInformationLanguage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiSystemInformationLanguageWithDefaults() *UnibeeApiSystemInformationLanguage {
	this := UnibeeApiSystemInformationLanguage{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *UnibeeApiSystemInformationLanguage) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiSystemInformationLanguage) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *UnibeeApiSystemInformationLanguage) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *UnibeeApiSystemInformationLanguage) SetCode(v string) {
	o.Code = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *UnibeeApiSystemInformationLanguage) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiSystemInformationLanguage) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *UnibeeApiSystemInformationLanguage) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *UnibeeApiSystemInformationLanguage) SetFullName(v string) {
	o.FullName = &v
}

func (o UnibeeApiSystemInformationLanguage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiSystemInformationLanguage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	return toSerialize, nil
}

type NullableUnibeeApiSystemInformationLanguage struct {
	value *UnibeeApiSystemInformationLanguage
	isSet bool
}

func (v NullableUnibeeApiSystemInformationLanguage) Get() *UnibeeApiSystemInformationLanguage {
	return v.value
}

func (v *NullableUnibeeApiSystemInformationLanguage) Set(val *UnibeeApiSystemInformationLanguage) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiSystemInformationLanguage) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiSystemInformationLanguage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiSystemInformationLanguage(val *UnibeeApiSystemInformationLanguage) *NullableUnibeeApiSystemInformationLanguage {
	return &NullableUnibeeApiSystemInformationLanguage{value: val, isSet: true}
}

func (v NullableUnibeeApiSystemInformationLanguage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiSystemInformationLanguage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


