/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508041414
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantUserNewAdminNoteReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantUserNewAdminNoteReq{}

// UnibeeApiMerchantUserNewAdminNoteReq struct for UnibeeApiMerchantUserNewAdminNoteReq
type UnibeeApiMerchantUserNewAdminNoteReq struct {
	// Note
	Note string `json:"note"`
	// The id of user, either ExternalUserId or UserId needed
	UserId int64 `json:"userId"`
}

type _UnibeeApiMerchantUserNewAdminNoteReq UnibeeApiMerchantUserNewAdminNoteReq

// NewUnibeeApiMerchantUserNewAdminNoteReq instantiates a new UnibeeApiMerchantUserNewAdminNoteReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantUserNewAdminNoteReq(note string, userId int64) *UnibeeApiMerchantUserNewAdminNoteReq {
	this := UnibeeApiMerchantUserNewAdminNoteReq{}
	this.Note = note
	this.UserId = userId
	return &this
}

// NewUnibeeApiMerchantUserNewAdminNoteReqWithDefaults instantiates a new UnibeeApiMerchantUserNewAdminNoteReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantUserNewAdminNoteReqWithDefaults() *UnibeeApiMerchantUserNewAdminNoteReq {
	this := UnibeeApiMerchantUserNewAdminNoteReq{}
	return &this
}

// GetNote returns the Note field value
func (o *UnibeeApiMerchantUserNewAdminNoteReq) GetNote() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Note
}

// GetNoteOk returns a tuple with the Note field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantUserNewAdminNoteReq) GetNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Note, true
}

// SetNote sets field value
func (o *UnibeeApiMerchantUserNewAdminNoteReq) SetNote(v string) {
	o.Note = v
}

// GetUserId returns the UserId field value
func (o *UnibeeApiMerchantUserNewAdminNoteReq) GetUserId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantUserNewAdminNoteReq) GetUserIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *UnibeeApiMerchantUserNewAdminNoteReq) SetUserId(v int64) {
	o.UserId = v
}

func (o UnibeeApiMerchantUserNewAdminNoteReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantUserNewAdminNoteReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["note"] = o.Note
	toSerialize["userId"] = o.UserId
	return toSerialize, nil
}

func (o *UnibeeApiMerchantUserNewAdminNoteReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"note",
		"userId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantUserNewAdminNoteReq := _UnibeeApiMerchantUserNewAdminNoteReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varUnibeeApiMerchantUserNewAdminNoteReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantUserNewAdminNoteReq(varUnibeeApiMerchantUserNewAdminNoteReq)

	return err
}

type NullableUnibeeApiMerchantUserNewAdminNoteReq struct {
	value *UnibeeApiMerchantUserNewAdminNoteReq
	isSet bool
}

func (v NullableUnibeeApiMerchantUserNewAdminNoteReq) Get() *UnibeeApiMerchantUserNewAdminNoteReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantUserNewAdminNoteReq) Set(val *UnibeeApiMerchantUserNewAdminNoteReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantUserNewAdminNoteReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantUserNewAdminNoteReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantUserNewAdminNoteReq(val *UnibeeApiMerchantUserNewAdminNoteReq) *NullableUnibeeApiMerchantUserNewAdminNoteReq {
	return &NullableUnibeeApiMerchantUserNewAdminNoteReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantUserNewAdminNoteReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantUserNewAdminNoteReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


