/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202510192014
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantEmailSendEmailToUserReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantEmailSendEmailToUserReq{}

// UnibeeApiMerchantEmailSendEmailToUserReq struct for UnibeeApiMerchantEmailSendEmailToUserReq
type UnibeeApiMerchantEmailSendEmailToUserReq struct {
	// AttachInvoiceId
	AttachInvoiceId *string `json:"attachInvoiceId,omitempty"`
	Content *string `json:"content,omitempty"`
	// Email
	Email string `json:"email"`
	// GatewayTemplateId
	GatewayTemplateId *string `json:"gatewayTemplateId,omitempty"`
	Subject *string `json:"subject,omitempty"`
	// Variablesï¼ŒMap
	Variables *map[string]interface{} `json:"variables,omitempty"`
}

type _UnibeeApiMerchantEmailSendEmailToUserReq UnibeeApiMerchantEmailSendEmailToUserReq

// NewUnibeeApiMerchantEmailSendEmailToUserReq instantiates a new UnibeeApiMerchantEmailSendEmailToUserReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantEmailSendEmailToUserReq(email string) *UnibeeApiMerchantEmailSendEmailToUserReq {
	this := UnibeeApiMerchantEmailSendEmailToUserReq{}
	this.Email = email
	return &this
}

// NewUnibeeApiMerchantEmailSendEmailToUserReqWithDefaults instantiates a new UnibeeApiMerchantEmailSendEmailToUserReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantEmailSendEmailToUserReqWithDefaults() *UnibeeApiMerchantEmailSendEmailToUserReq {
	this := UnibeeApiMerchantEmailSendEmailToUserReq{}
	return &this
}

// GetAttachInvoiceId returns the AttachInvoiceId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetAttachInvoiceId() string {
	if o == nil || IsNil(o.AttachInvoiceId) {
		var ret string
		return ret
	}
	return *o.AttachInvoiceId
}

// GetAttachInvoiceIdOk returns a tuple with the AttachInvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetAttachInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttachInvoiceId) {
		return nil, false
	}
	return o.AttachInvoiceId, true
}

// HasAttachInvoiceId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) HasAttachInvoiceId() bool {
	if o != nil && !IsNil(o.AttachInvoiceId) {
		return true
	}

	return false
}

// SetAttachInvoiceId gets a reference to the given string and assigns it to the AttachInvoiceId field.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) SetAttachInvoiceId(v string) {
	o.AttachInvoiceId = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) SetContent(v string) {
	o.Content = &v
}

// GetEmail returns the Email field value
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) SetEmail(v string) {
	o.Email = v
}

// GetGatewayTemplateId returns the GatewayTemplateId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetGatewayTemplateId() string {
	if o == nil || IsNil(o.GatewayTemplateId) {
		var ret string
		return ret
	}
	return *o.GatewayTemplateId
}

// GetGatewayTemplateIdOk returns a tuple with the GatewayTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetGatewayTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayTemplateId) {
		return nil, false
	}
	return o.GatewayTemplateId, true
}

// HasGatewayTemplateId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) HasGatewayTemplateId() bool {
	if o != nil && !IsNil(o.GatewayTemplateId) {
		return true
	}

	return false
}

// SetGatewayTemplateId gets a reference to the given string and assigns it to the GatewayTemplateId field.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) SetGatewayTemplateId(v string) {
	o.GatewayTemplateId = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) SetSubject(v string) {
	o.Subject = &v
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetVariables() map[string]interface{} {
	if o == nil || IsNil(o.Variables) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) GetVariablesOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Variables) {
		return nil, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]interface{} and assigns it to the Variables field.
func (o *UnibeeApiMerchantEmailSendEmailToUserReq) SetVariables(v map[string]interface{}) {
	o.Variables = &v
}

func (o UnibeeApiMerchantEmailSendEmailToUserReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantEmailSendEmailToUserReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttachInvoiceId) {
		toSerialize["attachInvoiceId"] = o.AttachInvoiceId
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	toSerialize["email"] = o.Email
	if !IsNil(o.GatewayTemplateId) {
		toSerialize["gatewayTemplateId"] = o.GatewayTemplateId
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Variables) {
		toSerialize["variables"] = o.Variables
	}
	return toSerialize, nil
}

func (o *UnibeeApiMerchantEmailSendEmailToUserReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantEmailSendEmailToUserReq := _UnibeeApiMerchantEmailSendEmailToUserReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varUnibeeApiMerchantEmailSendEmailToUserReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantEmailSendEmailToUserReq(varUnibeeApiMerchantEmailSendEmailToUserReq)

	return err
}

type NullableUnibeeApiMerchantEmailSendEmailToUserReq struct {
	value *UnibeeApiMerchantEmailSendEmailToUserReq
	isSet bool
}

func (v NullableUnibeeApiMerchantEmailSendEmailToUserReq) Get() *UnibeeApiMerchantEmailSendEmailToUserReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantEmailSendEmailToUserReq) Set(val *UnibeeApiMerchantEmailSendEmailToUserReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantEmailSendEmailToUserReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantEmailSendEmailToUserReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantEmailSendEmailToUserReq(val *UnibeeApiMerchantEmailSendEmailToUserReq) *NullableUnibeeApiMerchantEmailSendEmailToUserReq {
	return &NullableUnibeeApiMerchantEmailSendEmailToUserReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantEmailSendEmailToUserReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantEmailSendEmailToUserReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


