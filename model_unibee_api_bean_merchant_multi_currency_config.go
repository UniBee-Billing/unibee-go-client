/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509290914
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanMerchantMultiCurrencyConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanMerchantMultiCurrencyConfig{}

// UnibeeApiBeanMerchantMultiCurrencyConfig struct for UnibeeApiBeanMerchantMultiCurrencyConfig
type UnibeeApiBeanMerchantMultiCurrencyConfig struct {
	CurrencyConfigs []UnibeeApiBeanMerchantCurrencyConfig `json:"currencyConfigs,omitempty"`
	DefaultCurrency *string `json:"defaultCurrency,omitempty"`
	// Last Update UTC Time
	LastUpdateTime *int64 `json:"lastUpdateTime,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewUnibeeApiBeanMerchantMultiCurrencyConfig instantiates a new UnibeeApiBeanMerchantMultiCurrencyConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanMerchantMultiCurrencyConfig() *UnibeeApiBeanMerchantMultiCurrencyConfig {
	this := UnibeeApiBeanMerchantMultiCurrencyConfig{}
	return &this
}

// NewUnibeeApiBeanMerchantMultiCurrencyConfigWithDefaults instantiates a new UnibeeApiBeanMerchantMultiCurrencyConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanMerchantMultiCurrencyConfigWithDefaults() *UnibeeApiBeanMerchantMultiCurrencyConfig {
	this := UnibeeApiBeanMerchantMultiCurrencyConfig{}
	return &this
}

// GetCurrencyConfigs returns the CurrencyConfigs field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) GetCurrencyConfigs() []UnibeeApiBeanMerchantCurrencyConfig {
	if o == nil || IsNil(o.CurrencyConfigs) {
		var ret []UnibeeApiBeanMerchantCurrencyConfig
		return ret
	}
	return o.CurrencyConfigs
}

// GetCurrencyConfigsOk returns a tuple with the CurrencyConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) GetCurrencyConfigsOk() ([]UnibeeApiBeanMerchantCurrencyConfig, bool) {
	if o == nil || IsNil(o.CurrencyConfigs) {
		return nil, false
	}
	return o.CurrencyConfigs, true
}

// HasCurrencyConfigs returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) HasCurrencyConfigs() bool {
	if o != nil && !IsNil(o.CurrencyConfigs) {
		return true
	}

	return false
}

// SetCurrencyConfigs gets a reference to the given []UnibeeApiBeanMerchantCurrencyConfig and assigns it to the CurrencyConfigs field.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) SetCurrencyConfigs(v []UnibeeApiBeanMerchantCurrencyConfig) {
	o.CurrencyConfigs = v
}

// GetDefaultCurrency returns the DefaultCurrency field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) GetDefaultCurrency() string {
	if o == nil || IsNil(o.DefaultCurrency) {
		var ret string
		return ret
	}
	return *o.DefaultCurrency
}

// GetDefaultCurrencyOk returns a tuple with the DefaultCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) GetDefaultCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultCurrency) {
		return nil, false
	}
	return o.DefaultCurrency, true
}

// HasDefaultCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) HasDefaultCurrency() bool {
	if o != nil && !IsNil(o.DefaultCurrency) {
		return true
	}

	return false
}

// SetDefaultCurrency gets a reference to the given string and assigns it to the DefaultCurrency field.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) SetDefaultCurrency(v string) {
	o.DefaultCurrency = &v
}

// GetLastUpdateTime returns the LastUpdateTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) GetLastUpdateTime() int64 {
	if o == nil || IsNil(o.LastUpdateTime) {
		var ret int64
		return ret
	}
	return *o.LastUpdateTime
}

// GetLastUpdateTimeOk returns a tuple with the LastUpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) GetLastUpdateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdateTime) {
		return nil, false
	}
	return o.LastUpdateTime, true
}

// HasLastUpdateTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) HasLastUpdateTime() bool {
	if o != nil && !IsNil(o.LastUpdateTime) {
		return true
	}

	return false
}

// SetLastUpdateTime gets a reference to the given int64 and assigns it to the LastUpdateTime field.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) SetLastUpdateTime(v int64) {
	o.LastUpdateTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UnibeeApiBeanMerchantMultiCurrencyConfig) SetName(v string) {
	o.Name = &v
}

func (o UnibeeApiBeanMerchantMultiCurrencyConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanMerchantMultiCurrencyConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrencyConfigs) {
		toSerialize["currencyConfigs"] = o.CurrencyConfigs
	}
	if !IsNil(o.DefaultCurrency) {
		toSerialize["defaultCurrency"] = o.DefaultCurrency
	}
	if !IsNil(o.LastUpdateTime) {
		toSerialize["lastUpdateTime"] = o.LastUpdateTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanMerchantMultiCurrencyConfig struct {
	value *UnibeeApiBeanMerchantMultiCurrencyConfig
	isSet bool
}

func (v NullableUnibeeApiBeanMerchantMultiCurrencyConfig) Get() *UnibeeApiBeanMerchantMultiCurrencyConfig {
	return v.value
}

func (v *NullableUnibeeApiBeanMerchantMultiCurrencyConfig) Set(val *UnibeeApiBeanMerchantMultiCurrencyConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanMerchantMultiCurrencyConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanMerchantMultiCurrencyConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanMerchantMultiCurrencyConfig(val *UnibeeApiBeanMerchantMultiCurrencyConfig) *NullableUnibeeApiBeanMerchantMultiCurrencyConfig {
	return &NullableUnibeeApiBeanMerchantMultiCurrencyConfig{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanMerchantMultiCurrencyConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanMerchantMultiCurrencyConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


