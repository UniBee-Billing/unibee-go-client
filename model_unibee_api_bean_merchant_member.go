/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508150435
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanMerchantMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanMerchantMember{}

// UnibeeApiBeanMerchantMember struct for UnibeeApiBeanMerchantMember
type UnibeeApiBeanMerchantMember struct {
	// create utc time
	CreateTime *int64 `json:"createTime,omitempty"`
	// email
	Email *string `json:"email,omitempty"`
	// first name
	FirstName *string `json:"firstName,omitempty"`
	// userId
	Id *int64 `json:"id,omitempty"`
	// is blank password
	IsBlankPasswd *bool `json:"isBlankPasswd,omitempty"`
	// Check Member is Owner
	IsOwner *bool `json:"isOwner,omitempty"`
	// last name
	LastName *string `json:"lastName,omitempty"`
	// merchant id
	MerchantId *int64 `json:"merchantId,omitempty"`
	// mobile
	Mobile *string `json:"mobile,omitempty"`
	// List of connected OAuth accounts
	OauthAccounts []UnibeeApiBeanOauth `json:"oauthAccounts,omitempty"`
	// 0-Inactive, 1-General, Google Authenticator | 2-Microsoft Authenticator | 3-Authy | 4-1Password | 5-LastPass | 6-FreeOTP | 7-Other TOTP
	TotpType *int32 `json:"totpType,omitempty"`
}

// NewUnibeeApiBeanMerchantMember instantiates a new UnibeeApiBeanMerchantMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanMerchantMember() *UnibeeApiBeanMerchantMember {
	this := UnibeeApiBeanMerchantMember{}
	return &this
}

// NewUnibeeApiBeanMerchantMemberWithDefaults instantiates a new UnibeeApiBeanMerchantMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanMerchantMemberWithDefaults() *UnibeeApiBeanMerchantMember {
	this := UnibeeApiBeanMerchantMember{}
	return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMember) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMember) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMember) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *UnibeeApiBeanMerchantMember) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMember) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMember) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMember) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UnibeeApiBeanMerchantMember) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMember) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMember) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMember) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *UnibeeApiBeanMerchantMember) SetFirstName(v string) {
	o.FirstName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMember) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMember) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMember) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UnibeeApiBeanMerchantMember) SetId(v int64) {
	o.Id = &v
}

// GetIsBlankPasswd returns the IsBlankPasswd field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMember) GetIsBlankPasswd() bool {
	if o == nil || IsNil(o.IsBlankPasswd) {
		var ret bool
		return ret
	}
	return *o.IsBlankPasswd
}

// GetIsBlankPasswdOk returns a tuple with the IsBlankPasswd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMember) GetIsBlankPasswdOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBlankPasswd) {
		return nil, false
	}
	return o.IsBlankPasswd, true
}

// HasIsBlankPasswd returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMember) HasIsBlankPasswd() bool {
	if o != nil && !IsNil(o.IsBlankPasswd) {
		return true
	}

	return false
}

// SetIsBlankPasswd gets a reference to the given bool and assigns it to the IsBlankPasswd field.
func (o *UnibeeApiBeanMerchantMember) SetIsBlankPasswd(v bool) {
	o.IsBlankPasswd = &v
}

// GetIsOwner returns the IsOwner field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMember) GetIsOwner() bool {
	if o == nil || IsNil(o.IsOwner) {
		var ret bool
		return ret
	}
	return *o.IsOwner
}

// GetIsOwnerOk returns a tuple with the IsOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMember) GetIsOwnerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOwner) {
		return nil, false
	}
	return o.IsOwner, true
}

// HasIsOwner returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMember) HasIsOwner() bool {
	if o != nil && !IsNil(o.IsOwner) {
		return true
	}

	return false
}

// SetIsOwner gets a reference to the given bool and assigns it to the IsOwner field.
func (o *UnibeeApiBeanMerchantMember) SetIsOwner(v bool) {
	o.IsOwner = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMember) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMember) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMember) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *UnibeeApiBeanMerchantMember) SetLastName(v string) {
	o.LastName = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMember) GetMerchantId() int64 {
	if o == nil || IsNil(o.MerchantId) {
		var ret int64
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMember) GetMerchantIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMember) HasMerchantId() bool {
	if o != nil && !IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given int64 and assigns it to the MerchantId field.
func (o *UnibeeApiBeanMerchantMember) SetMerchantId(v int64) {
	o.MerchantId = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMember) GetMobile() string {
	if o == nil || IsNil(o.Mobile) {
		var ret string
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMember) GetMobileOk() (*string, bool) {
	if o == nil || IsNil(o.Mobile) {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMember) HasMobile() bool {
	if o != nil && !IsNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given string and assigns it to the Mobile field.
func (o *UnibeeApiBeanMerchantMember) SetMobile(v string) {
	o.Mobile = &v
}

// GetOauthAccounts returns the OauthAccounts field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMember) GetOauthAccounts() []UnibeeApiBeanOauth {
	if o == nil || IsNil(o.OauthAccounts) {
		var ret []UnibeeApiBeanOauth
		return ret
	}
	return o.OauthAccounts
}

// GetOauthAccountsOk returns a tuple with the OauthAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMember) GetOauthAccountsOk() ([]UnibeeApiBeanOauth, bool) {
	if o == nil || IsNil(o.OauthAccounts) {
		return nil, false
	}
	return o.OauthAccounts, true
}

// HasOauthAccounts returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMember) HasOauthAccounts() bool {
	if o != nil && !IsNil(o.OauthAccounts) {
		return true
	}

	return false
}

// SetOauthAccounts gets a reference to the given []UnibeeApiBeanOauth and assigns it to the OauthAccounts field.
func (o *UnibeeApiBeanMerchantMember) SetOauthAccounts(v []UnibeeApiBeanOauth) {
	o.OauthAccounts = v
}

// GetTotpType returns the TotpType field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMember) GetTotpType() int32 {
	if o == nil || IsNil(o.TotpType) {
		var ret int32
		return ret
	}
	return *o.TotpType
}

// GetTotpTypeOk returns a tuple with the TotpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMember) GetTotpTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.TotpType) {
		return nil, false
	}
	return o.TotpType, true
}

// HasTotpType returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMember) HasTotpType() bool {
	if o != nil && !IsNil(o.TotpType) {
		return true
	}

	return false
}

// SetTotpType gets a reference to the given int32 and assigns it to the TotpType field.
func (o *UnibeeApiBeanMerchantMember) SetTotpType(v int32) {
	o.TotpType = &v
}

func (o UnibeeApiBeanMerchantMember) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanMerchantMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsBlankPasswd) {
		toSerialize["isBlankPasswd"] = o.IsBlankPasswd
	}
	if !IsNil(o.IsOwner) {
		toSerialize["isOwner"] = o.IsOwner
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.MerchantId) {
		toSerialize["merchantId"] = o.MerchantId
	}
	if !IsNil(o.Mobile) {
		toSerialize["mobile"] = o.Mobile
	}
	if !IsNil(o.OauthAccounts) {
		toSerialize["oauthAccounts"] = o.OauthAccounts
	}
	if !IsNil(o.TotpType) {
		toSerialize["totpType"] = o.TotpType
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanMerchantMember struct {
	value *UnibeeApiBeanMerchantMember
	isSet bool
}

func (v NullableUnibeeApiBeanMerchantMember) Get() *UnibeeApiBeanMerchantMember {
	return v.value
}

func (v *NullableUnibeeApiBeanMerchantMember) Set(val *UnibeeApiBeanMerchantMember) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanMerchantMember) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanMerchantMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanMerchantMember(val *UnibeeApiBeanMerchantMember) *NullableUnibeeApiBeanMerchantMember {
	return &NullableUnibeeApiBeanMerchantMember{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanMerchantMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanMerchantMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


