/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509191247
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantPlanArchiveReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantPlanArchiveReq{}

// UnibeeApiMerchantPlanArchiveReq struct for UnibeeApiMerchantPlanArchiveReq
type UnibeeApiMerchantPlanArchiveReq struct {
	// The ExternalId of plan, either externalPlanId or planId should be set
	ExternalPlanId *string `json:"externalPlanId,omitempty"`
	// Hard Archive
	HardArchive *bool `json:"hardArchive,omitempty"`
	// The Id of plan, either planId or externalPlanId should be set
	PlanId *int64 `json:"planId,omitempty"`
}

// NewUnibeeApiMerchantPlanArchiveReq instantiates a new UnibeeApiMerchantPlanArchiveReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantPlanArchiveReq() *UnibeeApiMerchantPlanArchiveReq {
	this := UnibeeApiMerchantPlanArchiveReq{}
	return &this
}

// NewUnibeeApiMerchantPlanArchiveReqWithDefaults instantiates a new UnibeeApiMerchantPlanArchiveReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantPlanArchiveReqWithDefaults() *UnibeeApiMerchantPlanArchiveReq {
	this := UnibeeApiMerchantPlanArchiveReq{}
	return &this
}

// GetExternalPlanId returns the ExternalPlanId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantPlanArchiveReq) GetExternalPlanId() string {
	if o == nil || IsNil(o.ExternalPlanId) {
		var ret string
		return ret
	}
	return *o.ExternalPlanId
}

// GetExternalPlanIdOk returns a tuple with the ExternalPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantPlanArchiveReq) GetExternalPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalPlanId) {
		return nil, false
	}
	return o.ExternalPlanId, true
}

// HasExternalPlanId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantPlanArchiveReq) HasExternalPlanId() bool {
	if o != nil && !IsNil(o.ExternalPlanId) {
		return true
	}

	return false
}

// SetExternalPlanId gets a reference to the given string and assigns it to the ExternalPlanId field.
func (o *UnibeeApiMerchantPlanArchiveReq) SetExternalPlanId(v string) {
	o.ExternalPlanId = &v
}

// GetHardArchive returns the HardArchive field value if set, zero value otherwise.
func (o *UnibeeApiMerchantPlanArchiveReq) GetHardArchive() bool {
	if o == nil || IsNil(o.HardArchive) {
		var ret bool
		return ret
	}
	return *o.HardArchive
}

// GetHardArchiveOk returns a tuple with the HardArchive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantPlanArchiveReq) GetHardArchiveOk() (*bool, bool) {
	if o == nil || IsNil(o.HardArchive) {
		return nil, false
	}
	return o.HardArchive, true
}

// HasHardArchive returns a boolean if a field has been set.
func (o *UnibeeApiMerchantPlanArchiveReq) HasHardArchive() bool {
	if o != nil && !IsNil(o.HardArchive) {
		return true
	}

	return false
}

// SetHardArchive gets a reference to the given bool and assigns it to the HardArchive field.
func (o *UnibeeApiMerchantPlanArchiveReq) SetHardArchive(v bool) {
	o.HardArchive = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantPlanArchiveReq) GetPlanId() int64 {
	if o == nil || IsNil(o.PlanId) {
		var ret int64
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantPlanArchiveReq) GetPlanIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantPlanArchiveReq) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given int64 and assigns it to the PlanId field.
func (o *UnibeeApiMerchantPlanArchiveReq) SetPlanId(v int64) {
	o.PlanId = &v
}

func (o UnibeeApiMerchantPlanArchiveReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantPlanArchiveReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalPlanId) {
		toSerialize["externalPlanId"] = o.ExternalPlanId
	}
	if !IsNil(o.HardArchive) {
		toSerialize["hardArchive"] = o.HardArchive
	}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantPlanArchiveReq struct {
	value *UnibeeApiMerchantPlanArchiveReq
	isSet bool
}

func (v NullableUnibeeApiMerchantPlanArchiveReq) Get() *UnibeeApiMerchantPlanArchiveReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantPlanArchiveReq) Set(val *UnibeeApiMerchantPlanArchiveReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantPlanArchiveReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantPlanArchiveReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantPlanArchiveReq(val *UnibeeApiMerchantPlanArchiveReq) *NullableUnibeeApiMerchantPlanArchiveReq {
	return &NullableUnibeeApiMerchantPlanArchiveReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantPlanArchiveReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantPlanArchiveReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


