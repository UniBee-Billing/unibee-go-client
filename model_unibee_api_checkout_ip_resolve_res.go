/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202506261206
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiCheckoutIpResolveRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiCheckoutIpResolveRes{}

// UnibeeApiCheckoutIpResolveRes struct for UnibeeApiCheckoutIpResolveRes
type UnibeeApiCheckoutIpResolveRes struct {
	Location map[string]interface{} `json:"location,omitempty"`
}

// NewUnibeeApiCheckoutIpResolveRes instantiates a new UnibeeApiCheckoutIpResolveRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiCheckoutIpResolveRes() *UnibeeApiCheckoutIpResolveRes {
	this := UnibeeApiCheckoutIpResolveRes{}
	return &this
}

// NewUnibeeApiCheckoutIpResolveResWithDefaults instantiates a new UnibeeApiCheckoutIpResolveRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiCheckoutIpResolveResWithDefaults() *UnibeeApiCheckoutIpResolveRes {
	this := UnibeeApiCheckoutIpResolveRes{}
	return &this
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *UnibeeApiCheckoutIpResolveRes) GetLocation() map[string]interface{} {
	if o == nil || IsNil(o.Location) {
		var ret map[string]interface{}
		return ret
	}
	return o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiCheckoutIpResolveRes) GetLocationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Location) {
		return map[string]interface{}{}, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *UnibeeApiCheckoutIpResolveRes) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given map[string]interface{} and assigns it to the Location field.
func (o *UnibeeApiCheckoutIpResolveRes) SetLocation(v map[string]interface{}) {
	o.Location = v
}

func (o UnibeeApiCheckoutIpResolveRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiCheckoutIpResolveRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	return toSerialize, nil
}

type NullableUnibeeApiCheckoutIpResolveRes struct {
	value *UnibeeApiCheckoutIpResolveRes
	isSet bool
}

func (v NullableUnibeeApiCheckoutIpResolveRes) Get() *UnibeeApiCheckoutIpResolveRes {
	return v.value
}

func (v *NullableUnibeeApiCheckoutIpResolveRes) Set(val *UnibeeApiCheckoutIpResolveRes) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiCheckoutIpResolveRes) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiCheckoutIpResolveRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiCheckoutIpResolveRes(val *UnibeeApiCheckoutIpResolveRes) *NullableUnibeeApiCheckoutIpResolveRes {
	return &NullableUnibeeApiCheckoutIpResolveRes{value: val, isSet: true}
}

func (v NullableUnibeeApiCheckoutIpResolveRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiCheckoutIpResolveRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


