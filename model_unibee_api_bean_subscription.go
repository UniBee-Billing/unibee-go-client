/*
OpenAPI UniBee

This is UniBee Api Server

API version: buildtime:202408150845 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanSubscription{}

// UnibeeApiBeanSubscription struct for UnibeeApiBeanSubscription
type UnibeeApiBeanSubscription struct {
	// plan addon json data
	AddonData *string `json:"addonData,omitempty"`
	// amount, cent
	Amount *int64 `json:"amount,omitempty"`
	// billing_cycle_anchor
	BillingCycleAnchor *int64 `json:"billingCycleAnchor,omitempty"`
	// whether cancel at period end，0-false | 1-true
	CancelAtPeriodEnd *int32 `json:"cancelAtPeriodEnd,omitempty"`
	CancelReason *string `json:"cancelReason,omitempty"`
	CountryCode *string `json:"countryCode,omitempty"`
	// create utc time
	CreateTime *int64 `json:"createTime,omitempty"`
	// currency
	Currency *string `json:"currency,omitempty"`
	// current_period_end, utc time
	CurrentPeriodEnd *int64 `json:"currentPeriodEnd,omitempty"`
	// current_period_start, utc time
	CurrentPeriodStart *int64 `json:"currentPeriodStart,omitempty"`
	DefaultPaymentMethodId *string `json:"defaultPaymentMethodId,omitempty"`
	// dunning_time, utc time
	DunningTime *int64 `json:"dunningTime,omitempty"`
	// external_subscription_id
	ExternalSubscriptionId *string `json:"externalSubscriptionId,omitempty"`
	// features
	Features *string `json:"features,omitempty"`
	// first success payment time
	FirstPaidTime *int64 `json:"firstPaidTime,omitempty"`
	// who pay the gas, merchant|user
	GasPayer *string `json:"gasPayer,omitempty"`
	// gateway_id
	GatewayId *int64 `json:"gatewayId,omitempty"`
	// gateway status，Stripe：https://stripe.com/docs/billing/subscriptions/webhooks  Paypal：https://developer.paypal.com/docs/api/subscriptions/v1/#subscriptions_get
	GatewayStatus *string `json:"gatewayStatus,omitempty"`
	Id *int64 `json:"id,omitempty"`
	LastUpdateTime *int64 `json:"lastUpdateTime,omitempty"`
	// latest_invoice_id
	LatestInvoiceId *string `json:"latestInvoiceId,omitempty"`
	Link *string `json:"link,omitempty"`
	// merchant id
	MerchantId *int64 `json:"merchantId,omitempty"`
	Metadata *map[string]interface{} `json:"metadata,omitempty"`
	PendingUpdateId *string `json:"pendingUpdateId,omitempty"`
	// plan id
	PlanId *int64 `json:"planId,omitempty"`
	// product id
	ProductId *int64 `json:"productId,omitempty"`
	// quantity
	Quantity *int64 `json:"quantity,omitempty"`
	ReturnUrl *string `json:"returnUrl,omitempty"`
	// status，1-Pending｜2-Active｜3-PendingInActive | 4-Cancel | 5-Expire | 6- Suspend| 7-Incomplete | 8-Processing | 9- Failed
	Status *int32 `json:"status,omitempty"`
	// subscription id
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// task_time
	TaskTime *string `json:"taskTime,omitempty"`
	// TaxPercentage，1000 = 10%
	TaxPercentage *int64 `json:"taxPercentage,omitempty"`
	// test_clock, simulator clock for subscription, if set , sub will out of cronjob controll
	TestClock *int64 `json:"testClock,omitempty"`
	// trial_end, utc time
	TrialEnd *int64 `json:"trialEnd,omitempty"`
	// sub type, 0-gateway sub, 1-unibee sub
	Type *int32 `json:"type,omitempty"`
	// userId
	UserId *int64 `json:"userId,omitempty"`
	VatNumber *string `json:"vatNumber,omitempty"`
}

// NewUnibeeApiBeanSubscription instantiates a new UnibeeApiBeanSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanSubscription() *UnibeeApiBeanSubscription {
	this := UnibeeApiBeanSubscription{}
	return &this
}

// NewUnibeeApiBeanSubscriptionWithDefaults instantiates a new UnibeeApiBeanSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanSubscriptionWithDefaults() *UnibeeApiBeanSubscription {
	this := UnibeeApiBeanSubscription{}
	return &this
}

// GetAddonData returns the AddonData field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetAddonData() string {
	if o == nil || IsNil(o.AddonData) {
		var ret string
		return ret
	}
	return *o.AddonData
}

// GetAddonDataOk returns a tuple with the AddonData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetAddonDataOk() (*string, bool) {
	if o == nil || IsNil(o.AddonData) {
		return nil, false
	}
	return o.AddonData, true
}

// HasAddonData returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasAddonData() bool {
	if o != nil && !IsNil(o.AddonData) {
		return true
	}

	return false
}

// SetAddonData gets a reference to the given string and assigns it to the AddonData field.
func (o *UnibeeApiBeanSubscription) SetAddonData(v string) {
	o.AddonData = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetAmount() int64 {
	if o == nil || IsNil(o.Amount) {
		var ret int64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int64 and assigns it to the Amount field.
func (o *UnibeeApiBeanSubscription) SetAmount(v int64) {
	o.Amount = &v
}

// GetBillingCycleAnchor returns the BillingCycleAnchor field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetBillingCycleAnchor() int64 {
	if o == nil || IsNil(o.BillingCycleAnchor) {
		var ret int64
		return ret
	}
	return *o.BillingCycleAnchor
}

// GetBillingCycleAnchorOk returns a tuple with the BillingCycleAnchor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetBillingCycleAnchorOk() (*int64, bool) {
	if o == nil || IsNil(o.BillingCycleAnchor) {
		return nil, false
	}
	return o.BillingCycleAnchor, true
}

// HasBillingCycleAnchor returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasBillingCycleAnchor() bool {
	if o != nil && !IsNil(o.BillingCycleAnchor) {
		return true
	}

	return false
}

// SetBillingCycleAnchor gets a reference to the given int64 and assigns it to the BillingCycleAnchor field.
func (o *UnibeeApiBeanSubscription) SetBillingCycleAnchor(v int64) {
	o.BillingCycleAnchor = &v
}

// GetCancelAtPeriodEnd returns the CancelAtPeriodEnd field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetCancelAtPeriodEnd() int32 {
	if o == nil || IsNil(o.CancelAtPeriodEnd) {
		var ret int32
		return ret
	}
	return *o.CancelAtPeriodEnd
}

// GetCancelAtPeriodEndOk returns a tuple with the CancelAtPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetCancelAtPeriodEndOk() (*int32, bool) {
	if o == nil || IsNil(o.CancelAtPeriodEnd) {
		return nil, false
	}
	return o.CancelAtPeriodEnd, true
}

// HasCancelAtPeriodEnd returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasCancelAtPeriodEnd() bool {
	if o != nil && !IsNil(o.CancelAtPeriodEnd) {
		return true
	}

	return false
}

// SetCancelAtPeriodEnd gets a reference to the given int32 and assigns it to the CancelAtPeriodEnd field.
func (o *UnibeeApiBeanSubscription) SetCancelAtPeriodEnd(v int32) {
	o.CancelAtPeriodEnd = &v
}

// GetCancelReason returns the CancelReason field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetCancelReason() string {
	if o == nil || IsNil(o.CancelReason) {
		var ret string
		return ret
	}
	return *o.CancelReason
}

// GetCancelReasonOk returns a tuple with the CancelReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetCancelReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CancelReason) {
		return nil, false
	}
	return o.CancelReason, true
}

// HasCancelReason returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasCancelReason() bool {
	if o != nil && !IsNil(o.CancelReason) {
		return true
	}

	return false
}

// SetCancelReason gets a reference to the given string and assigns it to the CancelReason field.
func (o *UnibeeApiBeanSubscription) SetCancelReason(v string) {
	o.CancelReason = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *UnibeeApiBeanSubscription) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *UnibeeApiBeanSubscription) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *UnibeeApiBeanSubscription) SetCurrency(v string) {
	o.Currency = &v
}

// GetCurrentPeriodEnd returns the CurrentPeriodEnd field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetCurrentPeriodEnd() int64 {
	if o == nil || IsNil(o.CurrentPeriodEnd) {
		var ret int64
		return ret
	}
	return *o.CurrentPeriodEnd
}

// GetCurrentPeriodEndOk returns a tuple with the CurrentPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetCurrentPeriodEndOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentPeriodEnd) {
		return nil, false
	}
	return o.CurrentPeriodEnd, true
}

// HasCurrentPeriodEnd returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasCurrentPeriodEnd() bool {
	if o != nil && !IsNil(o.CurrentPeriodEnd) {
		return true
	}

	return false
}

// SetCurrentPeriodEnd gets a reference to the given int64 and assigns it to the CurrentPeriodEnd field.
func (o *UnibeeApiBeanSubscription) SetCurrentPeriodEnd(v int64) {
	o.CurrentPeriodEnd = &v
}

// GetCurrentPeriodStart returns the CurrentPeriodStart field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetCurrentPeriodStart() int64 {
	if o == nil || IsNil(o.CurrentPeriodStart) {
		var ret int64
		return ret
	}
	return *o.CurrentPeriodStart
}

// GetCurrentPeriodStartOk returns a tuple with the CurrentPeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetCurrentPeriodStartOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentPeriodStart) {
		return nil, false
	}
	return o.CurrentPeriodStart, true
}

// HasCurrentPeriodStart returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasCurrentPeriodStart() bool {
	if o != nil && !IsNil(o.CurrentPeriodStart) {
		return true
	}

	return false
}

// SetCurrentPeriodStart gets a reference to the given int64 and assigns it to the CurrentPeriodStart field.
func (o *UnibeeApiBeanSubscription) SetCurrentPeriodStart(v int64) {
	o.CurrentPeriodStart = &v
}

// GetDefaultPaymentMethodId returns the DefaultPaymentMethodId field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetDefaultPaymentMethodId() string {
	if o == nil || IsNil(o.DefaultPaymentMethodId) {
		var ret string
		return ret
	}
	return *o.DefaultPaymentMethodId
}

// GetDefaultPaymentMethodIdOk returns a tuple with the DefaultPaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetDefaultPaymentMethodIdOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultPaymentMethodId) {
		return nil, false
	}
	return o.DefaultPaymentMethodId, true
}

// HasDefaultPaymentMethodId returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasDefaultPaymentMethodId() bool {
	if o != nil && !IsNil(o.DefaultPaymentMethodId) {
		return true
	}

	return false
}

// SetDefaultPaymentMethodId gets a reference to the given string and assigns it to the DefaultPaymentMethodId field.
func (o *UnibeeApiBeanSubscription) SetDefaultPaymentMethodId(v string) {
	o.DefaultPaymentMethodId = &v
}

// GetDunningTime returns the DunningTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetDunningTime() int64 {
	if o == nil || IsNil(o.DunningTime) {
		var ret int64
		return ret
	}
	return *o.DunningTime
}

// GetDunningTimeOk returns a tuple with the DunningTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetDunningTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.DunningTime) {
		return nil, false
	}
	return o.DunningTime, true
}

// HasDunningTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasDunningTime() bool {
	if o != nil && !IsNil(o.DunningTime) {
		return true
	}

	return false
}

// SetDunningTime gets a reference to the given int64 and assigns it to the DunningTime field.
func (o *UnibeeApiBeanSubscription) SetDunningTime(v int64) {
	o.DunningTime = &v
}

// GetExternalSubscriptionId returns the ExternalSubscriptionId field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetExternalSubscriptionId() string {
	if o == nil || IsNil(o.ExternalSubscriptionId) {
		var ret string
		return ret
	}
	return *o.ExternalSubscriptionId
}

// GetExternalSubscriptionIdOk returns a tuple with the ExternalSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetExternalSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalSubscriptionId) {
		return nil, false
	}
	return o.ExternalSubscriptionId, true
}

// HasExternalSubscriptionId returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasExternalSubscriptionId() bool {
	if o != nil && !IsNil(o.ExternalSubscriptionId) {
		return true
	}

	return false
}

// SetExternalSubscriptionId gets a reference to the given string and assigns it to the ExternalSubscriptionId field.
func (o *UnibeeApiBeanSubscription) SetExternalSubscriptionId(v string) {
	o.ExternalSubscriptionId = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetFeatures() string {
	if o == nil || IsNil(o.Features) {
		var ret string
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given string and assigns it to the Features field.
func (o *UnibeeApiBeanSubscription) SetFeatures(v string) {
	o.Features = &v
}

// GetFirstPaidTime returns the FirstPaidTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetFirstPaidTime() int64 {
	if o == nil || IsNil(o.FirstPaidTime) {
		var ret int64
		return ret
	}
	return *o.FirstPaidTime
}

// GetFirstPaidTimeOk returns a tuple with the FirstPaidTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetFirstPaidTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.FirstPaidTime) {
		return nil, false
	}
	return o.FirstPaidTime, true
}

// HasFirstPaidTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasFirstPaidTime() bool {
	if o != nil && !IsNil(o.FirstPaidTime) {
		return true
	}

	return false
}

// SetFirstPaidTime gets a reference to the given int64 and assigns it to the FirstPaidTime field.
func (o *UnibeeApiBeanSubscription) SetFirstPaidTime(v int64) {
	o.FirstPaidTime = &v
}

// GetGasPayer returns the GasPayer field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetGasPayer() string {
	if o == nil || IsNil(o.GasPayer) {
		var ret string
		return ret
	}
	return *o.GasPayer
}

// GetGasPayerOk returns a tuple with the GasPayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetGasPayerOk() (*string, bool) {
	if o == nil || IsNil(o.GasPayer) {
		return nil, false
	}
	return o.GasPayer, true
}

// HasGasPayer returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasGasPayer() bool {
	if o != nil && !IsNil(o.GasPayer) {
		return true
	}

	return false
}

// SetGasPayer gets a reference to the given string and assigns it to the GasPayer field.
func (o *UnibeeApiBeanSubscription) SetGasPayer(v string) {
	o.GasPayer = &v
}

// GetGatewayId returns the GatewayId field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetGatewayId() int64 {
	if o == nil || IsNil(o.GatewayId) {
		var ret int64
		return ret
	}
	return *o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetGatewayIdOk() (*int64, bool) {
	if o == nil || IsNil(o.GatewayId) {
		return nil, false
	}
	return o.GatewayId, true
}

// HasGatewayId returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasGatewayId() bool {
	if o != nil && !IsNil(o.GatewayId) {
		return true
	}

	return false
}

// SetGatewayId gets a reference to the given int64 and assigns it to the GatewayId field.
func (o *UnibeeApiBeanSubscription) SetGatewayId(v int64) {
	o.GatewayId = &v
}

// GetGatewayStatus returns the GatewayStatus field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetGatewayStatus() string {
	if o == nil || IsNil(o.GatewayStatus) {
		var ret string
		return ret
	}
	return *o.GatewayStatus
}

// GetGatewayStatusOk returns a tuple with the GatewayStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetGatewayStatusOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayStatus) {
		return nil, false
	}
	return o.GatewayStatus, true
}

// HasGatewayStatus returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasGatewayStatus() bool {
	if o != nil && !IsNil(o.GatewayStatus) {
		return true
	}

	return false
}

// SetGatewayStatus gets a reference to the given string and assigns it to the GatewayStatus field.
func (o *UnibeeApiBeanSubscription) SetGatewayStatus(v string) {
	o.GatewayStatus = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UnibeeApiBeanSubscription) SetId(v int64) {
	o.Id = &v
}

// GetLastUpdateTime returns the LastUpdateTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetLastUpdateTime() int64 {
	if o == nil || IsNil(o.LastUpdateTime) {
		var ret int64
		return ret
	}
	return *o.LastUpdateTime
}

// GetLastUpdateTimeOk returns a tuple with the LastUpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetLastUpdateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdateTime) {
		return nil, false
	}
	return o.LastUpdateTime, true
}

// HasLastUpdateTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasLastUpdateTime() bool {
	if o != nil && !IsNil(o.LastUpdateTime) {
		return true
	}

	return false
}

// SetLastUpdateTime gets a reference to the given int64 and assigns it to the LastUpdateTime field.
func (o *UnibeeApiBeanSubscription) SetLastUpdateTime(v int64) {
	o.LastUpdateTime = &v
}

// GetLatestInvoiceId returns the LatestInvoiceId field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetLatestInvoiceId() string {
	if o == nil || IsNil(o.LatestInvoiceId) {
		var ret string
		return ret
	}
	return *o.LatestInvoiceId
}

// GetLatestInvoiceIdOk returns a tuple with the LatestInvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetLatestInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.LatestInvoiceId) {
		return nil, false
	}
	return o.LatestInvoiceId, true
}

// HasLatestInvoiceId returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasLatestInvoiceId() bool {
	if o != nil && !IsNil(o.LatestInvoiceId) {
		return true
	}

	return false
}

// SetLatestInvoiceId gets a reference to the given string and assigns it to the LatestInvoiceId field.
func (o *UnibeeApiBeanSubscription) SetLatestInvoiceId(v string) {
	o.LatestInvoiceId = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *UnibeeApiBeanSubscription) SetLink(v string) {
	o.Link = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetMerchantId() int64 {
	if o == nil || IsNil(o.MerchantId) {
		var ret int64
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetMerchantIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasMerchantId() bool {
	if o != nil && !IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given int64 and assigns it to the MerchantId field.
func (o *UnibeeApiBeanSubscription) SetMerchantId(v int64) {
	o.MerchantId = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *UnibeeApiBeanSubscription) SetMetadata(v map[string]interface{}) {
	o.Metadata = &v
}

// GetPendingUpdateId returns the PendingUpdateId field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetPendingUpdateId() string {
	if o == nil || IsNil(o.PendingUpdateId) {
		var ret string
		return ret
	}
	return *o.PendingUpdateId
}

// GetPendingUpdateIdOk returns a tuple with the PendingUpdateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetPendingUpdateIdOk() (*string, bool) {
	if o == nil || IsNil(o.PendingUpdateId) {
		return nil, false
	}
	return o.PendingUpdateId, true
}

// HasPendingUpdateId returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasPendingUpdateId() bool {
	if o != nil && !IsNil(o.PendingUpdateId) {
		return true
	}

	return false
}

// SetPendingUpdateId gets a reference to the given string and assigns it to the PendingUpdateId field.
func (o *UnibeeApiBeanSubscription) SetPendingUpdateId(v string) {
	o.PendingUpdateId = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetPlanId() int64 {
	if o == nil || IsNil(o.PlanId) {
		var ret int64
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetPlanIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given int64 and assigns it to the PlanId field.
func (o *UnibeeApiBeanSubscription) SetPlanId(v int64) {
	o.PlanId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetProductId() int64 {
	if o == nil || IsNil(o.ProductId) {
		var ret int64
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetProductIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int64 and assigns it to the ProductId field.
func (o *UnibeeApiBeanSubscription) SetProductId(v int64) {
	o.ProductId = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetQuantity() int64 {
	if o == nil || IsNil(o.Quantity) {
		var ret int64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int64 and assigns it to the Quantity field.
func (o *UnibeeApiBeanSubscription) SetQuantity(v int64) {
	o.Quantity = &v
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetReturnUrl() string {
	if o == nil || IsNil(o.ReturnUrl) {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnUrl) {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasReturnUrl() bool {
	if o != nil && !IsNil(o.ReturnUrl) {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *UnibeeApiBeanSubscription) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *UnibeeApiBeanSubscription) SetStatus(v int32) {
	o.Status = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *UnibeeApiBeanSubscription) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetTaskTime returns the TaskTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetTaskTime() string {
	if o == nil || IsNil(o.TaskTime) {
		var ret string
		return ret
	}
	return *o.TaskTime
}

// GetTaskTimeOk returns a tuple with the TaskTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetTaskTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TaskTime) {
		return nil, false
	}
	return o.TaskTime, true
}

// HasTaskTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasTaskTime() bool {
	if o != nil && !IsNil(o.TaskTime) {
		return true
	}

	return false
}

// SetTaskTime gets a reference to the given string and assigns it to the TaskTime field.
func (o *UnibeeApiBeanSubscription) SetTaskTime(v string) {
	o.TaskTime = &v
}

// GetTaxPercentage returns the TaxPercentage field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetTaxPercentage() int64 {
	if o == nil || IsNil(o.TaxPercentage) {
		var ret int64
		return ret
	}
	return *o.TaxPercentage
}

// GetTaxPercentageOk returns a tuple with the TaxPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetTaxPercentageOk() (*int64, bool) {
	if o == nil || IsNil(o.TaxPercentage) {
		return nil, false
	}
	return o.TaxPercentage, true
}

// HasTaxPercentage returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasTaxPercentage() bool {
	if o != nil && !IsNil(o.TaxPercentage) {
		return true
	}

	return false
}

// SetTaxPercentage gets a reference to the given int64 and assigns it to the TaxPercentage field.
func (o *UnibeeApiBeanSubscription) SetTaxPercentage(v int64) {
	o.TaxPercentage = &v
}

// GetTestClock returns the TestClock field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetTestClock() int64 {
	if o == nil || IsNil(o.TestClock) {
		var ret int64
		return ret
	}
	return *o.TestClock
}

// GetTestClockOk returns a tuple with the TestClock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetTestClockOk() (*int64, bool) {
	if o == nil || IsNil(o.TestClock) {
		return nil, false
	}
	return o.TestClock, true
}

// HasTestClock returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasTestClock() bool {
	if o != nil && !IsNil(o.TestClock) {
		return true
	}

	return false
}

// SetTestClock gets a reference to the given int64 and assigns it to the TestClock field.
func (o *UnibeeApiBeanSubscription) SetTestClock(v int64) {
	o.TestClock = &v
}

// GetTrialEnd returns the TrialEnd field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetTrialEnd() int64 {
	if o == nil || IsNil(o.TrialEnd) {
		var ret int64
		return ret
	}
	return *o.TrialEnd
}

// GetTrialEndOk returns a tuple with the TrialEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetTrialEndOk() (*int64, bool) {
	if o == nil || IsNil(o.TrialEnd) {
		return nil, false
	}
	return o.TrialEnd, true
}

// HasTrialEnd returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasTrialEnd() bool {
	if o != nil && !IsNil(o.TrialEnd) {
		return true
	}

	return false
}

// SetTrialEnd gets a reference to the given int64 and assigns it to the TrialEnd field.
func (o *UnibeeApiBeanSubscription) SetTrialEnd(v int64) {
	o.TrialEnd = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *UnibeeApiBeanSubscription) SetType(v int32) {
	o.Type = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *UnibeeApiBeanSubscription) SetUserId(v int64) {
	o.UserId = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *UnibeeApiBeanSubscription) GetVatNumber() string {
	if o == nil || IsNil(o.VatNumber) {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanSubscription) GetVatNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VatNumber) {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *UnibeeApiBeanSubscription) HasVatNumber() bool {
	if o != nil && !IsNil(o.VatNumber) {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *UnibeeApiBeanSubscription) SetVatNumber(v string) {
	o.VatNumber = &v
}

func (o UnibeeApiBeanSubscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddonData) {
		toSerialize["addonData"] = o.AddonData
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.BillingCycleAnchor) {
		toSerialize["billingCycleAnchor"] = o.BillingCycleAnchor
	}
	if !IsNil(o.CancelAtPeriodEnd) {
		toSerialize["cancelAtPeriodEnd"] = o.CancelAtPeriodEnd
	}
	if !IsNil(o.CancelReason) {
		toSerialize["cancelReason"] = o.CancelReason
	}
	if !IsNil(o.CountryCode) {
		toSerialize["countryCode"] = o.CountryCode
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.CurrentPeriodEnd) {
		toSerialize["currentPeriodEnd"] = o.CurrentPeriodEnd
	}
	if !IsNil(o.CurrentPeriodStart) {
		toSerialize["currentPeriodStart"] = o.CurrentPeriodStart
	}
	if !IsNil(o.DefaultPaymentMethodId) {
		toSerialize["defaultPaymentMethodId"] = o.DefaultPaymentMethodId
	}
	if !IsNil(o.DunningTime) {
		toSerialize["dunningTime"] = o.DunningTime
	}
	if !IsNil(o.ExternalSubscriptionId) {
		toSerialize["externalSubscriptionId"] = o.ExternalSubscriptionId
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.FirstPaidTime) {
		toSerialize["firstPaidTime"] = o.FirstPaidTime
	}
	if !IsNil(o.GasPayer) {
		toSerialize["gasPayer"] = o.GasPayer
	}
	if !IsNil(o.GatewayId) {
		toSerialize["gatewayId"] = o.GatewayId
	}
	if !IsNil(o.GatewayStatus) {
		toSerialize["gatewayStatus"] = o.GatewayStatus
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdateTime) {
		toSerialize["lastUpdateTime"] = o.LastUpdateTime
	}
	if !IsNil(o.LatestInvoiceId) {
		toSerialize["latestInvoiceId"] = o.LatestInvoiceId
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.MerchantId) {
		toSerialize["merchantId"] = o.MerchantId
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.PendingUpdateId) {
		toSerialize["pendingUpdateId"] = o.PendingUpdateId
	}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.ReturnUrl) {
		toSerialize["returnUrl"] = o.ReturnUrl
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.TaskTime) {
		toSerialize["taskTime"] = o.TaskTime
	}
	if !IsNil(o.TaxPercentage) {
		toSerialize["taxPercentage"] = o.TaxPercentage
	}
	if !IsNil(o.TestClock) {
		toSerialize["testClock"] = o.TestClock
	}
	if !IsNil(o.TrialEnd) {
		toSerialize["trialEnd"] = o.TrialEnd
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.VatNumber) {
		toSerialize["vatNumber"] = o.VatNumber
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanSubscription struct {
	value *UnibeeApiBeanSubscription
	isSet bool
}

func (v NullableUnibeeApiBeanSubscription) Get() *UnibeeApiBeanSubscription {
	return v.value
}

func (v *NullableUnibeeApiBeanSubscription) Set(val *UnibeeApiBeanSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanSubscription(val *UnibeeApiBeanSubscription) *NullableUnibeeApiBeanSubscription {
	return &NullableUnibeeApiBeanSubscription{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


