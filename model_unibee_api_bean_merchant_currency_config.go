/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509290914
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanMerchantCurrencyConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanMerchantCurrencyConfig{}

// UnibeeApiBeanMerchantCurrencyConfig struct for UnibeeApiBeanMerchantCurrencyConfig
type UnibeeApiBeanMerchantCurrencyConfig struct {
	// using https://app.exchangerate-api.com/ to update exchange rate if true, the exchange APIKey need setup first
	AutoExchange *bool `json:"autoExchange,omitempty"`
	// target currency
	Currency *string `json:"currency,omitempty"`
	// the exchange rate of gateway, no setup required if AutoExchange is true
	ExchangeRate *float32 `json:"exchangeRate,omitempty"`
}

// NewUnibeeApiBeanMerchantCurrencyConfig instantiates a new UnibeeApiBeanMerchantCurrencyConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanMerchantCurrencyConfig() *UnibeeApiBeanMerchantCurrencyConfig {
	this := UnibeeApiBeanMerchantCurrencyConfig{}
	return &this
}

// NewUnibeeApiBeanMerchantCurrencyConfigWithDefaults instantiates a new UnibeeApiBeanMerchantCurrencyConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanMerchantCurrencyConfigWithDefaults() *UnibeeApiBeanMerchantCurrencyConfig {
	this := UnibeeApiBeanMerchantCurrencyConfig{}
	return &this
}

// GetAutoExchange returns the AutoExchange field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCurrencyConfig) GetAutoExchange() bool {
	if o == nil || IsNil(o.AutoExchange) {
		var ret bool
		return ret
	}
	return *o.AutoExchange
}

// GetAutoExchangeOk returns a tuple with the AutoExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCurrencyConfig) GetAutoExchangeOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoExchange) {
		return nil, false
	}
	return o.AutoExchange, true
}

// HasAutoExchange returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCurrencyConfig) HasAutoExchange() bool {
	if o != nil && !IsNil(o.AutoExchange) {
		return true
	}

	return false
}

// SetAutoExchange gets a reference to the given bool and assigns it to the AutoExchange field.
func (o *UnibeeApiBeanMerchantCurrencyConfig) SetAutoExchange(v bool) {
	o.AutoExchange = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCurrencyConfig) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCurrencyConfig) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCurrencyConfig) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *UnibeeApiBeanMerchantCurrencyConfig) SetCurrency(v string) {
	o.Currency = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCurrencyConfig) GetExchangeRate() float32 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float32
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCurrencyConfig) GetExchangeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCurrencyConfig) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float32 and assigns it to the ExchangeRate field.
func (o *UnibeeApiBeanMerchantCurrencyConfig) SetExchangeRate(v float32) {
	o.ExchangeRate = &v
}

func (o UnibeeApiBeanMerchantCurrencyConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanMerchantCurrencyConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoExchange) {
		toSerialize["autoExchange"] = o.AutoExchange
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanMerchantCurrencyConfig struct {
	value *UnibeeApiBeanMerchantCurrencyConfig
	isSet bool
}

func (v NullableUnibeeApiBeanMerchantCurrencyConfig) Get() *UnibeeApiBeanMerchantCurrencyConfig {
	return v.value
}

func (v *NullableUnibeeApiBeanMerchantCurrencyConfig) Set(val *UnibeeApiBeanMerchantCurrencyConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanMerchantCurrencyConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanMerchantCurrencyConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanMerchantCurrencyConfig(val *UnibeeApiBeanMerchantCurrencyConfig) *NullableUnibeeApiBeanMerchantCurrencyConfig {
	return &NullableUnibeeApiBeanMerchantCurrencyConfig{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanMerchantCurrencyConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanMerchantCurrencyConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


