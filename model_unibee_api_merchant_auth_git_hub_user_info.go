/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509191247
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantAuthGitHubUserInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantAuthGitHubUserInfo{}

// UnibeeApiMerchantAuthGitHubUserInfo struct for UnibeeApiMerchantAuthGitHubUserInfo
type UnibeeApiMerchantAuthGitHubUserInfo struct {
	// User Avatar URL
	AvatarUrl *string `json:"avatarUrl,omitempty"`
	// User Bio
	Bio *string `json:"bio,omitempty"`
	// User Company
	Company *string `json:"company,omitempty"`
	// User Email
	Email *string `json:"email,omitempty"`
	// GitHub User ID
	Id *int32 `json:"id,omitempty"`
	// User Location
	Location *string `json:"location,omitempty"`
	// GitHub Username
	Login *string `json:"login,omitempty"`
	// User Full Name
	Name *string `json:"name,omitempty"`
}

// NewUnibeeApiMerchantAuthGitHubUserInfo instantiates a new UnibeeApiMerchantAuthGitHubUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantAuthGitHubUserInfo() *UnibeeApiMerchantAuthGitHubUserInfo {
	this := UnibeeApiMerchantAuthGitHubUserInfo{}
	return &this
}

// NewUnibeeApiMerchantAuthGitHubUserInfoWithDefaults instantiates a new UnibeeApiMerchantAuthGitHubUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantAuthGitHubUserInfoWithDefaults() *UnibeeApiMerchantAuthGitHubUserInfo {
	this := UnibeeApiMerchantAuthGitHubUserInfo{}
	return &this
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl) {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetAvatarUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarUrl) {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) HasAvatarUrl() bool {
	if o != nil && !IsNil(o.AvatarUrl) {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetBio returns the Bio field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetBio() string {
	if o == nil || IsNil(o.Bio) {
		var ret string
		return ret
	}
	return *o.Bio
}

// GetBioOk returns a tuple with the Bio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetBioOk() (*string, bool) {
	if o == nil || IsNil(o.Bio) {
		return nil, false
	}
	return o.Bio, true
}

// HasBio returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) HasBio() bool {
	if o != nil && !IsNil(o.Bio) {
		return true
	}

	return false
}

// SetBio gets a reference to the given string and assigns it to the Bio field.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) SetBio(v string) {
	o.Bio = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) SetCompany(v string) {
	o.Company = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) SetEmail(v string) {
	o.Email = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) SetId(v int32) {
	o.Id = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) SetLocation(v string) {
	o.Location = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetLogin() string {
	if o == nil || IsNil(o.Login) {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetLoginOk() (*string, bool) {
	if o == nil || IsNil(o.Login) {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) HasLogin() bool {
	if o != nil && !IsNil(o.Login) {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) SetLogin(v string) {
	o.Login = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UnibeeApiMerchantAuthGitHubUserInfo) SetName(v string) {
	o.Name = &v
}

func (o UnibeeApiMerchantAuthGitHubUserInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantAuthGitHubUserInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvatarUrl) {
		toSerialize["avatarUrl"] = o.AvatarUrl
	}
	if !IsNil(o.Bio) {
		toSerialize["bio"] = o.Bio
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Login) {
		toSerialize["login"] = o.Login
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantAuthGitHubUserInfo struct {
	value *UnibeeApiMerchantAuthGitHubUserInfo
	isSet bool
}

func (v NullableUnibeeApiMerchantAuthGitHubUserInfo) Get() *UnibeeApiMerchantAuthGitHubUserInfo {
	return v.value
}

func (v *NullableUnibeeApiMerchantAuthGitHubUserInfo) Set(val *UnibeeApiMerchantAuthGitHubUserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantAuthGitHubUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantAuthGitHubUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantAuthGitHubUserInfo(val *UnibeeApiMerchantAuthGitHubUserInfo) *NullableUnibeeApiMerchantAuthGitHubUserInfo {
	return &NullableUnibeeApiMerchantAuthGitHubUserInfo{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantAuthGitHubUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantAuthGitHubUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


