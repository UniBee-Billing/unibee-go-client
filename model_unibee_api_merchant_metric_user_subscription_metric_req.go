/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508150435
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantMetricUserSubscriptionMetricReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantMetricUserSubscriptionMetricReq{}

// UnibeeApiMerchantMetricUserSubscriptionMetricReq struct for UnibeeApiMerchantMetricUserSubscriptionMetricReq
type UnibeeApiMerchantMetricUserSubscriptionMetricReq struct {
	ReloadCache *bool `json:"reloadCache,omitempty"`
	// SubscriptionId
	SubscriptionId *string `json:"subscriptionId,omitempty"`
}

// NewUnibeeApiMerchantMetricUserSubscriptionMetricReq instantiates a new UnibeeApiMerchantMetricUserSubscriptionMetricReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantMetricUserSubscriptionMetricReq() *UnibeeApiMerchantMetricUserSubscriptionMetricReq {
	this := UnibeeApiMerchantMetricUserSubscriptionMetricReq{}
	return &this
}

// NewUnibeeApiMerchantMetricUserSubscriptionMetricReqWithDefaults instantiates a new UnibeeApiMerchantMetricUserSubscriptionMetricReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantMetricUserSubscriptionMetricReqWithDefaults() *UnibeeApiMerchantMetricUserSubscriptionMetricReq {
	this := UnibeeApiMerchantMetricUserSubscriptionMetricReq{}
	return &this
}

// GetReloadCache returns the ReloadCache field value if set, zero value otherwise.
func (o *UnibeeApiMerchantMetricUserSubscriptionMetricReq) GetReloadCache() bool {
	if o == nil || IsNil(o.ReloadCache) {
		var ret bool
		return ret
	}
	return *o.ReloadCache
}

// GetReloadCacheOk returns a tuple with the ReloadCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantMetricUserSubscriptionMetricReq) GetReloadCacheOk() (*bool, bool) {
	if o == nil || IsNil(o.ReloadCache) {
		return nil, false
	}
	return o.ReloadCache, true
}

// HasReloadCache returns a boolean if a field has been set.
func (o *UnibeeApiMerchantMetricUserSubscriptionMetricReq) HasReloadCache() bool {
	if o != nil && !IsNil(o.ReloadCache) {
		return true
	}

	return false
}

// SetReloadCache gets a reference to the given bool and assigns it to the ReloadCache field.
func (o *UnibeeApiMerchantMetricUserSubscriptionMetricReq) SetReloadCache(v bool) {
	o.ReloadCache = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantMetricUserSubscriptionMetricReq) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantMetricUserSubscriptionMetricReq) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantMetricUserSubscriptionMetricReq) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *UnibeeApiMerchantMetricUserSubscriptionMetricReq) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

func (o UnibeeApiMerchantMetricUserSubscriptionMetricReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantMetricUserSubscriptionMetricReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReloadCache) {
		toSerialize["reloadCache"] = o.ReloadCache
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantMetricUserSubscriptionMetricReq struct {
	value *UnibeeApiMerchantMetricUserSubscriptionMetricReq
	isSet bool
}

func (v NullableUnibeeApiMerchantMetricUserSubscriptionMetricReq) Get() *UnibeeApiMerchantMetricUserSubscriptionMetricReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantMetricUserSubscriptionMetricReq) Set(val *UnibeeApiMerchantMetricUserSubscriptionMetricReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantMetricUserSubscriptionMetricReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantMetricUserSubscriptionMetricReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantMetricUserSubscriptionMetricReq(val *UnibeeApiMerchantMetricUserSubscriptionMetricReq) *NullableUnibeeApiMerchantMetricUserSubscriptionMetricReq {
	return &NullableUnibeeApiMerchantMetricUserSubscriptionMetricReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantMetricUserSubscriptionMetricReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantMetricUserSubscriptionMetricReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


