/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509191247
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanDetailGatewayCurrencyExchange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanDetailGatewayCurrencyExchange{}

// UnibeeApiBeanDetailGatewayCurrencyExchange struct for UnibeeApiBeanDetailGatewayCurrencyExchange
type UnibeeApiBeanDetailGatewayCurrencyExchange struct {
	// the exchange rate of gateway, set to 0 if using https://app.exchangerate-api.com/ instead of fixed exchange rate
	ExchangeRate *float32 `json:"exchange_rate,omitempty"`
	// the currency of gateway exchange from
	FromCurrency *string `json:"from_currency,omitempty"`
	// the currency of gateway exchange to
	ToCurrency *string `json:"to_currency,omitempty"`
}

// NewUnibeeApiBeanDetailGatewayCurrencyExchange instantiates a new UnibeeApiBeanDetailGatewayCurrencyExchange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanDetailGatewayCurrencyExchange() *UnibeeApiBeanDetailGatewayCurrencyExchange {
	this := UnibeeApiBeanDetailGatewayCurrencyExchange{}
	return &this
}

// NewUnibeeApiBeanDetailGatewayCurrencyExchangeWithDefaults instantiates a new UnibeeApiBeanDetailGatewayCurrencyExchange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanDetailGatewayCurrencyExchangeWithDefaults() *UnibeeApiBeanDetailGatewayCurrencyExchange {
	this := UnibeeApiBeanDetailGatewayCurrencyExchange{}
	return &this
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) GetExchangeRate() float32 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float32
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) GetExchangeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float32 and assigns it to the ExchangeRate field.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) SetExchangeRate(v float32) {
	o.ExchangeRate = &v
}

// GetFromCurrency returns the FromCurrency field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) GetFromCurrency() string {
	if o == nil || IsNil(o.FromCurrency) {
		var ret string
		return ret
	}
	return *o.FromCurrency
}

// GetFromCurrencyOk returns a tuple with the FromCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) GetFromCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.FromCurrency) {
		return nil, false
	}
	return o.FromCurrency, true
}

// HasFromCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) HasFromCurrency() bool {
	if o != nil && !IsNil(o.FromCurrency) {
		return true
	}

	return false
}

// SetFromCurrency gets a reference to the given string and assigns it to the FromCurrency field.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) SetFromCurrency(v string) {
	o.FromCurrency = &v
}

// GetToCurrency returns the ToCurrency field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) GetToCurrency() string {
	if o == nil || IsNil(o.ToCurrency) {
		var ret string
		return ret
	}
	return *o.ToCurrency
}

// GetToCurrencyOk returns a tuple with the ToCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) GetToCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.ToCurrency) {
		return nil, false
	}
	return o.ToCurrency, true
}

// HasToCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) HasToCurrency() bool {
	if o != nil && !IsNil(o.ToCurrency) {
		return true
	}

	return false
}

// SetToCurrency gets a reference to the given string and assigns it to the ToCurrency field.
func (o *UnibeeApiBeanDetailGatewayCurrencyExchange) SetToCurrency(v string) {
	o.ToCurrency = &v
}

func (o UnibeeApiBeanDetailGatewayCurrencyExchange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanDetailGatewayCurrencyExchange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchange_rate"] = o.ExchangeRate
	}
	if !IsNil(o.FromCurrency) {
		toSerialize["from_currency"] = o.FromCurrency
	}
	if !IsNil(o.ToCurrency) {
		toSerialize["to_currency"] = o.ToCurrency
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanDetailGatewayCurrencyExchange struct {
	value *UnibeeApiBeanDetailGatewayCurrencyExchange
	isSet bool
}

func (v NullableUnibeeApiBeanDetailGatewayCurrencyExchange) Get() *UnibeeApiBeanDetailGatewayCurrencyExchange {
	return v.value
}

func (v *NullableUnibeeApiBeanDetailGatewayCurrencyExchange) Set(val *UnibeeApiBeanDetailGatewayCurrencyExchange) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanDetailGatewayCurrencyExchange) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanDetailGatewayCurrencyExchange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanDetailGatewayCurrencyExchange(val *UnibeeApiBeanDetailGatewayCurrencyExchange) *NullableUnibeeApiBeanDetailGatewayCurrencyExchange {
	return &NullableUnibeeApiBeanDetailGatewayCurrencyExchange{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanDetailGatewayCurrencyExchange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanDetailGatewayCurrencyExchange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


