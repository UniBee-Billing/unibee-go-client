/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508041414
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanMerchantLocalizationVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanMerchantLocalizationVersion{}

// UnibeeApiBeanMerchantLocalizationVersion struct for UnibeeApiBeanMerchantLocalizationVersion
type UnibeeApiBeanMerchantLocalizationVersion struct {
	Activate *bool `json:"activate,omitempty"`
	Localizations []UnibeeApiBeanEmailLocalizationTemplate `json:"localizations,omitempty"`
	VersionId *string `json:"versionId,omitempty"`
	VersionName *string `json:"versionName,omitempty"`
}

// NewUnibeeApiBeanMerchantLocalizationVersion instantiates a new UnibeeApiBeanMerchantLocalizationVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanMerchantLocalizationVersion() *UnibeeApiBeanMerchantLocalizationVersion {
	this := UnibeeApiBeanMerchantLocalizationVersion{}
	return &this
}

// NewUnibeeApiBeanMerchantLocalizationVersionWithDefaults instantiates a new UnibeeApiBeanMerchantLocalizationVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanMerchantLocalizationVersionWithDefaults() *UnibeeApiBeanMerchantLocalizationVersion {
	this := UnibeeApiBeanMerchantLocalizationVersion{}
	return &this
}

// GetActivate returns the Activate field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantLocalizationVersion) GetActivate() bool {
	if o == nil || IsNil(o.Activate) {
		var ret bool
		return ret
	}
	return *o.Activate
}

// GetActivateOk returns a tuple with the Activate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantLocalizationVersion) GetActivateOk() (*bool, bool) {
	if o == nil || IsNil(o.Activate) {
		return nil, false
	}
	return o.Activate, true
}

// HasActivate returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantLocalizationVersion) HasActivate() bool {
	if o != nil && !IsNil(o.Activate) {
		return true
	}

	return false
}

// SetActivate gets a reference to the given bool and assigns it to the Activate field.
func (o *UnibeeApiBeanMerchantLocalizationVersion) SetActivate(v bool) {
	o.Activate = &v
}

// GetLocalizations returns the Localizations field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantLocalizationVersion) GetLocalizations() []UnibeeApiBeanEmailLocalizationTemplate {
	if o == nil || IsNil(o.Localizations) {
		var ret []UnibeeApiBeanEmailLocalizationTemplate
		return ret
	}
	return o.Localizations
}

// GetLocalizationsOk returns a tuple with the Localizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantLocalizationVersion) GetLocalizationsOk() ([]UnibeeApiBeanEmailLocalizationTemplate, bool) {
	if o == nil || IsNil(o.Localizations) {
		return nil, false
	}
	return o.Localizations, true
}

// HasLocalizations returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantLocalizationVersion) HasLocalizations() bool {
	if o != nil && !IsNil(o.Localizations) {
		return true
	}

	return false
}

// SetLocalizations gets a reference to the given []UnibeeApiBeanEmailLocalizationTemplate and assigns it to the Localizations field.
func (o *UnibeeApiBeanMerchantLocalizationVersion) SetLocalizations(v []UnibeeApiBeanEmailLocalizationTemplate) {
	o.Localizations = v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantLocalizationVersion) GetVersionId() string {
	if o == nil || IsNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantLocalizationVersion) GetVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantLocalizationVersion) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *UnibeeApiBeanMerchantLocalizationVersion) SetVersionId(v string) {
	o.VersionId = &v
}

// GetVersionName returns the VersionName field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantLocalizationVersion) GetVersionName() string {
	if o == nil || IsNil(o.VersionName) {
		var ret string
		return ret
	}
	return *o.VersionName
}

// GetVersionNameOk returns a tuple with the VersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantLocalizationVersion) GetVersionNameOk() (*string, bool) {
	if o == nil || IsNil(o.VersionName) {
		return nil, false
	}
	return o.VersionName, true
}

// HasVersionName returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantLocalizationVersion) HasVersionName() bool {
	if o != nil && !IsNil(o.VersionName) {
		return true
	}

	return false
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *UnibeeApiBeanMerchantLocalizationVersion) SetVersionName(v string) {
	o.VersionName = &v
}

func (o UnibeeApiBeanMerchantLocalizationVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanMerchantLocalizationVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Activate) {
		toSerialize["activate"] = o.Activate
	}
	if !IsNil(o.Localizations) {
		toSerialize["localizations"] = o.Localizations
	}
	if !IsNil(o.VersionId) {
		toSerialize["versionId"] = o.VersionId
	}
	if !IsNil(o.VersionName) {
		toSerialize["versionName"] = o.VersionName
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanMerchantLocalizationVersion struct {
	value *UnibeeApiBeanMerchantLocalizationVersion
	isSet bool
}

func (v NullableUnibeeApiBeanMerchantLocalizationVersion) Get() *UnibeeApiBeanMerchantLocalizationVersion {
	return v.value
}

func (v *NullableUnibeeApiBeanMerchantLocalizationVersion) Set(val *UnibeeApiBeanMerchantLocalizationVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanMerchantLocalizationVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanMerchantLocalizationVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanMerchantLocalizationVersion(val *UnibeeApiBeanMerchantLocalizationVersion) *NullableUnibeeApiBeanMerchantLocalizationVersion {
	return &NullableUnibeeApiBeanMerchantLocalizationVersion{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanMerchantLocalizationVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanMerchantLocalizationVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


