/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202510192014
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanCreditTransaction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanCreditTransaction{}

// UnibeeApiBeanCreditTransaction struct for UnibeeApiBeanCreditTransaction
type UnibeeApiBeanCreditTransaction struct {
	// type of credit account, 1-main recharge account, 2-promo credit account
	AccountType *int32 `json:"accountType,omitempty"`
	// business id
	BizId *string `json:"bizId,omitempty"`
	By *string `json:"by,omitempty"`
	// create utc time
	CreateTime *int64 `json:"createTime,omitempty"`
	// the credit amount after transaction,cent
	CreditAmountAfter *int64 `json:"creditAmountAfter,omitempty"`
	// the credit amount before transaction,cent
	CreditAmountBefore *int64 `json:"creditAmountBefore,omitempty"`
	// id of credit account
	CreditId *int64 `json:"creditId,omitempty"`
	// currency
	Currency *string `json:"currency,omitempty"`
	// delta amount,cent
	DeltaAmount *int64 `json:"deltaAmount,omitempty"`
	// delta currency amount, in cent
	DeltaCurrencyAmount *int64 `json:"deltaCurrencyAmount,omitempty"`
	// recharge transaction description
	Description *string `json:"description,omitempty"`
	// ExchangeRate for transaction, keep two decimal places，multiply by 100 saved, 1 currency = 1 credit * (exchange_rate/100), main account fixed rate to 100
	ExchangeRate *int64 `json:"exchangeRate,omitempty"`
	// Id
	Id *int64 `json:"id,omitempty"`
	// invoice_id
	InvoiceId *string `json:"invoiceId,omitempty"`
	// merchant id
	MerchantId *int64 `json:"merchantId,omitempty"`
	// recharge transaction title
	Name *string `json:"name,omitempty"`
	// unique id for timeline
	TransactionId *string `json:"transactionId,omitempty"`
	// transaction type。1-recharge income，2-payment out，3-refund income，4-withdraw out，5-withdraw failed income, 6-admin change，7-recharge refund out
	TransactionType *int32 `json:"transactionType,omitempty"`
	// user_id
	UserId *int64 `json:"userId,omitempty"`
}

// NewUnibeeApiBeanCreditTransaction instantiates a new UnibeeApiBeanCreditTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanCreditTransaction() *UnibeeApiBeanCreditTransaction {
	this := UnibeeApiBeanCreditTransaction{}
	return &this
}

// NewUnibeeApiBeanCreditTransactionWithDefaults instantiates a new UnibeeApiBeanCreditTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanCreditTransactionWithDefaults() *UnibeeApiBeanCreditTransaction {
	this := UnibeeApiBeanCreditTransaction{}
	return &this
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetAccountType() int32 {
	if o == nil || IsNil(o.AccountType) {
		var ret int32
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetAccountTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given int32 and assigns it to the AccountType field.
func (o *UnibeeApiBeanCreditTransaction) SetAccountType(v int32) {
	o.AccountType = &v
}

// GetBizId returns the BizId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetBizId() string {
	if o == nil || IsNil(o.BizId) {
		var ret string
		return ret
	}
	return *o.BizId
}

// GetBizIdOk returns a tuple with the BizId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetBizIdOk() (*string, bool) {
	if o == nil || IsNil(o.BizId) {
		return nil, false
	}
	return o.BizId, true
}

// HasBizId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasBizId() bool {
	if o != nil && !IsNil(o.BizId) {
		return true
	}

	return false
}

// SetBizId gets a reference to the given string and assigns it to the BizId field.
func (o *UnibeeApiBeanCreditTransaction) SetBizId(v string) {
	o.BizId = &v
}

// GetBy returns the By field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetBy() string {
	if o == nil || IsNil(o.By) {
		var ret string
		return ret
	}
	return *o.By
}

// GetByOk returns a tuple with the By field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetByOk() (*string, bool) {
	if o == nil || IsNil(o.By) {
		return nil, false
	}
	return o.By, true
}

// HasBy returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasBy() bool {
	if o != nil && !IsNil(o.By) {
		return true
	}

	return false
}

// SetBy gets a reference to the given string and assigns it to the By field.
func (o *UnibeeApiBeanCreditTransaction) SetBy(v string) {
	o.By = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *UnibeeApiBeanCreditTransaction) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetCreditAmountAfter returns the CreditAmountAfter field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetCreditAmountAfter() int64 {
	if o == nil || IsNil(o.CreditAmountAfter) {
		var ret int64
		return ret
	}
	return *o.CreditAmountAfter
}

// GetCreditAmountAfterOk returns a tuple with the CreditAmountAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetCreditAmountAfterOk() (*int64, bool) {
	if o == nil || IsNil(o.CreditAmountAfter) {
		return nil, false
	}
	return o.CreditAmountAfter, true
}

// HasCreditAmountAfter returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasCreditAmountAfter() bool {
	if o != nil && !IsNil(o.CreditAmountAfter) {
		return true
	}

	return false
}

// SetCreditAmountAfter gets a reference to the given int64 and assigns it to the CreditAmountAfter field.
func (o *UnibeeApiBeanCreditTransaction) SetCreditAmountAfter(v int64) {
	o.CreditAmountAfter = &v
}

// GetCreditAmountBefore returns the CreditAmountBefore field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetCreditAmountBefore() int64 {
	if o == nil || IsNil(o.CreditAmountBefore) {
		var ret int64
		return ret
	}
	return *o.CreditAmountBefore
}

// GetCreditAmountBeforeOk returns a tuple with the CreditAmountBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetCreditAmountBeforeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreditAmountBefore) {
		return nil, false
	}
	return o.CreditAmountBefore, true
}

// HasCreditAmountBefore returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasCreditAmountBefore() bool {
	if o != nil && !IsNil(o.CreditAmountBefore) {
		return true
	}

	return false
}

// SetCreditAmountBefore gets a reference to the given int64 and assigns it to the CreditAmountBefore field.
func (o *UnibeeApiBeanCreditTransaction) SetCreditAmountBefore(v int64) {
	o.CreditAmountBefore = &v
}

// GetCreditId returns the CreditId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetCreditId() int64 {
	if o == nil || IsNil(o.CreditId) {
		var ret int64
		return ret
	}
	return *o.CreditId
}

// GetCreditIdOk returns a tuple with the CreditId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetCreditIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CreditId) {
		return nil, false
	}
	return o.CreditId, true
}

// HasCreditId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasCreditId() bool {
	if o != nil && !IsNil(o.CreditId) {
		return true
	}

	return false
}

// SetCreditId gets a reference to the given int64 and assigns it to the CreditId field.
func (o *UnibeeApiBeanCreditTransaction) SetCreditId(v int64) {
	o.CreditId = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *UnibeeApiBeanCreditTransaction) SetCurrency(v string) {
	o.Currency = &v
}

// GetDeltaAmount returns the DeltaAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetDeltaAmount() int64 {
	if o == nil || IsNil(o.DeltaAmount) {
		var ret int64
		return ret
	}
	return *o.DeltaAmount
}

// GetDeltaAmountOk returns a tuple with the DeltaAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetDeltaAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.DeltaAmount) {
		return nil, false
	}
	return o.DeltaAmount, true
}

// HasDeltaAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasDeltaAmount() bool {
	if o != nil && !IsNil(o.DeltaAmount) {
		return true
	}

	return false
}

// SetDeltaAmount gets a reference to the given int64 and assigns it to the DeltaAmount field.
func (o *UnibeeApiBeanCreditTransaction) SetDeltaAmount(v int64) {
	o.DeltaAmount = &v
}

// GetDeltaCurrencyAmount returns the DeltaCurrencyAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetDeltaCurrencyAmount() int64 {
	if o == nil || IsNil(o.DeltaCurrencyAmount) {
		var ret int64
		return ret
	}
	return *o.DeltaCurrencyAmount
}

// GetDeltaCurrencyAmountOk returns a tuple with the DeltaCurrencyAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetDeltaCurrencyAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.DeltaCurrencyAmount) {
		return nil, false
	}
	return o.DeltaCurrencyAmount, true
}

// HasDeltaCurrencyAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasDeltaCurrencyAmount() bool {
	if o != nil && !IsNil(o.DeltaCurrencyAmount) {
		return true
	}

	return false
}

// SetDeltaCurrencyAmount gets a reference to the given int64 and assigns it to the DeltaCurrencyAmount field.
func (o *UnibeeApiBeanCreditTransaction) SetDeltaCurrencyAmount(v int64) {
	o.DeltaCurrencyAmount = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UnibeeApiBeanCreditTransaction) SetDescription(v string) {
	o.Description = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetExchangeRate() int64 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret int64
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetExchangeRateOk() (*int64, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given int64 and assigns it to the ExchangeRate field.
func (o *UnibeeApiBeanCreditTransaction) SetExchangeRate(v int64) {
	o.ExchangeRate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UnibeeApiBeanCreditTransaction) SetId(v int64) {
	o.Id = &v
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId) {
		var ret string
		return ret
	}
	return *o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceId) {
		return nil, false
	}
	return o.InvoiceId, true
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasInvoiceId() bool {
	if o != nil && !IsNil(o.InvoiceId) {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given string and assigns it to the InvoiceId field.
func (o *UnibeeApiBeanCreditTransaction) SetInvoiceId(v string) {
	o.InvoiceId = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetMerchantId() int64 {
	if o == nil || IsNil(o.MerchantId) {
		var ret int64
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetMerchantIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasMerchantId() bool {
	if o != nil && !IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given int64 and assigns it to the MerchantId field.
func (o *UnibeeApiBeanCreditTransaction) SetMerchantId(v int64) {
	o.MerchantId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UnibeeApiBeanCreditTransaction) SetName(v string) {
	o.Name = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *UnibeeApiBeanCreditTransaction) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetTransactionType() int32 {
	if o == nil || IsNil(o.TransactionType) {
		var ret int32
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetTransactionTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given int32 and assigns it to the TransactionType field.
func (o *UnibeeApiBeanCreditTransaction) SetTransactionType(v int32) {
	o.TransactionType = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditTransaction) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditTransaction) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditTransaction) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *UnibeeApiBeanCreditTransaction) SetUserId(v int64) {
	o.UserId = &v
}

func (o UnibeeApiBeanCreditTransaction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanCreditTransaction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountType) {
		toSerialize["accountType"] = o.AccountType
	}
	if !IsNil(o.BizId) {
		toSerialize["bizId"] = o.BizId
	}
	if !IsNil(o.By) {
		toSerialize["by"] = o.By
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.CreditAmountAfter) {
		toSerialize["creditAmountAfter"] = o.CreditAmountAfter
	}
	if !IsNil(o.CreditAmountBefore) {
		toSerialize["creditAmountBefore"] = o.CreditAmountBefore
	}
	if !IsNil(o.CreditId) {
		toSerialize["creditId"] = o.CreditId
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.DeltaAmount) {
		toSerialize["deltaAmount"] = o.DeltaAmount
	}
	if !IsNil(o.DeltaCurrencyAmount) {
		toSerialize["deltaCurrencyAmount"] = o.DeltaCurrencyAmount
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InvoiceId) {
		toSerialize["invoiceId"] = o.InvoiceId
	}
	if !IsNil(o.MerchantId) {
		toSerialize["merchantId"] = o.MerchantId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transactionType"] = o.TransactionType
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanCreditTransaction struct {
	value *UnibeeApiBeanCreditTransaction
	isSet bool
}

func (v NullableUnibeeApiBeanCreditTransaction) Get() *UnibeeApiBeanCreditTransaction {
	return v.value
}

func (v *NullableUnibeeApiBeanCreditTransaction) Set(val *UnibeeApiBeanCreditTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanCreditTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanCreditTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanCreditTransaction(val *UnibeeApiBeanCreditTransaction) *NullableUnibeeApiBeanCreditTransaction {
	return &NullableUnibeeApiBeanCreditTransaction{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanCreditTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanCreditTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


