/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202510192014
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanDetailCreditAccountDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanDetailCreditAccountDetail{}

// UnibeeApiBeanDetailCreditAccountDetail struct for UnibeeApiBeanDetailCreditAccountDetail
type UnibeeApiBeanDetailCreditAccountDetail struct {
	// credit amount, in cent if type is main
	Amount *int64 `json:"amount,omitempty"`
	// create utc time
	CreateTime *int64 `json:"createTime,omitempty"`
	// currency
	Currency *string `json:"currency,omitempty"`
	// currency amount, in cent
	CurrencyAmount *int64 `json:"currencyAmount,omitempty"`
	// keep two decimal placesï¼Œmultiply by 100 saved, 1 currency = 1 credit * (exchange_rate/100), main account fixed rate to 100
	ExchangeRate *int64 `json:"exchangeRate,omitempty"`
	// Id
	Id *int64 `json:"id,omitempty"`
	// the total decrement amount
	TotalDecrementAmount *int64 `json:"totalDecrementAmount,omitempty"`
	// the total increment amount
	TotalIncrementAmount *int64 `json:"totalIncrementAmount,omitempty"`
	// type of credit account, 1-main account, 2-gift account
	Type *int32 `json:"type,omitempty"`
	User *UnibeeApiBeanUserAccount `json:"user,omitempty"`
}

// NewUnibeeApiBeanDetailCreditAccountDetail instantiates a new UnibeeApiBeanDetailCreditAccountDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanDetailCreditAccountDetail() *UnibeeApiBeanDetailCreditAccountDetail {
	this := UnibeeApiBeanDetailCreditAccountDetail{}
	return &this
}

// NewUnibeeApiBeanDetailCreditAccountDetailWithDefaults instantiates a new UnibeeApiBeanDetailCreditAccountDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanDetailCreditAccountDetailWithDefaults() *UnibeeApiBeanDetailCreditAccountDetail {
	this := UnibeeApiBeanDetailCreditAccountDetail{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetAmount() int64 {
	if o == nil || IsNil(o.Amount) {
		var ret int64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int64 and assigns it to the Amount field.
func (o *UnibeeApiBeanDetailCreditAccountDetail) SetAmount(v int64) {
	o.Amount = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *UnibeeApiBeanDetailCreditAccountDetail) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *UnibeeApiBeanDetailCreditAccountDetail) SetCurrency(v string) {
	o.Currency = &v
}

// GetCurrencyAmount returns the CurrencyAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetCurrencyAmount() int64 {
	if o == nil || IsNil(o.CurrencyAmount) {
		var ret int64
		return ret
	}
	return *o.CurrencyAmount
}

// GetCurrencyAmountOk returns a tuple with the CurrencyAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetCurrencyAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrencyAmount) {
		return nil, false
	}
	return o.CurrencyAmount, true
}

// HasCurrencyAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) HasCurrencyAmount() bool {
	if o != nil && !IsNil(o.CurrencyAmount) {
		return true
	}

	return false
}

// SetCurrencyAmount gets a reference to the given int64 and assigns it to the CurrencyAmount field.
func (o *UnibeeApiBeanDetailCreditAccountDetail) SetCurrencyAmount(v int64) {
	o.CurrencyAmount = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetExchangeRate() int64 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret int64
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetExchangeRateOk() (*int64, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given int64 and assigns it to the ExchangeRate field.
func (o *UnibeeApiBeanDetailCreditAccountDetail) SetExchangeRate(v int64) {
	o.ExchangeRate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UnibeeApiBeanDetailCreditAccountDetail) SetId(v int64) {
	o.Id = &v
}

// GetTotalDecrementAmount returns the TotalDecrementAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetTotalDecrementAmount() int64 {
	if o == nil || IsNil(o.TotalDecrementAmount) {
		var ret int64
		return ret
	}
	return *o.TotalDecrementAmount
}

// GetTotalDecrementAmountOk returns a tuple with the TotalDecrementAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetTotalDecrementAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalDecrementAmount) {
		return nil, false
	}
	return o.TotalDecrementAmount, true
}

// HasTotalDecrementAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) HasTotalDecrementAmount() bool {
	if o != nil && !IsNil(o.TotalDecrementAmount) {
		return true
	}

	return false
}

// SetTotalDecrementAmount gets a reference to the given int64 and assigns it to the TotalDecrementAmount field.
func (o *UnibeeApiBeanDetailCreditAccountDetail) SetTotalDecrementAmount(v int64) {
	o.TotalDecrementAmount = &v
}

// GetTotalIncrementAmount returns the TotalIncrementAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetTotalIncrementAmount() int64 {
	if o == nil || IsNil(o.TotalIncrementAmount) {
		var ret int64
		return ret
	}
	return *o.TotalIncrementAmount
}

// GetTotalIncrementAmountOk returns a tuple with the TotalIncrementAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetTotalIncrementAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalIncrementAmount) {
		return nil, false
	}
	return o.TotalIncrementAmount, true
}

// HasTotalIncrementAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) HasTotalIncrementAmount() bool {
	if o != nil && !IsNil(o.TotalIncrementAmount) {
		return true
	}

	return false
}

// SetTotalIncrementAmount gets a reference to the given int64 and assigns it to the TotalIncrementAmount field.
func (o *UnibeeApiBeanDetailCreditAccountDetail) SetTotalIncrementAmount(v int64) {
	o.TotalIncrementAmount = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *UnibeeApiBeanDetailCreditAccountDetail) SetType(v int32) {
	o.Type = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetUser() UnibeeApiBeanUserAccount {
	if o == nil || IsNil(o.User) {
		var ret UnibeeApiBeanUserAccount
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) GetUserOk() (*UnibeeApiBeanUserAccount, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailCreditAccountDetail) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given UnibeeApiBeanUserAccount and assigns it to the User field.
func (o *UnibeeApiBeanDetailCreditAccountDetail) SetUser(v UnibeeApiBeanUserAccount) {
	o.User = &v
}

func (o UnibeeApiBeanDetailCreditAccountDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanDetailCreditAccountDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.CurrencyAmount) {
		toSerialize["currencyAmount"] = o.CurrencyAmount
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TotalDecrementAmount) {
		toSerialize["totalDecrementAmount"] = o.TotalDecrementAmount
	}
	if !IsNil(o.TotalIncrementAmount) {
		toSerialize["totalIncrementAmount"] = o.TotalIncrementAmount
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanDetailCreditAccountDetail struct {
	value *UnibeeApiBeanDetailCreditAccountDetail
	isSet bool
}

func (v NullableUnibeeApiBeanDetailCreditAccountDetail) Get() *UnibeeApiBeanDetailCreditAccountDetail {
	return v.value
}

func (v *NullableUnibeeApiBeanDetailCreditAccountDetail) Set(val *UnibeeApiBeanDetailCreditAccountDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanDetailCreditAccountDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanDetailCreditAccountDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanDetailCreditAccountDetail(val *UnibeeApiBeanDetailCreditAccountDetail) *NullableUnibeeApiBeanDetailCreditAccountDetail {
	return &NullableUnibeeApiBeanDetailCreditAccountDetail{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanDetailCreditAccountDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanDetailCreditAccountDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


