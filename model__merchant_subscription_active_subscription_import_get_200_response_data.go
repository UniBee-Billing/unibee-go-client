/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508041414
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the MerchantSubscriptionActiveSubscriptionImportGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantSubscriptionActiveSubscriptionImportGet200ResponseData{}

// MerchantSubscriptionActiveSubscriptionImportGet200ResponseData struct for MerchantSubscriptionActiveSubscriptionImportGet200ResponseData
type MerchantSubscriptionActiveSubscriptionImportGet200ResponseData struct {
	Subscription *UnibeeApiBeanDetailSubscriptionDetail `json:"subscription,omitempty"`
}

// NewMerchantSubscriptionActiveSubscriptionImportGet200ResponseData instantiates a new MerchantSubscriptionActiveSubscriptionImportGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantSubscriptionActiveSubscriptionImportGet200ResponseData() *MerchantSubscriptionActiveSubscriptionImportGet200ResponseData {
	this := MerchantSubscriptionActiveSubscriptionImportGet200ResponseData{}
	return &this
}

// NewMerchantSubscriptionActiveSubscriptionImportGet200ResponseDataWithDefaults instantiates a new MerchantSubscriptionActiveSubscriptionImportGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantSubscriptionActiveSubscriptionImportGet200ResponseDataWithDefaults() *MerchantSubscriptionActiveSubscriptionImportGet200ResponseData {
	this := MerchantSubscriptionActiveSubscriptionImportGet200ResponseData{}
	return &this
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *MerchantSubscriptionActiveSubscriptionImportGet200ResponseData) GetSubscription() UnibeeApiBeanDetailSubscriptionDetail {
	if o == nil || IsNil(o.Subscription) {
		var ret UnibeeApiBeanDetailSubscriptionDetail
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionActiveSubscriptionImportGet200ResponseData) GetSubscriptionOk() (*UnibeeApiBeanDetailSubscriptionDetail, bool) {
	if o == nil || IsNil(o.Subscription) {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *MerchantSubscriptionActiveSubscriptionImportGet200ResponseData) HasSubscription() bool {
	if o != nil && !IsNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given UnibeeApiBeanDetailSubscriptionDetail and assigns it to the Subscription field.
func (o *MerchantSubscriptionActiveSubscriptionImportGet200ResponseData) SetSubscription(v UnibeeApiBeanDetailSubscriptionDetail) {
	o.Subscription = &v
}

func (o MerchantSubscriptionActiveSubscriptionImportGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantSubscriptionActiveSubscriptionImportGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	return toSerialize, nil
}

type NullableMerchantSubscriptionActiveSubscriptionImportGet200ResponseData struct {
	value *MerchantSubscriptionActiveSubscriptionImportGet200ResponseData
	isSet bool
}

func (v NullableMerchantSubscriptionActiveSubscriptionImportGet200ResponseData) Get() *MerchantSubscriptionActiveSubscriptionImportGet200ResponseData {
	return v.value
}

func (v *NullableMerchantSubscriptionActiveSubscriptionImportGet200ResponseData) Set(val *MerchantSubscriptionActiveSubscriptionImportGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantSubscriptionActiveSubscriptionImportGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantSubscriptionActiveSubscriptionImportGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantSubscriptionActiveSubscriptionImportGet200ResponseData(val *MerchantSubscriptionActiveSubscriptionImportGet200ResponseData) *NullableMerchantSubscriptionActiveSubscriptionImportGet200ResponseData {
	return &NullableMerchantSubscriptionActiveSubscriptionImportGet200ResponseData{value: val, isSet: true}
}

func (v NullableMerchantSubscriptionActiveSubscriptionImportGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantSubscriptionActiveSubscriptionImportGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


