/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202510192014
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData{}

// MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData struct for MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData
type MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData struct {
	Addon *UnibeeApiBeanPlan `json:"addon,omitempty"`
	// apply promo credit or not
	ApplyPromoCredit *bool `json:"applyPromoCredit,omitempty"`
	Currency *string `json:"currency,omitempty"`
	Discount *UnibeeApiBeanMerchantDiscountCode `json:"discount,omitempty"`
	DiscountAmount *int64 `json:"discountAmount,omitempty"`
	Email *string `json:"email,omitempty"`
	Invoice *UnibeeApiBeanInvoice `json:"invoice,omitempty"`
	OriginAmount *int64 `json:"originAmount,omitempty"`
	Quantity *int64 `json:"quantity,omitempty"`
	TaxAmount *int64 `json:"taxAmount,omitempty"`
	TaxPercentage *int64 `json:"taxPercentage,omitempty"`
	TotalAmount *int64 `json:"totalAmount,omitempty"`
	UserId *int64 `json:"userId,omitempty"`
	VatNumber *string `json:"vatNumber,omitempty"`
}

// NewMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData instantiates a new MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData() *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData {
	this := MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData{}
	return &this
}

// NewMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseDataWithDefaults instantiates a new MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseDataWithDefaults() *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData {
	this := MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData{}
	return &this
}

// GetAddon returns the Addon field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetAddon() UnibeeApiBeanPlan {
	if o == nil || IsNil(o.Addon) {
		var ret UnibeeApiBeanPlan
		return ret
	}
	return *o.Addon
}

// GetAddonOk returns a tuple with the Addon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetAddonOk() (*UnibeeApiBeanPlan, bool) {
	if o == nil || IsNil(o.Addon) {
		return nil, false
	}
	return o.Addon, true
}

// HasAddon returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasAddon() bool {
	if o != nil && !IsNil(o.Addon) {
		return true
	}

	return false
}

// SetAddon gets a reference to the given UnibeeApiBeanPlan and assigns it to the Addon field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetAddon(v UnibeeApiBeanPlan) {
	o.Addon = &v
}

// GetApplyPromoCredit returns the ApplyPromoCredit field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetApplyPromoCredit() bool {
	if o == nil || IsNil(o.ApplyPromoCredit) {
		var ret bool
		return ret
	}
	return *o.ApplyPromoCredit
}

// GetApplyPromoCreditOk returns a tuple with the ApplyPromoCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetApplyPromoCreditOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplyPromoCredit) {
		return nil, false
	}
	return o.ApplyPromoCredit, true
}

// HasApplyPromoCredit returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasApplyPromoCredit() bool {
	if o != nil && !IsNil(o.ApplyPromoCredit) {
		return true
	}

	return false
}

// SetApplyPromoCredit gets a reference to the given bool and assigns it to the ApplyPromoCredit field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetApplyPromoCredit(v bool) {
	o.ApplyPromoCredit = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetCurrency(v string) {
	o.Currency = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetDiscount() UnibeeApiBeanMerchantDiscountCode {
	if o == nil || IsNil(o.Discount) {
		var ret UnibeeApiBeanMerchantDiscountCode
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetDiscountOk() (*UnibeeApiBeanMerchantDiscountCode, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given UnibeeApiBeanMerchantDiscountCode and assigns it to the Discount field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetDiscount(v UnibeeApiBeanMerchantDiscountCode) {
	o.Discount = &v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetDiscountAmount() int64 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret int64
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetDiscountAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given int64 and assigns it to the DiscountAmount field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetDiscountAmount(v int64) {
	o.DiscountAmount = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetEmail(v string) {
	o.Email = &v
}

// GetInvoice returns the Invoice field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetInvoice() UnibeeApiBeanInvoice {
	if o == nil || IsNil(o.Invoice) {
		var ret UnibeeApiBeanInvoice
		return ret
	}
	return *o.Invoice
}

// GetInvoiceOk returns a tuple with the Invoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetInvoiceOk() (*UnibeeApiBeanInvoice, bool) {
	if o == nil || IsNil(o.Invoice) {
		return nil, false
	}
	return o.Invoice, true
}

// HasInvoice returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasInvoice() bool {
	if o != nil && !IsNil(o.Invoice) {
		return true
	}

	return false
}

// SetInvoice gets a reference to the given UnibeeApiBeanInvoice and assigns it to the Invoice field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetInvoice(v UnibeeApiBeanInvoice) {
	o.Invoice = &v
}

// GetOriginAmount returns the OriginAmount field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetOriginAmount() int64 {
	if o == nil || IsNil(o.OriginAmount) {
		var ret int64
		return ret
	}
	return *o.OriginAmount
}

// GetOriginAmountOk returns a tuple with the OriginAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetOriginAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.OriginAmount) {
		return nil, false
	}
	return o.OriginAmount, true
}

// HasOriginAmount returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasOriginAmount() bool {
	if o != nil && !IsNil(o.OriginAmount) {
		return true
	}

	return false
}

// SetOriginAmount gets a reference to the given int64 and assigns it to the OriginAmount field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetOriginAmount(v int64) {
	o.OriginAmount = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetQuantity() int64 {
	if o == nil || IsNil(o.Quantity) {
		var ret int64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int64 and assigns it to the Quantity field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetQuantity(v int64) {
	o.Quantity = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetTaxAmount() int64 {
	if o == nil || IsNil(o.TaxAmount) {
		var ret int64
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetTaxAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TaxAmount) {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasTaxAmount() bool {
	if o != nil && !IsNil(o.TaxAmount) {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given int64 and assigns it to the TaxAmount field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetTaxAmount(v int64) {
	o.TaxAmount = &v
}

// GetTaxPercentage returns the TaxPercentage field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetTaxPercentage() int64 {
	if o == nil || IsNil(o.TaxPercentage) {
		var ret int64
		return ret
	}
	return *o.TaxPercentage
}

// GetTaxPercentageOk returns a tuple with the TaxPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetTaxPercentageOk() (*int64, bool) {
	if o == nil || IsNil(o.TaxPercentage) {
		return nil, false
	}
	return o.TaxPercentage, true
}

// HasTaxPercentage returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasTaxPercentage() bool {
	if o != nil && !IsNil(o.TaxPercentage) {
		return true
	}

	return false
}

// SetTaxPercentage gets a reference to the given int64 and assigns it to the TaxPercentage field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetTaxPercentage(v int64) {
	o.TaxPercentage = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetTotalAmount() int64 {
	if o == nil || IsNil(o.TotalAmount) {
		var ret int64
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetTotalAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given int64 and assigns it to the TotalAmount field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetTotalAmount(v int64) {
	o.TotalAmount = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetUserId(v int64) {
	o.UserId = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetVatNumber() string {
	if o == nil || IsNil(o.VatNumber) {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) GetVatNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VatNumber) {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) HasVatNumber() bool {
	if o != nil && !IsNil(o.VatNumber) {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) SetVatNumber(v string) {
	o.VatNumber = &v
}

func (o MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Addon) {
		toSerialize["addon"] = o.Addon
	}
	if !IsNil(o.ApplyPromoCredit) {
		toSerialize["applyPromoCredit"] = o.ApplyPromoCredit
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discountAmount"] = o.DiscountAmount
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Invoice) {
		toSerialize["invoice"] = o.Invoice
	}
	if !IsNil(o.OriginAmount) {
		toSerialize["originAmount"] = o.OriginAmount
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.TaxAmount) {
		toSerialize["taxAmount"] = o.TaxAmount
	}
	if !IsNil(o.TaxPercentage) {
		toSerialize["taxPercentage"] = o.TaxPercentage
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.VatNumber) {
		toSerialize["vatNumber"] = o.VatNumber
	}
	return toSerialize, nil
}

type NullableMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData struct {
	value *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData
	isSet bool
}

func (v NullableMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) Get() *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData {
	return v.value
}

func (v *NullableMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) Set(val *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData(val *MerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) *NullableMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData {
	return &NullableMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData{value: val, isSet: true}
}

func (v NullableMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantSubscriptionNewOnetimeAddonPreviewPost200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


