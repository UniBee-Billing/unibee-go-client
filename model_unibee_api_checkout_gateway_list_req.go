/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202510192014
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiCheckoutGatewayListReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiCheckoutGatewayListReq{}

// UnibeeApiCheckoutGatewayListReq struct for UnibeeApiCheckoutGatewayListReq
type UnibeeApiCheckoutGatewayListReq struct {
	MerchantId int64 `json:"merchantId"`
}

type _UnibeeApiCheckoutGatewayListReq UnibeeApiCheckoutGatewayListReq

// NewUnibeeApiCheckoutGatewayListReq instantiates a new UnibeeApiCheckoutGatewayListReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiCheckoutGatewayListReq(merchantId int64) *UnibeeApiCheckoutGatewayListReq {
	this := UnibeeApiCheckoutGatewayListReq{}
	this.MerchantId = merchantId
	return &this
}

// NewUnibeeApiCheckoutGatewayListReqWithDefaults instantiates a new UnibeeApiCheckoutGatewayListReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiCheckoutGatewayListReqWithDefaults() *UnibeeApiCheckoutGatewayListReq {
	this := UnibeeApiCheckoutGatewayListReq{}
	return &this
}

// GetMerchantId returns the MerchantId field value
func (o *UnibeeApiCheckoutGatewayListReq) GetMerchantId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiCheckoutGatewayListReq) GetMerchantIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantId, true
}

// SetMerchantId sets field value
func (o *UnibeeApiCheckoutGatewayListReq) SetMerchantId(v int64) {
	o.MerchantId = v
}

func (o UnibeeApiCheckoutGatewayListReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiCheckoutGatewayListReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["merchantId"] = o.MerchantId
	return toSerialize, nil
}

func (o *UnibeeApiCheckoutGatewayListReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"merchantId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiCheckoutGatewayListReq := _UnibeeApiCheckoutGatewayListReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varUnibeeApiCheckoutGatewayListReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiCheckoutGatewayListReq(varUnibeeApiCheckoutGatewayListReq)

	return err
}

type NullableUnibeeApiCheckoutGatewayListReq struct {
	value *UnibeeApiCheckoutGatewayListReq
	isSet bool
}

func (v NullableUnibeeApiCheckoutGatewayListReq) Get() *UnibeeApiCheckoutGatewayListReq {
	return v.value
}

func (v *NullableUnibeeApiCheckoutGatewayListReq) Set(val *UnibeeApiCheckoutGatewayListReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiCheckoutGatewayListReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiCheckoutGatewayListReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiCheckoutGatewayListReq(val *UnibeeApiCheckoutGatewayListReq) *NullableUnibeeApiCheckoutGatewayListReq {
	return &NullableUnibeeApiCheckoutGatewayListReq{value: val, isSet: true}
}

func (v NullableUnibeeApiCheckoutGatewayListReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiCheckoutGatewayListReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


