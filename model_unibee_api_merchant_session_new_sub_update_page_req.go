/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509191247
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantSessionNewSubUpdatePageReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantSessionNewSubUpdatePageReq{}

// UnibeeApiMerchantSessionNewSubUpdatePageReq struct for UnibeeApiMerchantSessionNewSubUpdatePageReq
type UnibeeApiMerchantSessionNewSubUpdatePageReq struct {
	// CancelUrl
	CancelUrl *string `json:"cancelUrl,omitempty"`
	// Email, unique, either ExternalUserId&Email or UserId needed
	Email *string `json:"email,omitempty"`
	// ExternalUserId, unique, either ExternalUserId&Email or UserId needed
	ExternalUserId *string `json:"externalUserId,omitempty"`
	// Id of plan to update
	PlanId *int64 `json:"planId,omitempty"`
	// default product will use if productId not specified
	ProductId *int64 `json:"productId,omitempty"`
	// ReturnUrl
	ReturnUrl *string `json:"returnUrl,omitempty"`
	// UserId, unique, either ExternalUserId&Email or UserId needed
	UserId *int64 `json:"userId,omitempty"`
	// Vat Country Code
	VatCountryCode *string `json:"vatCountryCode,omitempty"`
}

// NewUnibeeApiMerchantSessionNewSubUpdatePageReq instantiates a new UnibeeApiMerchantSessionNewSubUpdatePageReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantSessionNewSubUpdatePageReq() *UnibeeApiMerchantSessionNewSubUpdatePageReq {
	this := UnibeeApiMerchantSessionNewSubUpdatePageReq{}
	return &this
}

// NewUnibeeApiMerchantSessionNewSubUpdatePageReqWithDefaults instantiates a new UnibeeApiMerchantSessionNewSubUpdatePageReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantSessionNewSubUpdatePageReqWithDefaults() *UnibeeApiMerchantSessionNewSubUpdatePageReq {
	this := UnibeeApiMerchantSessionNewSubUpdatePageReq{}
	return &this
}

// GetCancelUrl returns the CancelUrl field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetCancelUrl() string {
	if o == nil || IsNil(o.CancelUrl) {
		var ret string
		return ret
	}
	return *o.CancelUrl
}

// GetCancelUrlOk returns a tuple with the CancelUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetCancelUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CancelUrl) {
		return nil, false
	}
	return o.CancelUrl, true
}

// HasCancelUrl returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) HasCancelUrl() bool {
	if o != nil && !IsNil(o.CancelUrl) {
		return true
	}

	return false
}

// SetCancelUrl gets a reference to the given string and assigns it to the CancelUrl field.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) SetCancelUrl(v string) {
	o.CancelUrl = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) SetEmail(v string) {
	o.Email = &v
}

// GetExternalUserId returns the ExternalUserId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetExternalUserId() string {
	if o == nil || IsNil(o.ExternalUserId) {
		var ret string
		return ret
	}
	return *o.ExternalUserId
}

// GetExternalUserIdOk returns a tuple with the ExternalUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetExternalUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalUserId) {
		return nil, false
	}
	return o.ExternalUserId, true
}

// HasExternalUserId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) HasExternalUserId() bool {
	if o != nil && !IsNil(o.ExternalUserId) {
		return true
	}

	return false
}

// SetExternalUserId gets a reference to the given string and assigns it to the ExternalUserId field.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) SetExternalUserId(v string) {
	o.ExternalUserId = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetPlanId() int64 {
	if o == nil || IsNil(o.PlanId) {
		var ret int64
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetPlanIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given int64 and assigns it to the PlanId field.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) SetPlanId(v int64) {
	o.PlanId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetProductId() int64 {
	if o == nil || IsNil(o.ProductId) {
		var ret int64
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetProductIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int64 and assigns it to the ProductId field.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) SetProductId(v int64) {
	o.ProductId = &v
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetReturnUrl() string {
	if o == nil || IsNil(o.ReturnUrl) {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnUrl) {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) HasReturnUrl() bool {
	if o != nil && !IsNil(o.ReturnUrl) {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) SetUserId(v int64) {
	o.UserId = &v
}

// GetVatCountryCode returns the VatCountryCode field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetVatCountryCode() string {
	if o == nil || IsNil(o.VatCountryCode) {
		var ret string
		return ret
	}
	return *o.VatCountryCode
}

// GetVatCountryCodeOk returns a tuple with the VatCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) GetVatCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.VatCountryCode) {
		return nil, false
	}
	return o.VatCountryCode, true
}

// HasVatCountryCode returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) HasVatCountryCode() bool {
	if o != nil && !IsNil(o.VatCountryCode) {
		return true
	}

	return false
}

// SetVatCountryCode gets a reference to the given string and assigns it to the VatCountryCode field.
func (o *UnibeeApiMerchantSessionNewSubUpdatePageReq) SetVatCountryCode(v string) {
	o.VatCountryCode = &v
}

func (o UnibeeApiMerchantSessionNewSubUpdatePageReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantSessionNewSubUpdatePageReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CancelUrl) {
		toSerialize["cancelUrl"] = o.CancelUrl
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.ExternalUserId) {
		toSerialize["externalUserId"] = o.ExternalUserId
	}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.ReturnUrl) {
		toSerialize["returnUrl"] = o.ReturnUrl
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.VatCountryCode) {
		toSerialize["vatCountryCode"] = o.VatCountryCode
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantSessionNewSubUpdatePageReq struct {
	value *UnibeeApiMerchantSessionNewSubUpdatePageReq
	isSet bool
}

func (v NullableUnibeeApiMerchantSessionNewSubUpdatePageReq) Get() *UnibeeApiMerchantSessionNewSubUpdatePageReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantSessionNewSubUpdatePageReq) Set(val *UnibeeApiMerchantSessionNewSubUpdatePageReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantSessionNewSubUpdatePageReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantSessionNewSubUpdatePageReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantSessionNewSubUpdatePageReq(val *UnibeeApiMerchantSessionNewSubUpdatePageReq) *NullableUnibeeApiMerchantSessionNewSubUpdatePageReq {
	return &NullableUnibeeApiMerchantSessionNewSubUpdatePageReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantSessionNewSubUpdatePageReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantSessionNewSubUpdatePageReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


