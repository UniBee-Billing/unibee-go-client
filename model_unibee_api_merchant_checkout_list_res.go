/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509290914
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantCheckoutListRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantCheckoutListRes{}

// UnibeeApiMerchantCheckoutListRes struct for UnibeeApiMerchantCheckoutListRes
type UnibeeApiMerchantCheckoutListRes struct {
	// MerchantCheckout List Object
	MerchantCheckouts []UnibeeApiBeanMerchantCheckout `json:"merchantCheckouts,omitempty"`
}

// NewUnibeeApiMerchantCheckoutListRes instantiates a new UnibeeApiMerchantCheckoutListRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantCheckoutListRes() *UnibeeApiMerchantCheckoutListRes {
	this := UnibeeApiMerchantCheckoutListRes{}
	return &this
}

// NewUnibeeApiMerchantCheckoutListResWithDefaults instantiates a new UnibeeApiMerchantCheckoutListRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantCheckoutListResWithDefaults() *UnibeeApiMerchantCheckoutListRes {
	this := UnibeeApiMerchantCheckoutListRes{}
	return &this
}

// GetMerchantCheckouts returns the MerchantCheckouts field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCheckoutListRes) GetMerchantCheckouts() []UnibeeApiBeanMerchantCheckout {
	if o == nil || IsNil(o.MerchantCheckouts) {
		var ret []UnibeeApiBeanMerchantCheckout
		return ret
	}
	return o.MerchantCheckouts
}

// GetMerchantCheckoutsOk returns a tuple with the MerchantCheckouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCheckoutListRes) GetMerchantCheckoutsOk() ([]UnibeeApiBeanMerchantCheckout, bool) {
	if o == nil || IsNil(o.MerchantCheckouts) {
		return nil, false
	}
	return o.MerchantCheckouts, true
}

// HasMerchantCheckouts returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCheckoutListRes) HasMerchantCheckouts() bool {
	if o != nil && !IsNil(o.MerchantCheckouts) {
		return true
	}

	return false
}

// SetMerchantCheckouts gets a reference to the given []UnibeeApiBeanMerchantCheckout and assigns it to the MerchantCheckouts field.
func (o *UnibeeApiMerchantCheckoutListRes) SetMerchantCheckouts(v []UnibeeApiBeanMerchantCheckout) {
	o.MerchantCheckouts = v
}

func (o UnibeeApiMerchantCheckoutListRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantCheckoutListRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MerchantCheckouts) {
		toSerialize["merchantCheckouts"] = o.MerchantCheckouts
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantCheckoutListRes struct {
	value *UnibeeApiMerchantCheckoutListRes
	isSet bool
}

func (v NullableUnibeeApiMerchantCheckoutListRes) Get() *UnibeeApiMerchantCheckoutListRes {
	return v.value
}

func (v *NullableUnibeeApiMerchantCheckoutListRes) Set(val *UnibeeApiMerchantCheckoutListRes) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantCheckoutListRes) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantCheckoutListRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantCheckoutListRes(val *UnibeeApiMerchantCheckoutListRes) *NullableUnibeeApiMerchantCheckoutListRes {
	return &NullableUnibeeApiMerchantCheckoutListRes{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantCheckoutListRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantCheckoutListRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


