/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508050652
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanDetailUserMetric type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanDetailUserMetric{}

// UnibeeApiBeanDetailUserMetric struct for UnibeeApiBeanDetailUserMetric
type UnibeeApiBeanDetailUserMetric struct {
	// Addon
	Addons []UnibeeApiBeanPlanAddonDetail `json:"addons,omitempty"`
	// description
	Description *string `json:"description,omitempty"`
	// IsPaid
	IsPaid *bool `json:"isPaid,omitempty"`
	// LimitStats
	LimitStats []UnibeeApiBeanDetailUserMerchantMetricLimitStat `json:"limitStats,omitempty"`
	// MeteredChargeStats
	MeteredChargeStats []UnibeeApiBeanDetailUserMerchantMetricChargeStat `json:"meteredChargeStats,omitempty"`
	Plan *UnibeeApiBeanPlan `json:"plan,omitempty"`
	Product *UnibeeApiBeanProduct `json:"product,omitempty"`
	// RecurringChargeStats
	RecurringChargeStats []UnibeeApiBeanDetailUserMerchantMetricChargeStat `json:"recurringChargeStats,omitempty"`
	Subscription *UnibeeApiBeanSubscription `json:"subscription,omitempty"`
	User *UnibeeApiBeanUserAccount `json:"user,omitempty"`
}

// NewUnibeeApiBeanDetailUserMetric instantiates a new UnibeeApiBeanDetailUserMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanDetailUserMetric() *UnibeeApiBeanDetailUserMetric {
	this := UnibeeApiBeanDetailUserMetric{}
	return &this
}

// NewUnibeeApiBeanDetailUserMetricWithDefaults instantiates a new UnibeeApiBeanDetailUserMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanDetailUserMetricWithDefaults() *UnibeeApiBeanDetailUserMetric {
	this := UnibeeApiBeanDetailUserMetric{}
	return &this
}

// GetAddons returns the Addons field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMetric) GetAddons() []UnibeeApiBeanPlanAddonDetail {
	if o == nil || IsNil(o.Addons) {
		var ret []UnibeeApiBeanPlanAddonDetail
		return ret
	}
	return o.Addons
}

// GetAddonsOk returns a tuple with the Addons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMetric) GetAddonsOk() ([]UnibeeApiBeanPlanAddonDetail, bool) {
	if o == nil || IsNil(o.Addons) {
		return nil, false
	}
	return o.Addons, true
}

// HasAddons returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMetric) HasAddons() bool {
	if o != nil && !IsNil(o.Addons) {
		return true
	}

	return false
}

// SetAddons gets a reference to the given []UnibeeApiBeanPlanAddonDetail and assigns it to the Addons field.
func (o *UnibeeApiBeanDetailUserMetric) SetAddons(v []UnibeeApiBeanPlanAddonDetail) {
	o.Addons = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMetric) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMetric) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMetric) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UnibeeApiBeanDetailUserMetric) SetDescription(v string) {
	o.Description = &v
}

// GetIsPaid returns the IsPaid field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMetric) GetIsPaid() bool {
	if o == nil || IsNil(o.IsPaid) {
		var ret bool
		return ret
	}
	return *o.IsPaid
}

// GetIsPaidOk returns a tuple with the IsPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMetric) GetIsPaidOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPaid) {
		return nil, false
	}
	return o.IsPaid, true
}

// HasIsPaid returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMetric) HasIsPaid() bool {
	if o != nil && !IsNil(o.IsPaid) {
		return true
	}

	return false
}

// SetIsPaid gets a reference to the given bool and assigns it to the IsPaid field.
func (o *UnibeeApiBeanDetailUserMetric) SetIsPaid(v bool) {
	o.IsPaid = &v
}

// GetLimitStats returns the LimitStats field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMetric) GetLimitStats() []UnibeeApiBeanDetailUserMerchantMetricLimitStat {
	if o == nil || IsNil(o.LimitStats) {
		var ret []UnibeeApiBeanDetailUserMerchantMetricLimitStat
		return ret
	}
	return o.LimitStats
}

// GetLimitStatsOk returns a tuple with the LimitStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMetric) GetLimitStatsOk() ([]UnibeeApiBeanDetailUserMerchantMetricLimitStat, bool) {
	if o == nil || IsNil(o.LimitStats) {
		return nil, false
	}
	return o.LimitStats, true
}

// HasLimitStats returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMetric) HasLimitStats() bool {
	if o != nil && !IsNil(o.LimitStats) {
		return true
	}

	return false
}

// SetLimitStats gets a reference to the given []UnibeeApiBeanDetailUserMerchantMetricLimitStat and assigns it to the LimitStats field.
func (o *UnibeeApiBeanDetailUserMetric) SetLimitStats(v []UnibeeApiBeanDetailUserMerchantMetricLimitStat) {
	o.LimitStats = v
}

// GetMeteredChargeStats returns the MeteredChargeStats field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMetric) GetMeteredChargeStats() []UnibeeApiBeanDetailUserMerchantMetricChargeStat {
	if o == nil || IsNil(o.MeteredChargeStats) {
		var ret []UnibeeApiBeanDetailUserMerchantMetricChargeStat
		return ret
	}
	return o.MeteredChargeStats
}

// GetMeteredChargeStatsOk returns a tuple with the MeteredChargeStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMetric) GetMeteredChargeStatsOk() ([]UnibeeApiBeanDetailUserMerchantMetricChargeStat, bool) {
	if o == nil || IsNil(o.MeteredChargeStats) {
		return nil, false
	}
	return o.MeteredChargeStats, true
}

// HasMeteredChargeStats returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMetric) HasMeteredChargeStats() bool {
	if o != nil && !IsNil(o.MeteredChargeStats) {
		return true
	}

	return false
}

// SetMeteredChargeStats gets a reference to the given []UnibeeApiBeanDetailUserMerchantMetricChargeStat and assigns it to the MeteredChargeStats field.
func (o *UnibeeApiBeanDetailUserMetric) SetMeteredChargeStats(v []UnibeeApiBeanDetailUserMerchantMetricChargeStat) {
	o.MeteredChargeStats = v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMetric) GetPlan() UnibeeApiBeanPlan {
	if o == nil || IsNil(o.Plan) {
		var ret UnibeeApiBeanPlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMetric) GetPlanOk() (*UnibeeApiBeanPlan, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMetric) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given UnibeeApiBeanPlan and assigns it to the Plan field.
func (o *UnibeeApiBeanDetailUserMetric) SetPlan(v UnibeeApiBeanPlan) {
	o.Plan = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMetric) GetProduct() UnibeeApiBeanProduct {
	if o == nil || IsNil(o.Product) {
		var ret UnibeeApiBeanProduct
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMetric) GetProductOk() (*UnibeeApiBeanProduct, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMetric) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given UnibeeApiBeanProduct and assigns it to the Product field.
func (o *UnibeeApiBeanDetailUserMetric) SetProduct(v UnibeeApiBeanProduct) {
	o.Product = &v
}

// GetRecurringChargeStats returns the RecurringChargeStats field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMetric) GetRecurringChargeStats() []UnibeeApiBeanDetailUserMerchantMetricChargeStat {
	if o == nil || IsNil(o.RecurringChargeStats) {
		var ret []UnibeeApiBeanDetailUserMerchantMetricChargeStat
		return ret
	}
	return o.RecurringChargeStats
}

// GetRecurringChargeStatsOk returns a tuple with the RecurringChargeStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMetric) GetRecurringChargeStatsOk() ([]UnibeeApiBeanDetailUserMerchantMetricChargeStat, bool) {
	if o == nil || IsNil(o.RecurringChargeStats) {
		return nil, false
	}
	return o.RecurringChargeStats, true
}

// HasRecurringChargeStats returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMetric) HasRecurringChargeStats() bool {
	if o != nil && !IsNil(o.RecurringChargeStats) {
		return true
	}

	return false
}

// SetRecurringChargeStats gets a reference to the given []UnibeeApiBeanDetailUserMerchantMetricChargeStat and assigns it to the RecurringChargeStats field.
func (o *UnibeeApiBeanDetailUserMetric) SetRecurringChargeStats(v []UnibeeApiBeanDetailUserMerchantMetricChargeStat) {
	o.RecurringChargeStats = v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMetric) GetSubscription() UnibeeApiBeanSubscription {
	if o == nil || IsNil(o.Subscription) {
		var ret UnibeeApiBeanSubscription
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMetric) GetSubscriptionOk() (*UnibeeApiBeanSubscription, bool) {
	if o == nil || IsNil(o.Subscription) {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMetric) HasSubscription() bool {
	if o != nil && !IsNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given UnibeeApiBeanSubscription and assigns it to the Subscription field.
func (o *UnibeeApiBeanDetailUserMetric) SetSubscription(v UnibeeApiBeanSubscription) {
	o.Subscription = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMetric) GetUser() UnibeeApiBeanUserAccount {
	if o == nil || IsNil(o.User) {
		var ret UnibeeApiBeanUserAccount
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMetric) GetUserOk() (*UnibeeApiBeanUserAccount, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMetric) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given UnibeeApiBeanUserAccount and assigns it to the User field.
func (o *UnibeeApiBeanDetailUserMetric) SetUser(v UnibeeApiBeanUserAccount) {
	o.User = &v
}

func (o UnibeeApiBeanDetailUserMetric) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanDetailUserMetric) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Addons) {
		toSerialize["addons"] = o.Addons
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IsPaid) {
		toSerialize["isPaid"] = o.IsPaid
	}
	if !IsNil(o.LimitStats) {
		toSerialize["limitStats"] = o.LimitStats
	}
	if !IsNil(o.MeteredChargeStats) {
		toSerialize["meteredChargeStats"] = o.MeteredChargeStats
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.RecurringChargeStats) {
		toSerialize["recurringChargeStats"] = o.RecurringChargeStats
	}
	if !IsNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanDetailUserMetric struct {
	value *UnibeeApiBeanDetailUserMetric
	isSet bool
}

func (v NullableUnibeeApiBeanDetailUserMetric) Get() *UnibeeApiBeanDetailUserMetric {
	return v.value
}

func (v *NullableUnibeeApiBeanDetailUserMetric) Set(val *UnibeeApiBeanDetailUserMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanDetailUserMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanDetailUserMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanDetailUserMetric(val *UnibeeApiBeanDetailUserMetric) *NullableUnibeeApiBeanDetailUserMetric {
	return &NullableUnibeeApiBeanDetailUserMetric{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanDetailUserMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanDetailUserMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


