/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509290914
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantCreditNewConfigReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantCreditNewConfigReq{}

// UnibeeApiMerchantCreditNewConfigReq struct for UnibeeApiMerchantCreditNewConfigReq
type UnibeeApiMerchantCreditNewConfigReq struct {
	// currency
	Currency string `json:"currency"`
	// description
	Description *string `json:"description,omitempty"`
	// discount code exclusive when purchase, default no, 0-no, 1-yes
	DiscountCodeExclusive *int32 `json:"discountCodeExclusive,omitempty"`
	// keep two decimal placesï¼Œscale = 100, 1 currency = 1 credit * (exchange_rate/100), no effect on main account type
	ExchangeRate *int64 `json:"exchangeRate,omitempty"`
	// logo image base64, show when user purchase
	Logo *string `json:"logo,omitempty"`
	// logo url, show when user purchase
	LogoUrl *string `json:"logoUrl,omitempty"`
	// meta_data(json)
	MetaData *map[string]interface{} `json:"metaData,omitempty"`
	// name
	Name *string `json:"name,omitempty"`
	// credit account can used or payout in purchase or not, 0-no, 1-yes
	PayoutEnable *int32 `json:"payoutEnable,omitempty"`
	// is default used when in purchase preview, default no, 0-no, 1-yes
	PreviewDefaultUsed *int32 `json:"previewDefaultUsed,omitempty"`
	// credit account can be recharged or not, 0-no, 1-yes
	RechargeEnable *int32 `json:"rechargeEnable,omitempty"`
	// apply to recurring, default no, 0-no,1-yes
	Recurring *int32 `json:"recurring,omitempty"`
	// type of credit account, 1-main account, 2-promo credit account
	Type int32 `json:"type"`
}

type _UnibeeApiMerchantCreditNewConfigReq UnibeeApiMerchantCreditNewConfigReq

// NewUnibeeApiMerchantCreditNewConfigReq instantiates a new UnibeeApiMerchantCreditNewConfigReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantCreditNewConfigReq(currency string, type_ int32) *UnibeeApiMerchantCreditNewConfigReq {
	this := UnibeeApiMerchantCreditNewConfigReq{}
	this.Currency = currency
	this.Type = type_
	return &this
}

// NewUnibeeApiMerchantCreditNewConfigReqWithDefaults instantiates a new UnibeeApiMerchantCreditNewConfigReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantCreditNewConfigReqWithDefaults() *UnibeeApiMerchantCreditNewConfigReq {
	this := UnibeeApiMerchantCreditNewConfigReq{}
	return &this
}

// GetCurrency returns the Currency field value
func (o *UnibeeApiMerchantCreditNewConfigReq) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *UnibeeApiMerchantCreditNewConfigReq) SetCurrency(v string) {
	o.Currency = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UnibeeApiMerchantCreditNewConfigReq) SetDescription(v string) {
	o.Description = &v
}

// GetDiscountCodeExclusive returns the DiscountCodeExclusive field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetDiscountCodeExclusive() int32 {
	if o == nil || IsNil(o.DiscountCodeExclusive) {
		var ret int32
		return ret
	}
	return *o.DiscountCodeExclusive
}

// GetDiscountCodeExclusiveOk returns a tuple with the DiscountCodeExclusive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetDiscountCodeExclusiveOk() (*int32, bool) {
	if o == nil || IsNil(o.DiscountCodeExclusive) {
		return nil, false
	}
	return o.DiscountCodeExclusive, true
}

// HasDiscountCodeExclusive returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) HasDiscountCodeExclusive() bool {
	if o != nil && !IsNil(o.DiscountCodeExclusive) {
		return true
	}

	return false
}

// SetDiscountCodeExclusive gets a reference to the given int32 and assigns it to the DiscountCodeExclusive field.
func (o *UnibeeApiMerchantCreditNewConfigReq) SetDiscountCodeExclusive(v int32) {
	o.DiscountCodeExclusive = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetExchangeRate() int64 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret int64
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetExchangeRateOk() (*int64, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given int64 and assigns it to the ExchangeRate field.
func (o *UnibeeApiMerchantCreditNewConfigReq) SetExchangeRate(v int64) {
	o.ExchangeRate = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *UnibeeApiMerchantCreditNewConfigReq) SetLogo(v string) {
	o.Logo = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetLogoUrl() string {
	if o == nil || IsNil(o.LogoUrl) {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetLogoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoUrl) {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) HasLogoUrl() bool {
	if o != nil && !IsNil(o.LogoUrl) {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *UnibeeApiMerchantCreditNewConfigReq) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetMetaData() map[string]interface{} {
	if o == nil || IsNil(o.MetaData) {
		var ret map[string]interface{}
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetMetaDataOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.MetaData) {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) HasMetaData() bool {
	if o != nil && !IsNil(o.MetaData) {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given map[string]interface{} and assigns it to the MetaData field.
func (o *UnibeeApiMerchantCreditNewConfigReq) SetMetaData(v map[string]interface{}) {
	o.MetaData = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UnibeeApiMerchantCreditNewConfigReq) SetName(v string) {
	o.Name = &v
}

// GetPayoutEnable returns the PayoutEnable field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetPayoutEnable() int32 {
	if o == nil || IsNil(o.PayoutEnable) {
		var ret int32
		return ret
	}
	return *o.PayoutEnable
}

// GetPayoutEnableOk returns a tuple with the PayoutEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetPayoutEnableOk() (*int32, bool) {
	if o == nil || IsNil(o.PayoutEnable) {
		return nil, false
	}
	return o.PayoutEnable, true
}

// HasPayoutEnable returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) HasPayoutEnable() bool {
	if o != nil && !IsNil(o.PayoutEnable) {
		return true
	}

	return false
}

// SetPayoutEnable gets a reference to the given int32 and assigns it to the PayoutEnable field.
func (o *UnibeeApiMerchantCreditNewConfigReq) SetPayoutEnable(v int32) {
	o.PayoutEnable = &v
}

// GetPreviewDefaultUsed returns the PreviewDefaultUsed field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetPreviewDefaultUsed() int32 {
	if o == nil || IsNil(o.PreviewDefaultUsed) {
		var ret int32
		return ret
	}
	return *o.PreviewDefaultUsed
}

// GetPreviewDefaultUsedOk returns a tuple with the PreviewDefaultUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetPreviewDefaultUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.PreviewDefaultUsed) {
		return nil, false
	}
	return o.PreviewDefaultUsed, true
}

// HasPreviewDefaultUsed returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) HasPreviewDefaultUsed() bool {
	if o != nil && !IsNil(o.PreviewDefaultUsed) {
		return true
	}

	return false
}

// SetPreviewDefaultUsed gets a reference to the given int32 and assigns it to the PreviewDefaultUsed field.
func (o *UnibeeApiMerchantCreditNewConfigReq) SetPreviewDefaultUsed(v int32) {
	o.PreviewDefaultUsed = &v
}

// GetRechargeEnable returns the RechargeEnable field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetRechargeEnable() int32 {
	if o == nil || IsNil(o.RechargeEnable) {
		var ret int32
		return ret
	}
	return *o.RechargeEnable
}

// GetRechargeEnableOk returns a tuple with the RechargeEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetRechargeEnableOk() (*int32, bool) {
	if o == nil || IsNil(o.RechargeEnable) {
		return nil, false
	}
	return o.RechargeEnable, true
}

// HasRechargeEnable returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) HasRechargeEnable() bool {
	if o != nil && !IsNil(o.RechargeEnable) {
		return true
	}

	return false
}

// SetRechargeEnable gets a reference to the given int32 and assigns it to the RechargeEnable field.
func (o *UnibeeApiMerchantCreditNewConfigReq) SetRechargeEnable(v int32) {
	o.RechargeEnable = &v
}

// GetRecurring returns the Recurring field value if set, zero value otherwise.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetRecurring() int32 {
	if o == nil || IsNil(o.Recurring) {
		var ret int32
		return ret
	}
	return *o.Recurring
}

// GetRecurringOk returns a tuple with the Recurring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetRecurringOk() (*int32, bool) {
	if o == nil || IsNil(o.Recurring) {
		return nil, false
	}
	return o.Recurring, true
}

// HasRecurring returns a boolean if a field has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) HasRecurring() bool {
	if o != nil && !IsNil(o.Recurring) {
		return true
	}

	return false
}

// SetRecurring gets a reference to the given int32 and assigns it to the Recurring field.
func (o *UnibeeApiMerchantCreditNewConfigReq) SetRecurring(v int32) {
	o.Recurring = &v
}

// GetType returns the Type field value
func (o *UnibeeApiMerchantCreditNewConfigReq) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantCreditNewConfigReq) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *UnibeeApiMerchantCreditNewConfigReq) SetType(v int32) {
	o.Type = v
}

func (o UnibeeApiMerchantCreditNewConfigReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantCreditNewConfigReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DiscountCodeExclusive) {
		toSerialize["discountCodeExclusive"] = o.DiscountCodeExclusive
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.LogoUrl) {
		toSerialize["logoUrl"] = o.LogoUrl
	}
	if !IsNil(o.MetaData) {
		toSerialize["metaData"] = o.MetaData
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PayoutEnable) {
		toSerialize["payoutEnable"] = o.PayoutEnable
	}
	if !IsNil(o.PreviewDefaultUsed) {
		toSerialize["previewDefaultUsed"] = o.PreviewDefaultUsed
	}
	if !IsNil(o.RechargeEnable) {
		toSerialize["rechargeEnable"] = o.RechargeEnable
	}
	if !IsNil(o.Recurring) {
		toSerialize["recurring"] = o.Recurring
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *UnibeeApiMerchantCreditNewConfigReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"currency",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantCreditNewConfigReq := _UnibeeApiMerchantCreditNewConfigReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varUnibeeApiMerchantCreditNewConfigReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantCreditNewConfigReq(varUnibeeApiMerchantCreditNewConfigReq)

	return err
}

type NullableUnibeeApiMerchantCreditNewConfigReq struct {
	value *UnibeeApiMerchantCreditNewConfigReq
	isSet bool
}

func (v NullableUnibeeApiMerchantCreditNewConfigReq) Get() *UnibeeApiMerchantCreditNewConfigReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantCreditNewConfigReq) Set(val *UnibeeApiMerchantCreditNewConfigReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantCreditNewConfigReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantCreditNewConfigReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantCreditNewConfigReq(val *UnibeeApiMerchantCreditNewConfigReq) *NullableUnibeeApiMerchantCreditNewConfigReq {
	return &NullableUnibeeApiMerchantCreditNewConfigReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantCreditNewConfigReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantCreditNewConfigReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


