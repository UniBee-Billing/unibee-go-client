/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509290914
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiBeanDetailUserMerchantMetricChargeStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanDetailUserMerchantMetricChargeStat{}

// UnibeeApiBeanDetailUserMerchantMetricChargeStat struct for UnibeeApiBeanDetailUserMerchantMetricChargeStat
type UnibeeApiBeanDetailUserMerchantMetricChargeStat struct {
	// CurrentUsedValue
	CurrentUsedValue *int64 `json:"CurrentUsedValue,omitempty"`
	ChargePricing *UnibeeApiBeanPlanMetricMeteredChargeParam `json:"chargePricing,omitempty"`
	GraduatedStep *UnibeeApiBeanMetricPlanChargeGraduatedStep `json:"graduatedStep,omitempty"`
	MaxEventId *int64 `json:"maxEventId,omitempty"`
	MerchantMetric *UnibeeApiBeanMerchantMetric `json:"merchantMetric,omitempty"`
	// MetricId
	MetricId int64 `json:"metricId"`
	MinEventId *int64 `json:"minEventId,omitempty"`
	// TotalChargeAmount
	TotalChargeAmount *int64 `json:"totalChargeAmount,omitempty"`
}

type _UnibeeApiBeanDetailUserMerchantMetricChargeStat UnibeeApiBeanDetailUserMerchantMetricChargeStat

// NewUnibeeApiBeanDetailUserMerchantMetricChargeStat instantiates a new UnibeeApiBeanDetailUserMerchantMetricChargeStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanDetailUserMerchantMetricChargeStat(metricId int64) *UnibeeApiBeanDetailUserMerchantMetricChargeStat {
	this := UnibeeApiBeanDetailUserMerchantMetricChargeStat{}
	this.MetricId = metricId
	return &this
}

// NewUnibeeApiBeanDetailUserMerchantMetricChargeStatWithDefaults instantiates a new UnibeeApiBeanDetailUserMerchantMetricChargeStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanDetailUserMerchantMetricChargeStatWithDefaults() *UnibeeApiBeanDetailUserMerchantMetricChargeStat {
	this := UnibeeApiBeanDetailUserMerchantMetricChargeStat{}
	return &this
}

// GetCurrentUsedValue returns the CurrentUsedValue field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetCurrentUsedValue() int64 {
	if o == nil || IsNil(o.CurrentUsedValue) {
		var ret int64
		return ret
	}
	return *o.CurrentUsedValue
}

// GetCurrentUsedValueOk returns a tuple with the CurrentUsedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetCurrentUsedValueOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentUsedValue) {
		return nil, false
	}
	return o.CurrentUsedValue, true
}

// HasCurrentUsedValue returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) HasCurrentUsedValue() bool {
	if o != nil && !IsNil(o.CurrentUsedValue) {
		return true
	}

	return false
}

// SetCurrentUsedValue gets a reference to the given int64 and assigns it to the CurrentUsedValue field.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) SetCurrentUsedValue(v int64) {
	o.CurrentUsedValue = &v
}

// GetChargePricing returns the ChargePricing field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetChargePricing() UnibeeApiBeanPlanMetricMeteredChargeParam {
	if o == nil || IsNil(o.ChargePricing) {
		var ret UnibeeApiBeanPlanMetricMeteredChargeParam
		return ret
	}
	return *o.ChargePricing
}

// GetChargePricingOk returns a tuple with the ChargePricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetChargePricingOk() (*UnibeeApiBeanPlanMetricMeteredChargeParam, bool) {
	if o == nil || IsNil(o.ChargePricing) {
		return nil, false
	}
	return o.ChargePricing, true
}

// HasChargePricing returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) HasChargePricing() bool {
	if o != nil && !IsNil(o.ChargePricing) {
		return true
	}

	return false
}

// SetChargePricing gets a reference to the given UnibeeApiBeanPlanMetricMeteredChargeParam and assigns it to the ChargePricing field.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) SetChargePricing(v UnibeeApiBeanPlanMetricMeteredChargeParam) {
	o.ChargePricing = &v
}

// GetGraduatedStep returns the GraduatedStep field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetGraduatedStep() UnibeeApiBeanMetricPlanChargeGraduatedStep {
	if o == nil || IsNil(o.GraduatedStep) {
		var ret UnibeeApiBeanMetricPlanChargeGraduatedStep
		return ret
	}
	return *o.GraduatedStep
}

// GetGraduatedStepOk returns a tuple with the GraduatedStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetGraduatedStepOk() (*UnibeeApiBeanMetricPlanChargeGraduatedStep, bool) {
	if o == nil || IsNil(o.GraduatedStep) {
		return nil, false
	}
	return o.GraduatedStep, true
}

// HasGraduatedStep returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) HasGraduatedStep() bool {
	if o != nil && !IsNil(o.GraduatedStep) {
		return true
	}

	return false
}

// SetGraduatedStep gets a reference to the given UnibeeApiBeanMetricPlanChargeGraduatedStep and assigns it to the GraduatedStep field.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) SetGraduatedStep(v UnibeeApiBeanMetricPlanChargeGraduatedStep) {
	o.GraduatedStep = &v
}

// GetMaxEventId returns the MaxEventId field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetMaxEventId() int64 {
	if o == nil || IsNil(o.MaxEventId) {
		var ret int64
		return ret
	}
	return *o.MaxEventId
}

// GetMaxEventIdOk returns a tuple with the MaxEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetMaxEventIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxEventId) {
		return nil, false
	}
	return o.MaxEventId, true
}

// HasMaxEventId returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) HasMaxEventId() bool {
	if o != nil && !IsNil(o.MaxEventId) {
		return true
	}

	return false
}

// SetMaxEventId gets a reference to the given int64 and assigns it to the MaxEventId field.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) SetMaxEventId(v int64) {
	o.MaxEventId = &v
}

// GetMerchantMetric returns the MerchantMetric field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetMerchantMetric() UnibeeApiBeanMerchantMetric {
	if o == nil || IsNil(o.MerchantMetric) {
		var ret UnibeeApiBeanMerchantMetric
		return ret
	}
	return *o.MerchantMetric
}

// GetMerchantMetricOk returns a tuple with the MerchantMetric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetMerchantMetricOk() (*UnibeeApiBeanMerchantMetric, bool) {
	if o == nil || IsNil(o.MerchantMetric) {
		return nil, false
	}
	return o.MerchantMetric, true
}

// HasMerchantMetric returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) HasMerchantMetric() bool {
	if o != nil && !IsNil(o.MerchantMetric) {
		return true
	}

	return false
}

// SetMerchantMetric gets a reference to the given UnibeeApiBeanMerchantMetric and assigns it to the MerchantMetric field.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) SetMerchantMetric(v UnibeeApiBeanMerchantMetric) {
	o.MerchantMetric = &v
}

// GetMetricId returns the MetricId field value
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetMetricId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MetricId
}

// GetMetricIdOk returns a tuple with the MetricId field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetMetricIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricId, true
}

// SetMetricId sets field value
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) SetMetricId(v int64) {
	o.MetricId = v
}

// GetMinEventId returns the MinEventId field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetMinEventId() int64 {
	if o == nil || IsNil(o.MinEventId) {
		var ret int64
		return ret
	}
	return *o.MinEventId
}

// GetMinEventIdOk returns a tuple with the MinEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetMinEventIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MinEventId) {
		return nil, false
	}
	return o.MinEventId, true
}

// HasMinEventId returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) HasMinEventId() bool {
	if o != nil && !IsNil(o.MinEventId) {
		return true
	}

	return false
}

// SetMinEventId gets a reference to the given int64 and assigns it to the MinEventId field.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) SetMinEventId(v int64) {
	o.MinEventId = &v
}

// GetTotalChargeAmount returns the TotalChargeAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetTotalChargeAmount() int64 {
	if o == nil || IsNil(o.TotalChargeAmount) {
		var ret int64
		return ret
	}
	return *o.TotalChargeAmount
}

// GetTotalChargeAmountOk returns a tuple with the TotalChargeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) GetTotalChargeAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalChargeAmount) {
		return nil, false
	}
	return o.TotalChargeAmount, true
}

// HasTotalChargeAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) HasTotalChargeAmount() bool {
	if o != nil && !IsNil(o.TotalChargeAmount) {
		return true
	}

	return false
}

// SetTotalChargeAmount gets a reference to the given int64 and assigns it to the TotalChargeAmount field.
func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) SetTotalChargeAmount(v int64) {
	o.TotalChargeAmount = &v
}

func (o UnibeeApiBeanDetailUserMerchantMetricChargeStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanDetailUserMerchantMetricChargeStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentUsedValue) {
		toSerialize["CurrentUsedValue"] = o.CurrentUsedValue
	}
	if !IsNil(o.ChargePricing) {
		toSerialize["chargePricing"] = o.ChargePricing
	}
	if !IsNil(o.GraduatedStep) {
		toSerialize["graduatedStep"] = o.GraduatedStep
	}
	if !IsNil(o.MaxEventId) {
		toSerialize["maxEventId"] = o.MaxEventId
	}
	if !IsNil(o.MerchantMetric) {
		toSerialize["merchantMetric"] = o.MerchantMetric
	}
	toSerialize["metricId"] = o.MetricId
	if !IsNil(o.MinEventId) {
		toSerialize["minEventId"] = o.MinEventId
	}
	if !IsNil(o.TotalChargeAmount) {
		toSerialize["totalChargeAmount"] = o.TotalChargeAmount
	}
	return toSerialize, nil
}

func (o *UnibeeApiBeanDetailUserMerchantMetricChargeStat) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"metricId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiBeanDetailUserMerchantMetricChargeStat := _UnibeeApiBeanDetailUserMerchantMetricChargeStat{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varUnibeeApiBeanDetailUserMerchantMetricChargeStat)

	if err != nil {
		return err
	}

	*o = UnibeeApiBeanDetailUserMerchantMetricChargeStat(varUnibeeApiBeanDetailUserMerchantMetricChargeStat)

	return err
}

type NullableUnibeeApiBeanDetailUserMerchantMetricChargeStat struct {
	value *UnibeeApiBeanDetailUserMerchantMetricChargeStat
	isSet bool
}

func (v NullableUnibeeApiBeanDetailUserMerchantMetricChargeStat) Get() *UnibeeApiBeanDetailUserMerchantMetricChargeStat {
	return v.value
}

func (v *NullableUnibeeApiBeanDetailUserMerchantMetricChargeStat) Set(val *UnibeeApiBeanDetailUserMerchantMetricChargeStat) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanDetailUserMerchantMetricChargeStat) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanDetailUserMerchantMetricChargeStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanDetailUserMerchantMetricChargeStat(val *UnibeeApiBeanDetailUserMerchantMetricChargeStat) *NullableUnibeeApiBeanDetailUserMerchantMetricChargeStat {
	return &NullableUnibeeApiBeanDetailUserMerchantMetricChargeStat{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanDetailUserMerchantMetricChargeStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanDetailUserMerchantMetricChargeStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


