/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508150435
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanInvoicePlanSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanInvoicePlanSnapshot{}

// UnibeeApiBeanInvoicePlanSnapshot struct for UnibeeApiBeanInvoicePlanSnapshot
type UnibeeApiBeanInvoicePlanSnapshot struct {
	// Addons associated with the current plan.
	Addons []UnibeeApiBeanPlanAddonDetail `json:"addons,omitempty"`
	// Billing charge
	AutoCharge *bool `json:"autoCharge,omitempty"`
	// Billing charge type. 0: One-time, 1: New Subscription, 2: Upgrade, 3: Downgrade, 4: Renewal, 5: Billing Cycle Charge.
	ChargeType *int32 `json:"chargeType,omitempty"`
	Plan *UnibeeApiBeanPlan `json:"plan,omitempty"`
	// Addons from the previous plan, relevant for upgrade or downgrade (paidType = 2 or 3).
	PreviousAddons []UnibeeApiBeanPlanAddonDetail `json:"previousAddons,omitempty"`
	PreviousPlan *UnibeeApiBeanPlan `json:"previousPlan,omitempty"`
}

// NewUnibeeApiBeanInvoicePlanSnapshot instantiates a new UnibeeApiBeanInvoicePlanSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanInvoicePlanSnapshot() *UnibeeApiBeanInvoicePlanSnapshot {
	this := UnibeeApiBeanInvoicePlanSnapshot{}
	return &this
}

// NewUnibeeApiBeanInvoicePlanSnapshotWithDefaults instantiates a new UnibeeApiBeanInvoicePlanSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanInvoicePlanSnapshotWithDefaults() *UnibeeApiBeanInvoicePlanSnapshot {
	this := UnibeeApiBeanInvoicePlanSnapshot{}
	return &this
}

// GetAddons returns the Addons field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetAddons() []UnibeeApiBeanPlanAddonDetail {
	if o == nil || IsNil(o.Addons) {
		var ret []UnibeeApiBeanPlanAddonDetail
		return ret
	}
	return o.Addons
}

// GetAddonsOk returns a tuple with the Addons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetAddonsOk() ([]UnibeeApiBeanPlanAddonDetail, bool) {
	if o == nil || IsNil(o.Addons) {
		return nil, false
	}
	return o.Addons, true
}

// HasAddons returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) HasAddons() bool {
	if o != nil && !IsNil(o.Addons) {
		return true
	}

	return false
}

// SetAddons gets a reference to the given []UnibeeApiBeanPlanAddonDetail and assigns it to the Addons field.
func (o *UnibeeApiBeanInvoicePlanSnapshot) SetAddons(v []UnibeeApiBeanPlanAddonDetail) {
	o.Addons = v
}

// GetAutoCharge returns the AutoCharge field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetAutoCharge() bool {
	if o == nil || IsNil(o.AutoCharge) {
		var ret bool
		return ret
	}
	return *o.AutoCharge
}

// GetAutoChargeOk returns a tuple with the AutoCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetAutoChargeOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoCharge) {
		return nil, false
	}
	return o.AutoCharge, true
}

// HasAutoCharge returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) HasAutoCharge() bool {
	if o != nil && !IsNil(o.AutoCharge) {
		return true
	}

	return false
}

// SetAutoCharge gets a reference to the given bool and assigns it to the AutoCharge field.
func (o *UnibeeApiBeanInvoicePlanSnapshot) SetAutoCharge(v bool) {
	o.AutoCharge = &v
}

// GetChargeType returns the ChargeType field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetChargeType() int32 {
	if o == nil || IsNil(o.ChargeType) {
		var ret int32
		return ret
	}
	return *o.ChargeType
}

// GetChargeTypeOk returns a tuple with the ChargeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetChargeTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.ChargeType) {
		return nil, false
	}
	return o.ChargeType, true
}

// HasChargeType returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) HasChargeType() bool {
	if o != nil && !IsNil(o.ChargeType) {
		return true
	}

	return false
}

// SetChargeType gets a reference to the given int32 and assigns it to the ChargeType field.
func (o *UnibeeApiBeanInvoicePlanSnapshot) SetChargeType(v int32) {
	o.ChargeType = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetPlan() UnibeeApiBeanPlan {
	if o == nil || IsNil(o.Plan) {
		var ret UnibeeApiBeanPlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetPlanOk() (*UnibeeApiBeanPlan, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given UnibeeApiBeanPlan and assigns it to the Plan field.
func (o *UnibeeApiBeanInvoicePlanSnapshot) SetPlan(v UnibeeApiBeanPlan) {
	o.Plan = &v
}

// GetPreviousAddons returns the PreviousAddons field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetPreviousAddons() []UnibeeApiBeanPlanAddonDetail {
	if o == nil || IsNil(o.PreviousAddons) {
		var ret []UnibeeApiBeanPlanAddonDetail
		return ret
	}
	return o.PreviousAddons
}

// GetPreviousAddonsOk returns a tuple with the PreviousAddons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetPreviousAddonsOk() ([]UnibeeApiBeanPlanAddonDetail, bool) {
	if o == nil || IsNil(o.PreviousAddons) {
		return nil, false
	}
	return o.PreviousAddons, true
}

// HasPreviousAddons returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) HasPreviousAddons() bool {
	if o != nil && !IsNil(o.PreviousAddons) {
		return true
	}

	return false
}

// SetPreviousAddons gets a reference to the given []UnibeeApiBeanPlanAddonDetail and assigns it to the PreviousAddons field.
func (o *UnibeeApiBeanInvoicePlanSnapshot) SetPreviousAddons(v []UnibeeApiBeanPlanAddonDetail) {
	o.PreviousAddons = v
}

// GetPreviousPlan returns the PreviousPlan field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetPreviousPlan() UnibeeApiBeanPlan {
	if o == nil || IsNil(o.PreviousPlan) {
		var ret UnibeeApiBeanPlan
		return ret
	}
	return *o.PreviousPlan
}

// GetPreviousPlanOk returns a tuple with the PreviousPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) GetPreviousPlanOk() (*UnibeeApiBeanPlan, bool) {
	if o == nil || IsNil(o.PreviousPlan) {
		return nil, false
	}
	return o.PreviousPlan, true
}

// HasPreviousPlan returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoicePlanSnapshot) HasPreviousPlan() bool {
	if o != nil && !IsNil(o.PreviousPlan) {
		return true
	}

	return false
}

// SetPreviousPlan gets a reference to the given UnibeeApiBeanPlan and assigns it to the PreviousPlan field.
func (o *UnibeeApiBeanInvoicePlanSnapshot) SetPreviousPlan(v UnibeeApiBeanPlan) {
	o.PreviousPlan = &v
}

func (o UnibeeApiBeanInvoicePlanSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanInvoicePlanSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Addons) {
		toSerialize["addons"] = o.Addons
	}
	if !IsNil(o.AutoCharge) {
		toSerialize["autoCharge"] = o.AutoCharge
	}
	if !IsNil(o.ChargeType) {
		toSerialize["chargeType"] = o.ChargeType
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.PreviousAddons) {
		toSerialize["previousAddons"] = o.PreviousAddons
	}
	if !IsNil(o.PreviousPlan) {
		toSerialize["previousPlan"] = o.PreviousPlan
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanInvoicePlanSnapshot struct {
	value *UnibeeApiBeanInvoicePlanSnapshot
	isSet bool
}

func (v NullableUnibeeApiBeanInvoicePlanSnapshot) Get() *UnibeeApiBeanInvoicePlanSnapshot {
	return v.value
}

func (v *NullableUnibeeApiBeanInvoicePlanSnapshot) Set(val *UnibeeApiBeanInvoicePlanSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanInvoicePlanSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanInvoicePlanSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanInvoicePlanSnapshot(val *UnibeeApiBeanInvoicePlanSnapshot) *NullableUnibeeApiBeanInvoicePlanSnapshot {
	return &NullableUnibeeApiBeanInvoicePlanSnapshot{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanInvoicePlanSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanInvoicePlanSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


