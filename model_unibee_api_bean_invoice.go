/*
OpenAPI UniBee

This is UniBee Api Server

API version: buildtime:202408060911 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanInvoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanInvoice{}

// UnibeeApiBeanInvoice struct for UnibeeApiBeanInvoice
type UnibeeApiBeanInvoice struct {
	// billing_cycle_anchor
	BillingCycleAnchor *int64 `json:"billingCycleAnchor,omitempty"`
	// biz type from payment 1-onetime payment, 3-subscription
	BizType *int32 `json:"bizType,omitempty"`
	CountryCode *string `json:"countryCode,omitempty"`
	// create from
	CreateFrom *string `json:"createFrom,omitempty"`
	// crypto_amount, cent
	CryptoAmount *int64 `json:"cryptoAmount,omitempty"`
	// crypto_currency
	CryptoCurrency *string `json:"cryptoCurrency,omitempty"`
	Currency *string `json:"currency,omitempty"`
	Data *string `json:"data,omitempty"`
	// day util due after finish
	DayUtilDue *int64 `json:"dayUtilDue,omitempty"`
	Discount *UnibeeApiBeanMerchantDiscountCode `json:"discount,omitempty"`
	DiscountAmount *int64 `json:"discountAmount,omitempty"`
	DiscountCode *string `json:"discountCode,omitempty"`
	FinishTime *int64 `json:"finishTime,omitempty"`
	Id *int64 `json:"id,omitempty"`
	InvoiceId *string `json:"invoiceId,omitempty"`
	InvoiceName *string `json:"invoiceName,omitempty"`
	Lines []UnibeeApiBeanInvoiceItemSimplify `json:"lines,omitempty"`
	// invoice link
	Link *string `json:"link,omitempty"`
	// Metadata，Map
	Metadata *map[string]string `json:"metadata,omitempty"`
	OriginAmount *int64 `json:"originAmount,omitempty"`
	// paymentId
	PaymentId *string `json:"paymentId,omitempty"`
	// invoice payment link
	PaymentLink *string `json:"paymentLink,omitempty"`
	PeriodEnd *int64 `json:"periodEnd,omitempty"`
	PeriodStart *int64 `json:"periodStart,omitempty"`
	ProductName *string `json:"productName,omitempty"`
	ProrationDate *int64 `json:"prorationDate,omitempty"`
	ProrationScale *int64 `json:"prorationScale,omitempty"`
	// refundId
	RefundId *string `json:"refundId,omitempty"`
	// send_note
	SendNote *string `json:"sendNote,omitempty"`
	// email send status，0-No | 1- YES| 2-Unnecessary
	SendStatus *int32 `json:"sendStatus,omitempty"`
	// status，1-pending｜2-processing｜3-paid | 4-failed | 5-cancelled
	Status *int32 `json:"status,omitempty"`
	SubscriptionAmount *int64 `json:"subscriptionAmount,omitempty"`
	SubscriptionAmountExcludingTax *int64 `json:"subscriptionAmountExcludingTax,omitempty"`
	// subscription_id
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	TaxAmount *int64 `json:"taxAmount,omitempty"`
	// TaxPercentage，1000 = 10%
	TaxPercentage *int64 `json:"taxPercentage,omitempty"`
	TotalAmount *int64 `json:"totalAmount,omitempty"`
	TotalAmountExcludingTax *int64 `json:"totalAmountExcludingTax,omitempty"`
	// trial_end, utc time
	TrialEnd *int64 `json:"trialEnd,omitempty"`
	VatNumber *string `json:"vatNumber,omitempty"`
}

// NewUnibeeApiBeanInvoice instantiates a new UnibeeApiBeanInvoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanInvoice() *UnibeeApiBeanInvoice {
	this := UnibeeApiBeanInvoice{}
	return &this
}

// NewUnibeeApiBeanInvoiceWithDefaults instantiates a new UnibeeApiBeanInvoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanInvoiceWithDefaults() *UnibeeApiBeanInvoice {
	this := UnibeeApiBeanInvoice{}
	return &this
}

// GetBillingCycleAnchor returns the BillingCycleAnchor field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetBillingCycleAnchor() int64 {
	if o == nil || IsNil(o.BillingCycleAnchor) {
		var ret int64
		return ret
	}
	return *o.BillingCycleAnchor
}

// GetBillingCycleAnchorOk returns a tuple with the BillingCycleAnchor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetBillingCycleAnchorOk() (*int64, bool) {
	if o == nil || IsNil(o.BillingCycleAnchor) {
		return nil, false
	}
	return o.BillingCycleAnchor, true
}

// HasBillingCycleAnchor returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasBillingCycleAnchor() bool {
	if o != nil && !IsNil(o.BillingCycleAnchor) {
		return true
	}

	return false
}

// SetBillingCycleAnchor gets a reference to the given int64 and assigns it to the BillingCycleAnchor field.
func (o *UnibeeApiBeanInvoice) SetBillingCycleAnchor(v int64) {
	o.BillingCycleAnchor = &v
}

// GetBizType returns the BizType field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetBizType() int32 {
	if o == nil || IsNil(o.BizType) {
		var ret int32
		return ret
	}
	return *o.BizType
}

// GetBizTypeOk returns a tuple with the BizType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetBizTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.BizType) {
		return nil, false
	}
	return o.BizType, true
}

// HasBizType returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasBizType() bool {
	if o != nil && !IsNil(o.BizType) {
		return true
	}

	return false
}

// SetBizType gets a reference to the given int32 and assigns it to the BizType field.
func (o *UnibeeApiBeanInvoice) SetBizType(v int32) {
	o.BizType = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *UnibeeApiBeanInvoice) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCreateFrom returns the CreateFrom field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetCreateFrom() string {
	if o == nil || IsNil(o.CreateFrom) {
		var ret string
		return ret
	}
	return *o.CreateFrom
}

// GetCreateFromOk returns a tuple with the CreateFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetCreateFromOk() (*string, bool) {
	if o == nil || IsNil(o.CreateFrom) {
		return nil, false
	}
	return o.CreateFrom, true
}

// HasCreateFrom returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasCreateFrom() bool {
	if o != nil && !IsNil(o.CreateFrom) {
		return true
	}

	return false
}

// SetCreateFrom gets a reference to the given string and assigns it to the CreateFrom field.
func (o *UnibeeApiBeanInvoice) SetCreateFrom(v string) {
	o.CreateFrom = &v
}

// GetCryptoAmount returns the CryptoAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetCryptoAmount() int64 {
	if o == nil || IsNil(o.CryptoAmount) {
		var ret int64
		return ret
	}
	return *o.CryptoAmount
}

// GetCryptoAmountOk returns a tuple with the CryptoAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetCryptoAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.CryptoAmount) {
		return nil, false
	}
	return o.CryptoAmount, true
}

// HasCryptoAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasCryptoAmount() bool {
	if o != nil && !IsNil(o.CryptoAmount) {
		return true
	}

	return false
}

// SetCryptoAmount gets a reference to the given int64 and assigns it to the CryptoAmount field.
func (o *UnibeeApiBeanInvoice) SetCryptoAmount(v int64) {
	o.CryptoAmount = &v
}

// GetCryptoCurrency returns the CryptoCurrency field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetCryptoCurrency() string {
	if o == nil || IsNil(o.CryptoCurrency) {
		var ret string
		return ret
	}
	return *o.CryptoCurrency
}

// GetCryptoCurrencyOk returns a tuple with the CryptoCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetCryptoCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.CryptoCurrency) {
		return nil, false
	}
	return o.CryptoCurrency, true
}

// HasCryptoCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasCryptoCurrency() bool {
	if o != nil && !IsNil(o.CryptoCurrency) {
		return true
	}

	return false
}

// SetCryptoCurrency gets a reference to the given string and assigns it to the CryptoCurrency field.
func (o *UnibeeApiBeanInvoice) SetCryptoCurrency(v string) {
	o.CryptoCurrency = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *UnibeeApiBeanInvoice) SetCurrency(v string) {
	o.Currency = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *UnibeeApiBeanInvoice) SetData(v string) {
	o.Data = &v
}

// GetDayUtilDue returns the DayUtilDue field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetDayUtilDue() int64 {
	if o == nil || IsNil(o.DayUtilDue) {
		var ret int64
		return ret
	}
	return *o.DayUtilDue
}

// GetDayUtilDueOk returns a tuple with the DayUtilDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetDayUtilDueOk() (*int64, bool) {
	if o == nil || IsNil(o.DayUtilDue) {
		return nil, false
	}
	return o.DayUtilDue, true
}

// HasDayUtilDue returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasDayUtilDue() bool {
	if o != nil && !IsNil(o.DayUtilDue) {
		return true
	}

	return false
}

// SetDayUtilDue gets a reference to the given int64 and assigns it to the DayUtilDue field.
func (o *UnibeeApiBeanInvoice) SetDayUtilDue(v int64) {
	o.DayUtilDue = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetDiscount() UnibeeApiBeanMerchantDiscountCode {
	if o == nil || IsNil(o.Discount) {
		var ret UnibeeApiBeanMerchantDiscountCode
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetDiscountOk() (*UnibeeApiBeanMerchantDiscountCode, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given UnibeeApiBeanMerchantDiscountCode and assigns it to the Discount field.
func (o *UnibeeApiBeanInvoice) SetDiscount(v UnibeeApiBeanMerchantDiscountCode) {
	o.Discount = &v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetDiscountAmount() int64 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret int64
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetDiscountAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given int64 and assigns it to the DiscountAmount field.
func (o *UnibeeApiBeanInvoice) SetDiscountAmount(v int64) {
	o.DiscountAmount = &v
}

// GetDiscountCode returns the DiscountCode field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetDiscountCode() string {
	if o == nil || IsNil(o.DiscountCode) {
		var ret string
		return ret
	}
	return *o.DiscountCode
}

// GetDiscountCodeOk returns a tuple with the DiscountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetDiscountCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountCode) {
		return nil, false
	}
	return o.DiscountCode, true
}

// HasDiscountCode returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasDiscountCode() bool {
	if o != nil && !IsNil(o.DiscountCode) {
		return true
	}

	return false
}

// SetDiscountCode gets a reference to the given string and assigns it to the DiscountCode field.
func (o *UnibeeApiBeanInvoice) SetDiscountCode(v string) {
	o.DiscountCode = &v
}

// GetFinishTime returns the FinishTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetFinishTime() int64 {
	if o == nil || IsNil(o.FinishTime) {
		var ret int64
		return ret
	}
	return *o.FinishTime
}

// GetFinishTimeOk returns a tuple with the FinishTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetFinishTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.FinishTime) {
		return nil, false
	}
	return o.FinishTime, true
}

// HasFinishTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasFinishTime() bool {
	if o != nil && !IsNil(o.FinishTime) {
		return true
	}

	return false
}

// SetFinishTime gets a reference to the given int64 and assigns it to the FinishTime field.
func (o *UnibeeApiBeanInvoice) SetFinishTime(v int64) {
	o.FinishTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UnibeeApiBeanInvoice) SetId(v int64) {
	o.Id = &v
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId) {
		var ret string
		return ret
	}
	return *o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceId) {
		return nil, false
	}
	return o.InvoiceId, true
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasInvoiceId() bool {
	if o != nil && !IsNil(o.InvoiceId) {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given string and assigns it to the InvoiceId field.
func (o *UnibeeApiBeanInvoice) SetInvoiceId(v string) {
	o.InvoiceId = &v
}

// GetInvoiceName returns the InvoiceName field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetInvoiceName() string {
	if o == nil || IsNil(o.InvoiceName) {
		var ret string
		return ret
	}
	return *o.InvoiceName
}

// GetInvoiceNameOk returns a tuple with the InvoiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetInvoiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceName) {
		return nil, false
	}
	return o.InvoiceName, true
}

// HasInvoiceName returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasInvoiceName() bool {
	if o != nil && !IsNil(o.InvoiceName) {
		return true
	}

	return false
}

// SetInvoiceName gets a reference to the given string and assigns it to the InvoiceName field.
func (o *UnibeeApiBeanInvoice) SetInvoiceName(v string) {
	o.InvoiceName = &v
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetLines() []UnibeeApiBeanInvoiceItemSimplify {
	if o == nil || IsNil(o.Lines) {
		var ret []UnibeeApiBeanInvoiceItemSimplify
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetLinesOk() ([]UnibeeApiBeanInvoiceItemSimplify, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []UnibeeApiBeanInvoiceItemSimplify and assigns it to the Lines field.
func (o *UnibeeApiBeanInvoice) SetLines(v []UnibeeApiBeanInvoiceItemSimplify) {
	o.Lines = v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *UnibeeApiBeanInvoice) SetLink(v string) {
	o.Link = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *UnibeeApiBeanInvoice) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetOriginAmount returns the OriginAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetOriginAmount() int64 {
	if o == nil || IsNil(o.OriginAmount) {
		var ret int64
		return ret
	}
	return *o.OriginAmount
}

// GetOriginAmountOk returns a tuple with the OriginAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetOriginAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.OriginAmount) {
		return nil, false
	}
	return o.OriginAmount, true
}

// HasOriginAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasOriginAmount() bool {
	if o != nil && !IsNil(o.OriginAmount) {
		return true
	}

	return false
}

// SetOriginAmount gets a reference to the given int64 and assigns it to the OriginAmount field.
func (o *UnibeeApiBeanInvoice) SetOriginAmount(v int64) {
	o.OriginAmount = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *UnibeeApiBeanInvoice) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetPaymentLink returns the PaymentLink field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetPaymentLink() string {
	if o == nil || IsNil(o.PaymentLink) {
		var ret string
		return ret
	}
	return *o.PaymentLink
}

// GetPaymentLinkOk returns a tuple with the PaymentLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetPaymentLinkOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentLink) {
		return nil, false
	}
	return o.PaymentLink, true
}

// HasPaymentLink returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasPaymentLink() bool {
	if o != nil && !IsNil(o.PaymentLink) {
		return true
	}

	return false
}

// SetPaymentLink gets a reference to the given string and assigns it to the PaymentLink field.
func (o *UnibeeApiBeanInvoice) SetPaymentLink(v string) {
	o.PaymentLink = &v
}

// GetPeriodEnd returns the PeriodEnd field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetPeriodEnd() int64 {
	if o == nil || IsNil(o.PeriodEnd) {
		var ret int64
		return ret
	}
	return *o.PeriodEnd
}

// GetPeriodEndOk returns a tuple with the PeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetPeriodEndOk() (*int64, bool) {
	if o == nil || IsNil(o.PeriodEnd) {
		return nil, false
	}
	return o.PeriodEnd, true
}

// HasPeriodEnd returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasPeriodEnd() bool {
	if o != nil && !IsNil(o.PeriodEnd) {
		return true
	}

	return false
}

// SetPeriodEnd gets a reference to the given int64 and assigns it to the PeriodEnd field.
func (o *UnibeeApiBeanInvoice) SetPeriodEnd(v int64) {
	o.PeriodEnd = &v
}

// GetPeriodStart returns the PeriodStart field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetPeriodStart() int64 {
	if o == nil || IsNil(o.PeriodStart) {
		var ret int64
		return ret
	}
	return *o.PeriodStart
}

// GetPeriodStartOk returns a tuple with the PeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetPeriodStartOk() (*int64, bool) {
	if o == nil || IsNil(o.PeriodStart) {
		return nil, false
	}
	return o.PeriodStart, true
}

// HasPeriodStart returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasPeriodStart() bool {
	if o != nil && !IsNil(o.PeriodStart) {
		return true
	}

	return false
}

// SetPeriodStart gets a reference to the given int64 and assigns it to the PeriodStart field.
func (o *UnibeeApiBeanInvoice) SetPeriodStart(v int64) {
	o.PeriodStart = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetProductName() string {
	if o == nil || IsNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *UnibeeApiBeanInvoice) SetProductName(v string) {
	o.ProductName = &v
}

// GetProrationDate returns the ProrationDate field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetProrationDate() int64 {
	if o == nil || IsNil(o.ProrationDate) {
		var ret int64
		return ret
	}
	return *o.ProrationDate
}

// GetProrationDateOk returns a tuple with the ProrationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetProrationDateOk() (*int64, bool) {
	if o == nil || IsNil(o.ProrationDate) {
		return nil, false
	}
	return o.ProrationDate, true
}

// HasProrationDate returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasProrationDate() bool {
	if o != nil && !IsNil(o.ProrationDate) {
		return true
	}

	return false
}

// SetProrationDate gets a reference to the given int64 and assigns it to the ProrationDate field.
func (o *UnibeeApiBeanInvoice) SetProrationDate(v int64) {
	o.ProrationDate = &v
}

// GetProrationScale returns the ProrationScale field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetProrationScale() int64 {
	if o == nil || IsNil(o.ProrationScale) {
		var ret int64
		return ret
	}
	return *o.ProrationScale
}

// GetProrationScaleOk returns a tuple with the ProrationScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetProrationScaleOk() (*int64, bool) {
	if o == nil || IsNil(o.ProrationScale) {
		return nil, false
	}
	return o.ProrationScale, true
}

// HasProrationScale returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasProrationScale() bool {
	if o != nil && !IsNil(o.ProrationScale) {
		return true
	}

	return false
}

// SetProrationScale gets a reference to the given int64 and assigns it to the ProrationScale field.
func (o *UnibeeApiBeanInvoice) SetProrationScale(v int64) {
	o.ProrationScale = &v
}

// GetRefundId returns the RefundId field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetRefundId() string {
	if o == nil || IsNil(o.RefundId) {
		var ret string
		return ret
	}
	return *o.RefundId
}

// GetRefundIdOk returns a tuple with the RefundId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetRefundIdOk() (*string, bool) {
	if o == nil || IsNil(o.RefundId) {
		return nil, false
	}
	return o.RefundId, true
}

// HasRefundId returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasRefundId() bool {
	if o != nil && !IsNil(o.RefundId) {
		return true
	}

	return false
}

// SetRefundId gets a reference to the given string and assigns it to the RefundId field.
func (o *UnibeeApiBeanInvoice) SetRefundId(v string) {
	o.RefundId = &v
}

// GetSendNote returns the SendNote field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetSendNote() string {
	if o == nil || IsNil(o.SendNote) {
		var ret string
		return ret
	}
	return *o.SendNote
}

// GetSendNoteOk returns a tuple with the SendNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetSendNoteOk() (*string, bool) {
	if o == nil || IsNil(o.SendNote) {
		return nil, false
	}
	return o.SendNote, true
}

// HasSendNote returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasSendNote() bool {
	if o != nil && !IsNil(o.SendNote) {
		return true
	}

	return false
}

// SetSendNote gets a reference to the given string and assigns it to the SendNote field.
func (o *UnibeeApiBeanInvoice) SetSendNote(v string) {
	o.SendNote = &v
}

// GetSendStatus returns the SendStatus field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetSendStatus() int32 {
	if o == nil || IsNil(o.SendStatus) {
		var ret int32
		return ret
	}
	return *o.SendStatus
}

// GetSendStatusOk returns a tuple with the SendStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetSendStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.SendStatus) {
		return nil, false
	}
	return o.SendStatus, true
}

// HasSendStatus returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasSendStatus() bool {
	if o != nil && !IsNil(o.SendStatus) {
		return true
	}

	return false
}

// SetSendStatus gets a reference to the given int32 and assigns it to the SendStatus field.
func (o *UnibeeApiBeanInvoice) SetSendStatus(v int32) {
	o.SendStatus = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *UnibeeApiBeanInvoice) SetStatus(v int32) {
	o.Status = &v
}

// GetSubscriptionAmount returns the SubscriptionAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetSubscriptionAmount() int64 {
	if o == nil || IsNil(o.SubscriptionAmount) {
		var ret int64
		return ret
	}
	return *o.SubscriptionAmount
}

// GetSubscriptionAmountOk returns a tuple with the SubscriptionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetSubscriptionAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.SubscriptionAmount) {
		return nil, false
	}
	return o.SubscriptionAmount, true
}

// HasSubscriptionAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasSubscriptionAmount() bool {
	if o != nil && !IsNil(o.SubscriptionAmount) {
		return true
	}

	return false
}

// SetSubscriptionAmount gets a reference to the given int64 and assigns it to the SubscriptionAmount field.
func (o *UnibeeApiBeanInvoice) SetSubscriptionAmount(v int64) {
	o.SubscriptionAmount = &v
}

// GetSubscriptionAmountExcludingTax returns the SubscriptionAmountExcludingTax field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetSubscriptionAmountExcludingTax() int64 {
	if o == nil || IsNil(o.SubscriptionAmountExcludingTax) {
		var ret int64
		return ret
	}
	return *o.SubscriptionAmountExcludingTax
}

// GetSubscriptionAmountExcludingTaxOk returns a tuple with the SubscriptionAmountExcludingTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetSubscriptionAmountExcludingTaxOk() (*int64, bool) {
	if o == nil || IsNil(o.SubscriptionAmountExcludingTax) {
		return nil, false
	}
	return o.SubscriptionAmountExcludingTax, true
}

// HasSubscriptionAmountExcludingTax returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasSubscriptionAmountExcludingTax() bool {
	if o != nil && !IsNil(o.SubscriptionAmountExcludingTax) {
		return true
	}

	return false
}

// SetSubscriptionAmountExcludingTax gets a reference to the given int64 and assigns it to the SubscriptionAmountExcludingTax field.
func (o *UnibeeApiBeanInvoice) SetSubscriptionAmountExcludingTax(v int64) {
	o.SubscriptionAmountExcludingTax = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *UnibeeApiBeanInvoice) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetTaxAmount() int64 {
	if o == nil || IsNil(o.TaxAmount) {
		var ret int64
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetTaxAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TaxAmount) {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasTaxAmount() bool {
	if o != nil && !IsNil(o.TaxAmount) {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given int64 and assigns it to the TaxAmount field.
func (o *UnibeeApiBeanInvoice) SetTaxAmount(v int64) {
	o.TaxAmount = &v
}

// GetTaxPercentage returns the TaxPercentage field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetTaxPercentage() int64 {
	if o == nil || IsNil(o.TaxPercentage) {
		var ret int64
		return ret
	}
	return *o.TaxPercentage
}

// GetTaxPercentageOk returns a tuple with the TaxPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetTaxPercentageOk() (*int64, bool) {
	if o == nil || IsNil(o.TaxPercentage) {
		return nil, false
	}
	return o.TaxPercentage, true
}

// HasTaxPercentage returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasTaxPercentage() bool {
	if o != nil && !IsNil(o.TaxPercentage) {
		return true
	}

	return false
}

// SetTaxPercentage gets a reference to the given int64 and assigns it to the TaxPercentage field.
func (o *UnibeeApiBeanInvoice) SetTaxPercentage(v int64) {
	o.TaxPercentage = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetTotalAmount() int64 {
	if o == nil || IsNil(o.TotalAmount) {
		var ret int64
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetTotalAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given int64 and assigns it to the TotalAmount field.
func (o *UnibeeApiBeanInvoice) SetTotalAmount(v int64) {
	o.TotalAmount = &v
}

// GetTotalAmountExcludingTax returns the TotalAmountExcludingTax field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetTotalAmountExcludingTax() int64 {
	if o == nil || IsNil(o.TotalAmountExcludingTax) {
		var ret int64
		return ret
	}
	return *o.TotalAmountExcludingTax
}

// GetTotalAmountExcludingTaxOk returns a tuple with the TotalAmountExcludingTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetTotalAmountExcludingTaxOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalAmountExcludingTax) {
		return nil, false
	}
	return o.TotalAmountExcludingTax, true
}

// HasTotalAmountExcludingTax returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasTotalAmountExcludingTax() bool {
	if o != nil && !IsNil(o.TotalAmountExcludingTax) {
		return true
	}

	return false
}

// SetTotalAmountExcludingTax gets a reference to the given int64 and assigns it to the TotalAmountExcludingTax field.
func (o *UnibeeApiBeanInvoice) SetTotalAmountExcludingTax(v int64) {
	o.TotalAmountExcludingTax = &v
}

// GetTrialEnd returns the TrialEnd field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetTrialEnd() int64 {
	if o == nil || IsNil(o.TrialEnd) {
		var ret int64
		return ret
	}
	return *o.TrialEnd
}

// GetTrialEndOk returns a tuple with the TrialEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetTrialEndOk() (*int64, bool) {
	if o == nil || IsNil(o.TrialEnd) {
		return nil, false
	}
	return o.TrialEnd, true
}

// HasTrialEnd returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasTrialEnd() bool {
	if o != nil && !IsNil(o.TrialEnd) {
		return true
	}

	return false
}

// SetTrialEnd gets a reference to the given int64 and assigns it to the TrialEnd field.
func (o *UnibeeApiBeanInvoice) SetTrialEnd(v int64) {
	o.TrialEnd = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoice) GetVatNumber() string {
	if o == nil || IsNil(o.VatNumber) {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoice) GetVatNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VatNumber) {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoice) HasVatNumber() bool {
	if o != nil && !IsNil(o.VatNumber) {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *UnibeeApiBeanInvoice) SetVatNumber(v string) {
	o.VatNumber = &v
}

func (o UnibeeApiBeanInvoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanInvoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingCycleAnchor) {
		toSerialize["billingCycleAnchor"] = o.BillingCycleAnchor
	}
	if !IsNil(o.BizType) {
		toSerialize["bizType"] = o.BizType
	}
	if !IsNil(o.CountryCode) {
		toSerialize["countryCode"] = o.CountryCode
	}
	if !IsNil(o.CreateFrom) {
		toSerialize["createFrom"] = o.CreateFrom
	}
	if !IsNil(o.CryptoAmount) {
		toSerialize["cryptoAmount"] = o.CryptoAmount
	}
	if !IsNil(o.CryptoCurrency) {
		toSerialize["cryptoCurrency"] = o.CryptoCurrency
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.DayUtilDue) {
		toSerialize["dayUtilDue"] = o.DayUtilDue
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discountAmount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountCode) {
		toSerialize["discountCode"] = o.DiscountCode
	}
	if !IsNil(o.FinishTime) {
		toSerialize["finishTime"] = o.FinishTime
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InvoiceId) {
		toSerialize["invoiceId"] = o.InvoiceId
	}
	if !IsNil(o.InvoiceName) {
		toSerialize["invoiceName"] = o.InvoiceName
	}
	if !IsNil(o.Lines) {
		toSerialize["lines"] = o.Lines
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.OriginAmount) {
		toSerialize["originAmount"] = o.OriginAmount
	}
	if !IsNil(o.PaymentId) {
		toSerialize["paymentId"] = o.PaymentId
	}
	if !IsNil(o.PaymentLink) {
		toSerialize["paymentLink"] = o.PaymentLink
	}
	if !IsNil(o.PeriodEnd) {
		toSerialize["periodEnd"] = o.PeriodEnd
	}
	if !IsNil(o.PeriodStart) {
		toSerialize["periodStart"] = o.PeriodStart
	}
	if !IsNil(o.ProductName) {
		toSerialize["productName"] = o.ProductName
	}
	if !IsNil(o.ProrationDate) {
		toSerialize["prorationDate"] = o.ProrationDate
	}
	if !IsNil(o.ProrationScale) {
		toSerialize["prorationScale"] = o.ProrationScale
	}
	if !IsNil(o.RefundId) {
		toSerialize["refundId"] = o.RefundId
	}
	if !IsNil(o.SendNote) {
		toSerialize["sendNote"] = o.SendNote
	}
	if !IsNil(o.SendStatus) {
		toSerialize["sendStatus"] = o.SendStatus
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubscriptionAmount) {
		toSerialize["subscriptionAmount"] = o.SubscriptionAmount
	}
	if !IsNil(o.SubscriptionAmountExcludingTax) {
		toSerialize["subscriptionAmountExcludingTax"] = o.SubscriptionAmountExcludingTax
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.TaxAmount) {
		toSerialize["taxAmount"] = o.TaxAmount
	}
	if !IsNil(o.TaxPercentage) {
		toSerialize["taxPercentage"] = o.TaxPercentage
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if !IsNil(o.TotalAmountExcludingTax) {
		toSerialize["totalAmountExcludingTax"] = o.TotalAmountExcludingTax
	}
	if !IsNil(o.TrialEnd) {
		toSerialize["trialEnd"] = o.TrialEnd
	}
	if !IsNil(o.VatNumber) {
		toSerialize["vatNumber"] = o.VatNumber
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanInvoice struct {
	value *UnibeeApiBeanInvoice
	isSet bool
}

func (v NullableUnibeeApiBeanInvoice) Get() *UnibeeApiBeanInvoice {
	return v.value
}

func (v *NullableUnibeeApiBeanInvoice) Set(val *UnibeeApiBeanInvoice) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanInvoice(val *UnibeeApiBeanInvoice) *NullableUnibeeApiBeanInvoice {
	return &NullableUnibeeApiBeanInvoice{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


