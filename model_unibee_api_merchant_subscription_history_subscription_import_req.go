/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508150435
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq{}

// UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq Each repetition import overrides existing subscriptions with matching ExternalSubscriptionId.
type UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq struct {
	// Required. Specifies the ISO 3166-1 alpha-2 country code for the subscription (e.g., EE, RU). This code determines the applicable tax rules for the subscription.
	CountryCode *string `json:"countryCode,omitempty"`
	// Required, UTC time, the current period end time of subscription, format '2006-01-02 15:04:05'
	CurrentPeriodEnd *string `json:"currentPeriodEnd,omitempty"`
	// Required, UTC time, the current period start time of subscription, format '2006-01-02 15:04:05'
	CurrentPeriodStart *string `json:"currentPeriodStart,omitempty"`
	// The email of user, one of Email or ExternalUserId is required
	Email *string `json:"email,omitempty"`
	// The external id of plan, one of planId or ExternalPlanId is required, plan should created at UniBee at first
	ExternalPlanId *string `json:"externalPlanId,omitempty"`
	// Required, The external id of subscription
	ExternalSubscriptionId *string `json:"externalSubscriptionId,omitempty"`
	// The external id of user, one of Email or ExternalUserId is required 
	ExternalUserId *string `json:"externalUserId,omitempty"`
	// Required, should one of stripe|paypal|wire_transfer|changelly 
	Gateway *string `json:"gateway,omitempty"`
	// The id of plan, one of planId or ExternalPlanId is required, plan should created at UniBee at first 
	PlanId *int64 `json:"planId,omitempty"`
	// the quantity of plan, default 1 if not provided 
	Quantity *int64 `json:"quantity,omitempty"`
	// The TaxPercentage of subscription, Only applicable when the system VAT gateway not setup, 1000 = 10%
	TaxPercentage *int64 `json:"taxPercentage,omitempty"`
	// Required. Unit: cents.
	TotalAmount *int64 `json:"totalAmount,omitempty"`
}

// NewUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq instantiates a new UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq() *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq {
	this := UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq{}
	return &this
}

// NewUnibeeApiMerchantSubscriptionHistorySubscriptionImportReqWithDefaults instantiates a new UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantSubscriptionHistorySubscriptionImportReqWithDefaults() *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq {
	this := UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq{}
	return &this
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCurrentPeriodEnd returns the CurrentPeriodEnd field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetCurrentPeriodEnd() string {
	if o == nil || IsNil(o.CurrentPeriodEnd) {
		var ret string
		return ret
	}
	return *o.CurrentPeriodEnd
}

// GetCurrentPeriodEndOk returns a tuple with the CurrentPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetCurrentPeriodEndOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentPeriodEnd) {
		return nil, false
	}
	return o.CurrentPeriodEnd, true
}

// HasCurrentPeriodEnd returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasCurrentPeriodEnd() bool {
	if o != nil && !IsNil(o.CurrentPeriodEnd) {
		return true
	}

	return false
}

// SetCurrentPeriodEnd gets a reference to the given string and assigns it to the CurrentPeriodEnd field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetCurrentPeriodEnd(v string) {
	o.CurrentPeriodEnd = &v
}

// GetCurrentPeriodStart returns the CurrentPeriodStart field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetCurrentPeriodStart() string {
	if o == nil || IsNil(o.CurrentPeriodStart) {
		var ret string
		return ret
	}
	return *o.CurrentPeriodStart
}

// GetCurrentPeriodStartOk returns a tuple with the CurrentPeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetCurrentPeriodStartOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentPeriodStart) {
		return nil, false
	}
	return o.CurrentPeriodStart, true
}

// HasCurrentPeriodStart returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasCurrentPeriodStart() bool {
	if o != nil && !IsNil(o.CurrentPeriodStart) {
		return true
	}

	return false
}

// SetCurrentPeriodStart gets a reference to the given string and assigns it to the CurrentPeriodStart field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetCurrentPeriodStart(v string) {
	o.CurrentPeriodStart = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetEmail(v string) {
	o.Email = &v
}

// GetExternalPlanId returns the ExternalPlanId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetExternalPlanId() string {
	if o == nil || IsNil(o.ExternalPlanId) {
		var ret string
		return ret
	}
	return *o.ExternalPlanId
}

// GetExternalPlanIdOk returns a tuple with the ExternalPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetExternalPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalPlanId) {
		return nil, false
	}
	return o.ExternalPlanId, true
}

// HasExternalPlanId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasExternalPlanId() bool {
	if o != nil && !IsNil(o.ExternalPlanId) {
		return true
	}

	return false
}

// SetExternalPlanId gets a reference to the given string and assigns it to the ExternalPlanId field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetExternalPlanId(v string) {
	o.ExternalPlanId = &v
}

// GetExternalSubscriptionId returns the ExternalSubscriptionId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetExternalSubscriptionId() string {
	if o == nil || IsNil(o.ExternalSubscriptionId) {
		var ret string
		return ret
	}
	return *o.ExternalSubscriptionId
}

// GetExternalSubscriptionIdOk returns a tuple with the ExternalSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetExternalSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalSubscriptionId) {
		return nil, false
	}
	return o.ExternalSubscriptionId, true
}

// HasExternalSubscriptionId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasExternalSubscriptionId() bool {
	if o != nil && !IsNil(o.ExternalSubscriptionId) {
		return true
	}

	return false
}

// SetExternalSubscriptionId gets a reference to the given string and assigns it to the ExternalSubscriptionId field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetExternalSubscriptionId(v string) {
	o.ExternalSubscriptionId = &v
}

// GetExternalUserId returns the ExternalUserId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetExternalUserId() string {
	if o == nil || IsNil(o.ExternalUserId) {
		var ret string
		return ret
	}
	return *o.ExternalUserId
}

// GetExternalUserIdOk returns a tuple with the ExternalUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetExternalUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalUserId) {
		return nil, false
	}
	return o.ExternalUserId, true
}

// HasExternalUserId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasExternalUserId() bool {
	if o != nil && !IsNil(o.ExternalUserId) {
		return true
	}

	return false
}

// SetExternalUserId gets a reference to the given string and assigns it to the ExternalUserId field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetExternalUserId(v string) {
	o.ExternalUserId = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetGateway() string {
	if o == nil || IsNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetGateway(v string) {
	o.Gateway = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetPlanId() int64 {
	if o == nil || IsNil(o.PlanId) {
		var ret int64
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetPlanIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given int64 and assigns it to the PlanId field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetPlanId(v int64) {
	o.PlanId = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetQuantity() int64 {
	if o == nil || IsNil(o.Quantity) {
		var ret int64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int64 and assigns it to the Quantity field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetQuantity(v int64) {
	o.Quantity = &v
}

// GetTaxPercentage returns the TaxPercentage field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetTaxPercentage() int64 {
	if o == nil || IsNil(o.TaxPercentage) {
		var ret int64
		return ret
	}
	return *o.TaxPercentage
}

// GetTaxPercentageOk returns a tuple with the TaxPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetTaxPercentageOk() (*int64, bool) {
	if o == nil || IsNil(o.TaxPercentage) {
		return nil, false
	}
	return o.TaxPercentage, true
}

// HasTaxPercentage returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasTaxPercentage() bool {
	if o != nil && !IsNil(o.TaxPercentage) {
		return true
	}

	return false
}

// SetTaxPercentage gets a reference to the given int64 and assigns it to the TaxPercentage field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetTaxPercentage(v int64) {
	o.TaxPercentage = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetTotalAmount() int64 {
	if o == nil || IsNil(o.TotalAmount) {
		var ret int64
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) GetTotalAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given int64 and assigns it to the TotalAmount field.
func (o *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) SetTotalAmount(v int64) {
	o.TotalAmount = &v
}

func (o UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CountryCode) {
		toSerialize["countryCode"] = o.CountryCode
	}
	if !IsNil(o.CurrentPeriodEnd) {
		toSerialize["currentPeriodEnd"] = o.CurrentPeriodEnd
	}
	if !IsNil(o.CurrentPeriodStart) {
		toSerialize["currentPeriodStart"] = o.CurrentPeriodStart
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.ExternalPlanId) {
		toSerialize["externalPlanId"] = o.ExternalPlanId
	}
	if !IsNil(o.ExternalSubscriptionId) {
		toSerialize["externalSubscriptionId"] = o.ExternalSubscriptionId
	}
	if !IsNil(o.ExternalUserId) {
		toSerialize["externalUserId"] = o.ExternalUserId
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.TaxPercentage) {
		toSerialize["taxPercentage"] = o.TaxPercentage
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq struct {
	value *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq
	isSet bool
}

func (v NullableUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) Get() *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) Set(val *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq(val *UnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) *NullableUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq {
	return &NullableUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantSubscriptionHistorySubscriptionImportReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


