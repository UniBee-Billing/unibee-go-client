/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508041414
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantEmailAddLocalizationVersionReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantEmailAddLocalizationVersionReq{}

// UnibeeApiMerchantEmailAddLocalizationVersionReq struct for UnibeeApiMerchantEmailAddLocalizationVersionReq
type UnibeeApiMerchantEmailAddLocalizationVersionReq struct {
	Localizations []UnibeeApiBeanEmailLocalizationTemplate `json:"localizations,omitempty"`
	// Template Name
	TemplateName *string `json:"templateName,omitempty"`
	// Versioin Name
	VersionName *string `json:"versionName,omitempty"`
}

// NewUnibeeApiMerchantEmailAddLocalizationVersionReq instantiates a new UnibeeApiMerchantEmailAddLocalizationVersionReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantEmailAddLocalizationVersionReq() *UnibeeApiMerchantEmailAddLocalizationVersionReq {
	this := UnibeeApiMerchantEmailAddLocalizationVersionReq{}
	return &this
}

// NewUnibeeApiMerchantEmailAddLocalizationVersionReqWithDefaults instantiates a new UnibeeApiMerchantEmailAddLocalizationVersionReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantEmailAddLocalizationVersionReqWithDefaults() *UnibeeApiMerchantEmailAddLocalizationVersionReq {
	this := UnibeeApiMerchantEmailAddLocalizationVersionReq{}
	return &this
}

// GetLocalizations returns the Localizations field value if set, zero value otherwise.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) GetLocalizations() []UnibeeApiBeanEmailLocalizationTemplate {
	if o == nil || IsNil(o.Localizations) {
		var ret []UnibeeApiBeanEmailLocalizationTemplate
		return ret
	}
	return o.Localizations
}

// GetLocalizationsOk returns a tuple with the Localizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) GetLocalizationsOk() ([]UnibeeApiBeanEmailLocalizationTemplate, bool) {
	if o == nil || IsNil(o.Localizations) {
		return nil, false
	}
	return o.Localizations, true
}

// HasLocalizations returns a boolean if a field has been set.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) HasLocalizations() bool {
	if o != nil && !IsNil(o.Localizations) {
		return true
	}

	return false
}

// SetLocalizations gets a reference to the given []UnibeeApiBeanEmailLocalizationTemplate and assigns it to the Localizations field.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) SetLocalizations(v []UnibeeApiBeanEmailLocalizationTemplate) {
	o.Localizations = v
}

// GetTemplateName returns the TemplateName field value if set, zero value otherwise.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) GetTemplateName() string {
	if o == nil || IsNil(o.TemplateName) {
		var ret string
		return ret
	}
	return *o.TemplateName
}

// GetTemplateNameOk returns a tuple with the TemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) GetTemplateNameOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateName) {
		return nil, false
	}
	return o.TemplateName, true
}

// HasTemplateName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) HasTemplateName() bool {
	if o != nil && !IsNil(o.TemplateName) {
		return true
	}

	return false
}

// SetTemplateName gets a reference to the given string and assigns it to the TemplateName field.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) SetTemplateName(v string) {
	o.TemplateName = &v
}

// GetVersionName returns the VersionName field value if set, zero value otherwise.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) GetVersionName() string {
	if o == nil || IsNil(o.VersionName) {
		var ret string
		return ret
	}
	return *o.VersionName
}

// GetVersionNameOk returns a tuple with the VersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) GetVersionNameOk() (*string, bool) {
	if o == nil || IsNil(o.VersionName) {
		return nil, false
	}
	return o.VersionName, true
}

// HasVersionName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) HasVersionName() bool {
	if o != nil && !IsNil(o.VersionName) {
		return true
	}

	return false
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *UnibeeApiMerchantEmailAddLocalizationVersionReq) SetVersionName(v string) {
	o.VersionName = &v
}

func (o UnibeeApiMerchantEmailAddLocalizationVersionReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantEmailAddLocalizationVersionReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Localizations) {
		toSerialize["localizations"] = o.Localizations
	}
	if !IsNil(o.TemplateName) {
		toSerialize["templateName"] = o.TemplateName
	}
	if !IsNil(o.VersionName) {
		toSerialize["versionName"] = o.VersionName
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantEmailAddLocalizationVersionReq struct {
	value *UnibeeApiMerchantEmailAddLocalizationVersionReq
	isSet bool
}

func (v NullableUnibeeApiMerchantEmailAddLocalizationVersionReq) Get() *UnibeeApiMerchantEmailAddLocalizationVersionReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantEmailAddLocalizationVersionReq) Set(val *UnibeeApiMerchantEmailAddLocalizationVersionReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantEmailAddLocalizationVersionReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantEmailAddLocalizationVersionReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantEmailAddLocalizationVersionReq(val *UnibeeApiMerchantEmailAddLocalizationVersionReq) *NullableUnibeeApiMerchantEmailAddLocalizationVersionReq {
	return &NullableUnibeeApiMerchantEmailAddLocalizationVersionReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantEmailAddLocalizationVersionReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantEmailAddLocalizationVersionReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


