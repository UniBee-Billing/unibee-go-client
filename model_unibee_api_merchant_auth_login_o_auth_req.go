/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508041414
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantAuthLoginOAuthReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantAuthLoginOAuthReq{}

// UnibeeApiMerchantAuthLoginOAuthReq OAuth login
type UnibeeApiMerchantAuthLoginOAuthReq struct {
	// The merchant member email address
	Email string `json:"email"`
	// OAuth provider
	Provider string `json:"provider"`
	// Provider user ID
	ProviderId string `json:"providerId"`
	// The totp code
	TotpCode *string `json:"totpCode,omitempty"`
}

type _UnibeeApiMerchantAuthLoginOAuthReq UnibeeApiMerchantAuthLoginOAuthReq

// NewUnibeeApiMerchantAuthLoginOAuthReq instantiates a new UnibeeApiMerchantAuthLoginOAuthReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantAuthLoginOAuthReq(email string, provider string, providerId string) *UnibeeApiMerchantAuthLoginOAuthReq {
	this := UnibeeApiMerchantAuthLoginOAuthReq{}
	this.Email = email
	this.Provider = provider
	this.ProviderId = providerId
	return &this
}

// NewUnibeeApiMerchantAuthLoginOAuthReqWithDefaults instantiates a new UnibeeApiMerchantAuthLoginOAuthReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantAuthLoginOAuthReqWithDefaults() *UnibeeApiMerchantAuthLoginOAuthReq {
	this := UnibeeApiMerchantAuthLoginOAuthReq{}
	return &this
}

// GetEmail returns the Email field value
func (o *UnibeeApiMerchantAuthLoginOAuthReq) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthLoginOAuthReq) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UnibeeApiMerchantAuthLoginOAuthReq) SetEmail(v string) {
	o.Email = v
}

// GetProvider returns the Provider field value
func (o *UnibeeApiMerchantAuthLoginOAuthReq) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthLoginOAuthReq) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *UnibeeApiMerchantAuthLoginOAuthReq) SetProvider(v string) {
	o.Provider = v
}

// GetProviderId returns the ProviderId field value
func (o *UnibeeApiMerchantAuthLoginOAuthReq) GetProviderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthLoginOAuthReq) GetProviderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderId, true
}

// SetProviderId sets field value
func (o *UnibeeApiMerchantAuthLoginOAuthReq) SetProviderId(v string) {
	o.ProviderId = v
}

// GetTotpCode returns the TotpCode field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthLoginOAuthReq) GetTotpCode() string {
	if o == nil || IsNil(o.TotpCode) {
		var ret string
		return ret
	}
	return *o.TotpCode
}

// GetTotpCodeOk returns a tuple with the TotpCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthLoginOAuthReq) GetTotpCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TotpCode) {
		return nil, false
	}
	return o.TotpCode, true
}

// HasTotpCode returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthLoginOAuthReq) HasTotpCode() bool {
	if o != nil && !IsNil(o.TotpCode) {
		return true
	}

	return false
}

// SetTotpCode gets a reference to the given string and assigns it to the TotpCode field.
func (o *UnibeeApiMerchantAuthLoginOAuthReq) SetTotpCode(v string) {
	o.TotpCode = &v
}

func (o UnibeeApiMerchantAuthLoginOAuthReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantAuthLoginOAuthReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["provider"] = o.Provider
	toSerialize["providerId"] = o.ProviderId
	if !IsNil(o.TotpCode) {
		toSerialize["totpCode"] = o.TotpCode
	}
	return toSerialize, nil
}

func (o *UnibeeApiMerchantAuthLoginOAuthReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"provider",
		"providerId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantAuthLoginOAuthReq := _UnibeeApiMerchantAuthLoginOAuthReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varUnibeeApiMerchantAuthLoginOAuthReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantAuthLoginOAuthReq(varUnibeeApiMerchantAuthLoginOAuthReq)

	return err
}

type NullableUnibeeApiMerchantAuthLoginOAuthReq struct {
	value *UnibeeApiMerchantAuthLoginOAuthReq
	isSet bool
}

func (v NullableUnibeeApiMerchantAuthLoginOAuthReq) Get() *UnibeeApiMerchantAuthLoginOAuthReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantAuthLoginOAuthReq) Set(val *UnibeeApiMerchantAuthLoginOAuthReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantAuthLoginOAuthReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantAuthLoginOAuthReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantAuthLoginOAuthReq(val *UnibeeApiMerchantAuthLoginOAuthReq) *NullableUnibeeApiMerchantAuthLoginOAuthReq {
	return &NullableUnibeeApiMerchantAuthLoginOAuthReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantAuthLoginOAuthReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantAuthLoginOAuthReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


