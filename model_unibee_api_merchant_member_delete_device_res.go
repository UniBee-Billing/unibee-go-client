/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202506261206
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantMemberDeleteDeviceRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantMemberDeleteDeviceRes{}

// UnibeeApiMerchantMemberDeleteDeviceRes struct for UnibeeApiMerchantMemberDeleteDeviceRes
type UnibeeApiMerchantMemberDeleteDeviceRes struct {
	// The devices list'
	DeviceList []UnibeeApiBeanMerchantMemberDevice `json:"deviceList,omitempty"`
}

// NewUnibeeApiMerchantMemberDeleteDeviceRes instantiates a new UnibeeApiMerchantMemberDeleteDeviceRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantMemberDeleteDeviceRes() *UnibeeApiMerchantMemberDeleteDeviceRes {
	this := UnibeeApiMerchantMemberDeleteDeviceRes{}
	return &this
}

// NewUnibeeApiMerchantMemberDeleteDeviceResWithDefaults instantiates a new UnibeeApiMerchantMemberDeleteDeviceRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantMemberDeleteDeviceResWithDefaults() *UnibeeApiMerchantMemberDeleteDeviceRes {
	this := UnibeeApiMerchantMemberDeleteDeviceRes{}
	return &this
}

// GetDeviceList returns the DeviceList field value if set, zero value otherwise.
func (o *UnibeeApiMerchantMemberDeleteDeviceRes) GetDeviceList() []UnibeeApiBeanMerchantMemberDevice {
	if o == nil || IsNil(o.DeviceList) {
		var ret []UnibeeApiBeanMerchantMemberDevice
		return ret
	}
	return o.DeviceList
}

// GetDeviceListOk returns a tuple with the DeviceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantMemberDeleteDeviceRes) GetDeviceListOk() ([]UnibeeApiBeanMerchantMemberDevice, bool) {
	if o == nil || IsNil(o.DeviceList) {
		return nil, false
	}
	return o.DeviceList, true
}

// HasDeviceList returns a boolean if a field has been set.
func (o *UnibeeApiMerchantMemberDeleteDeviceRes) HasDeviceList() bool {
	if o != nil && !IsNil(o.DeviceList) {
		return true
	}

	return false
}

// SetDeviceList gets a reference to the given []UnibeeApiBeanMerchantMemberDevice and assigns it to the DeviceList field.
func (o *UnibeeApiMerchantMemberDeleteDeviceRes) SetDeviceList(v []UnibeeApiBeanMerchantMemberDevice) {
	o.DeviceList = v
}

func (o UnibeeApiMerchantMemberDeleteDeviceRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantMemberDeleteDeviceRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceList) {
		toSerialize["deviceList"] = o.DeviceList
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantMemberDeleteDeviceRes struct {
	value *UnibeeApiMerchantMemberDeleteDeviceRes
	isSet bool
}

func (v NullableUnibeeApiMerchantMemberDeleteDeviceRes) Get() *UnibeeApiMerchantMemberDeleteDeviceRes {
	return v.value
}

func (v *NullableUnibeeApiMerchantMemberDeleteDeviceRes) Set(val *UnibeeApiMerchantMemberDeleteDeviceRes) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantMemberDeleteDeviceRes) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantMemberDeleteDeviceRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantMemberDeleteDeviceRes(val *UnibeeApiMerchantMemberDeleteDeviceRes) *NullableUnibeeApiMerchantMemberDeleteDeviceRes {
	return &NullableUnibeeApiMerchantMemberDeleteDeviceRes{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantMemberDeleteDeviceRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantMemberDeleteDeviceRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


