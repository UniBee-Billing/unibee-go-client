/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508150435
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanTemplateVariable type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanTemplateVariable{}

// UnibeeApiBeanTemplateVariable struct for UnibeeApiBeanTemplateVariable
type UnibeeApiBeanTemplateVariable struct {
	VariableName *string `json:"variableName,omitempty"`
}

// NewUnibeeApiBeanTemplateVariable instantiates a new UnibeeApiBeanTemplateVariable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanTemplateVariable() *UnibeeApiBeanTemplateVariable {
	this := UnibeeApiBeanTemplateVariable{}
	return &this
}

// NewUnibeeApiBeanTemplateVariableWithDefaults instantiates a new UnibeeApiBeanTemplateVariable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanTemplateVariableWithDefaults() *UnibeeApiBeanTemplateVariable {
	this := UnibeeApiBeanTemplateVariable{}
	return &this
}

// GetVariableName returns the VariableName field value if set, zero value otherwise.
func (o *UnibeeApiBeanTemplateVariable) GetVariableName() string {
	if o == nil || IsNil(o.VariableName) {
		var ret string
		return ret
	}
	return *o.VariableName
}

// GetVariableNameOk returns a tuple with the VariableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanTemplateVariable) GetVariableNameOk() (*string, bool) {
	if o == nil || IsNil(o.VariableName) {
		return nil, false
	}
	return o.VariableName, true
}

// HasVariableName returns a boolean if a field has been set.
func (o *UnibeeApiBeanTemplateVariable) HasVariableName() bool {
	if o != nil && !IsNil(o.VariableName) {
		return true
	}

	return false
}

// SetVariableName gets a reference to the given string and assigns it to the VariableName field.
func (o *UnibeeApiBeanTemplateVariable) SetVariableName(v string) {
	o.VariableName = &v
}

func (o UnibeeApiBeanTemplateVariable) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanTemplateVariable) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VariableName) {
		toSerialize["variableName"] = o.VariableName
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanTemplateVariable struct {
	value *UnibeeApiBeanTemplateVariable
	isSet bool
}

func (v NullableUnibeeApiBeanTemplateVariable) Get() *UnibeeApiBeanTemplateVariable {
	return v.value
}

func (v *NullableUnibeeApiBeanTemplateVariable) Set(val *UnibeeApiBeanTemplateVariable) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanTemplateVariable) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanTemplateVariable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanTemplateVariable(val *UnibeeApiBeanTemplateVariable) *NullableUnibeeApiBeanTemplateVariable {
	return &NullableUnibeeApiBeanTemplateVariable{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanTemplateVariable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanTemplateVariable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


