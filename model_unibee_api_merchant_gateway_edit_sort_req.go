/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202510192014
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantGatewayEditSortReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantGatewayEditSortReq{}

// UnibeeApiMerchantGatewayEditSortReq struct for UnibeeApiMerchantGatewayEditSortReq
type UnibeeApiMerchantGatewayEditSortReq struct {
	// structure gateway sort
	GatewaySorts []UnibeeApiBeanDetailGatewaySort `json:"gatewaySorts,omitempty"`
}

// NewUnibeeApiMerchantGatewayEditSortReq instantiates a new UnibeeApiMerchantGatewayEditSortReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantGatewayEditSortReq() *UnibeeApiMerchantGatewayEditSortReq {
	this := UnibeeApiMerchantGatewayEditSortReq{}
	return &this
}

// NewUnibeeApiMerchantGatewayEditSortReqWithDefaults instantiates a new UnibeeApiMerchantGatewayEditSortReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantGatewayEditSortReqWithDefaults() *UnibeeApiMerchantGatewayEditSortReq {
	this := UnibeeApiMerchantGatewayEditSortReq{}
	return &this
}

// GetGatewaySorts returns the GatewaySorts field value if set, zero value otherwise.
func (o *UnibeeApiMerchantGatewayEditSortReq) GetGatewaySorts() []UnibeeApiBeanDetailGatewaySort {
	if o == nil || IsNil(o.GatewaySorts) {
		var ret []UnibeeApiBeanDetailGatewaySort
		return ret
	}
	return o.GatewaySorts
}

// GetGatewaySortsOk returns a tuple with the GatewaySorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantGatewayEditSortReq) GetGatewaySortsOk() ([]UnibeeApiBeanDetailGatewaySort, bool) {
	if o == nil || IsNil(o.GatewaySorts) {
		return nil, false
	}
	return o.GatewaySorts, true
}

// HasGatewaySorts returns a boolean if a field has been set.
func (o *UnibeeApiMerchantGatewayEditSortReq) HasGatewaySorts() bool {
	if o != nil && !IsNil(o.GatewaySorts) {
		return true
	}

	return false
}

// SetGatewaySorts gets a reference to the given []UnibeeApiBeanDetailGatewaySort and assigns it to the GatewaySorts field.
func (o *UnibeeApiMerchantGatewayEditSortReq) SetGatewaySorts(v []UnibeeApiBeanDetailGatewaySort) {
	o.GatewaySorts = v
}

func (o UnibeeApiMerchantGatewayEditSortReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantGatewayEditSortReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GatewaySorts) {
		toSerialize["gatewaySorts"] = o.GatewaySorts
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantGatewayEditSortReq struct {
	value *UnibeeApiMerchantGatewayEditSortReq
	isSet bool
}

func (v NullableUnibeeApiMerchantGatewayEditSortReq) Get() *UnibeeApiMerchantGatewayEditSortReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantGatewayEditSortReq) Set(val *UnibeeApiMerchantGatewayEditSortReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantGatewayEditSortReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantGatewayEditSortReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantGatewayEditSortReq(val *UnibeeApiMerchantGatewayEditSortReq) *NullableUnibeeApiMerchantGatewayEditSortReq {
	return &NullableUnibeeApiMerchantGatewayEditSortReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantGatewayEditSortReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantGatewayEditSortReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


