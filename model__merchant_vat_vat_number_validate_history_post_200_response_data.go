/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202510192014
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the MerchantVatVatNumberValidateHistoryPost200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantVatVatNumberValidateHistoryPost200ResponseData{}

// MerchantVatVatNumberValidateHistoryPost200ResponseData struct for MerchantVatVatNumberValidateHistoryPost200ResponseData
type MerchantVatVatNumberValidateHistoryPost200ResponseData struct {
	// NumberValidateHistoryList
	NumberValidateHistoryList []UnibeeApiBeanMerchantVatNumberVerifyHistory `json:"numberValidateHistoryList,omitempty"`
	// Total
	Total *int32 `json:"total,omitempty"`
}

// NewMerchantVatVatNumberValidateHistoryPost200ResponseData instantiates a new MerchantVatVatNumberValidateHistoryPost200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantVatVatNumberValidateHistoryPost200ResponseData() *MerchantVatVatNumberValidateHistoryPost200ResponseData {
	this := MerchantVatVatNumberValidateHistoryPost200ResponseData{}
	return &this
}

// NewMerchantVatVatNumberValidateHistoryPost200ResponseDataWithDefaults instantiates a new MerchantVatVatNumberValidateHistoryPost200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantVatVatNumberValidateHistoryPost200ResponseDataWithDefaults() *MerchantVatVatNumberValidateHistoryPost200ResponseData {
	this := MerchantVatVatNumberValidateHistoryPost200ResponseData{}
	return &this
}

// GetNumberValidateHistoryList returns the NumberValidateHistoryList field value if set, zero value otherwise.
func (o *MerchantVatVatNumberValidateHistoryPost200ResponseData) GetNumberValidateHistoryList() []UnibeeApiBeanMerchantVatNumberVerifyHistory {
	if o == nil || IsNil(o.NumberValidateHistoryList) {
		var ret []UnibeeApiBeanMerchantVatNumberVerifyHistory
		return ret
	}
	return o.NumberValidateHistoryList
}

// GetNumberValidateHistoryListOk returns a tuple with the NumberValidateHistoryList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantVatVatNumberValidateHistoryPost200ResponseData) GetNumberValidateHistoryListOk() ([]UnibeeApiBeanMerchantVatNumberVerifyHistory, bool) {
	if o == nil || IsNil(o.NumberValidateHistoryList) {
		return nil, false
	}
	return o.NumberValidateHistoryList, true
}

// HasNumberValidateHistoryList returns a boolean if a field has been set.
func (o *MerchantVatVatNumberValidateHistoryPost200ResponseData) HasNumberValidateHistoryList() bool {
	if o != nil && !IsNil(o.NumberValidateHistoryList) {
		return true
	}

	return false
}

// SetNumberValidateHistoryList gets a reference to the given []UnibeeApiBeanMerchantVatNumberVerifyHistory and assigns it to the NumberValidateHistoryList field.
func (o *MerchantVatVatNumberValidateHistoryPost200ResponseData) SetNumberValidateHistoryList(v []UnibeeApiBeanMerchantVatNumberVerifyHistory) {
	o.NumberValidateHistoryList = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *MerchantVatVatNumberValidateHistoryPost200ResponseData) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantVatVatNumberValidateHistoryPost200ResponseData) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *MerchantVatVatNumberValidateHistoryPost200ResponseData) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *MerchantVatVatNumberValidateHistoryPost200ResponseData) SetTotal(v int32) {
	o.Total = &v
}

func (o MerchantVatVatNumberValidateHistoryPost200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantVatVatNumberValidateHistoryPost200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumberValidateHistoryList) {
		toSerialize["numberValidateHistoryList"] = o.NumberValidateHistoryList
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableMerchantVatVatNumberValidateHistoryPost200ResponseData struct {
	value *MerchantVatVatNumberValidateHistoryPost200ResponseData
	isSet bool
}

func (v NullableMerchantVatVatNumberValidateHistoryPost200ResponseData) Get() *MerchantVatVatNumberValidateHistoryPost200ResponseData {
	return v.value
}

func (v *NullableMerchantVatVatNumberValidateHistoryPost200ResponseData) Set(val *MerchantVatVatNumberValidateHistoryPost200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantVatVatNumberValidateHistoryPost200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantVatVatNumberValidateHistoryPost200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantVatVatNumberValidateHistoryPost200ResponseData(val *MerchantVatVatNumberValidateHistoryPost200ResponseData) *NullableMerchantVatVatNumberValidateHistoryPost200ResponseData {
	return &NullableMerchantVatVatNumberValidateHistoryPost200ResponseData{value: val, isSet: true}
}

func (v NullableMerchantVatVatNumberValidateHistoryPost200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantVatVatNumberValidateHistoryPost200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


