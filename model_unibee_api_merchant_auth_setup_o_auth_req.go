/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509191247
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantAuthSetupOAuthReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantAuthSetupOAuthReq{}

// UnibeeApiMerchantAuthSetupOAuthReq Member OAuth Setup. Pass OAuth token in request header (Auth.js JWT). Headers: X-Auth-JS-Token | X-Auth-Token | X-OAuth-Token
type UnibeeApiMerchantAuthSetupOAuthReq struct {
	// The merchant member email address
	Email string `json:"email"`
	// The new password
	NewPassword *string `json:"newPassword,omitempty"`
	// The merchant member password setup token
	SetupToken string `json:"setupToken"`
}

type _UnibeeApiMerchantAuthSetupOAuthReq UnibeeApiMerchantAuthSetupOAuthReq

// NewUnibeeApiMerchantAuthSetupOAuthReq instantiates a new UnibeeApiMerchantAuthSetupOAuthReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantAuthSetupOAuthReq(email string, setupToken string) *UnibeeApiMerchantAuthSetupOAuthReq {
	this := UnibeeApiMerchantAuthSetupOAuthReq{}
	this.Email = email
	this.SetupToken = setupToken
	return &this
}

// NewUnibeeApiMerchantAuthSetupOAuthReqWithDefaults instantiates a new UnibeeApiMerchantAuthSetupOAuthReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantAuthSetupOAuthReqWithDefaults() *UnibeeApiMerchantAuthSetupOAuthReq {
	this := UnibeeApiMerchantAuthSetupOAuthReq{}
	return &this
}

// GetEmail returns the Email field value
func (o *UnibeeApiMerchantAuthSetupOAuthReq) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthSetupOAuthReq) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UnibeeApiMerchantAuthSetupOAuthReq) SetEmail(v string) {
	o.Email = v
}

// GetNewPassword returns the NewPassword field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthSetupOAuthReq) GetNewPassword() string {
	if o == nil || IsNil(o.NewPassword) {
		var ret string
		return ret
	}
	return *o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthSetupOAuthReq) GetNewPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.NewPassword) {
		return nil, false
	}
	return o.NewPassword, true
}

// HasNewPassword returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthSetupOAuthReq) HasNewPassword() bool {
	if o != nil && !IsNil(o.NewPassword) {
		return true
	}

	return false
}

// SetNewPassword gets a reference to the given string and assigns it to the NewPassword field.
func (o *UnibeeApiMerchantAuthSetupOAuthReq) SetNewPassword(v string) {
	o.NewPassword = &v
}

// GetSetupToken returns the SetupToken field value
func (o *UnibeeApiMerchantAuthSetupOAuthReq) GetSetupToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SetupToken
}

// GetSetupTokenOk returns a tuple with the SetupToken field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthSetupOAuthReq) GetSetupTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SetupToken, true
}

// SetSetupToken sets field value
func (o *UnibeeApiMerchantAuthSetupOAuthReq) SetSetupToken(v string) {
	o.SetupToken = v
}

func (o UnibeeApiMerchantAuthSetupOAuthReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantAuthSetupOAuthReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	if !IsNil(o.NewPassword) {
		toSerialize["newPassword"] = o.NewPassword
	}
	toSerialize["setupToken"] = o.SetupToken
	return toSerialize, nil
}

func (o *UnibeeApiMerchantAuthSetupOAuthReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"setupToken",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantAuthSetupOAuthReq := _UnibeeApiMerchantAuthSetupOAuthReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varUnibeeApiMerchantAuthSetupOAuthReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantAuthSetupOAuthReq(varUnibeeApiMerchantAuthSetupOAuthReq)

	return err
}

type NullableUnibeeApiMerchantAuthSetupOAuthReq struct {
	value *UnibeeApiMerchantAuthSetupOAuthReq
	isSet bool
}

func (v NullableUnibeeApiMerchantAuthSetupOAuthReq) Get() *UnibeeApiMerchantAuthSetupOAuthReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantAuthSetupOAuthReq) Set(val *UnibeeApiMerchantAuthSetupOAuthReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantAuthSetupOAuthReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantAuthSetupOAuthReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantAuthSetupOAuthReq(val *UnibeeApiMerchantAuthSetupOAuthReq) *NullableUnibeeApiMerchantAuthSetupOAuthReq {
	return &NullableUnibeeApiMerchantAuthSetupOAuthReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantAuthSetupOAuthReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantAuthSetupOAuthReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


