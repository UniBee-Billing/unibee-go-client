/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508150435
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanGatewayCurrencyExchange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanGatewayCurrencyExchange{}

// UnibeeApiBeanGatewayCurrencyExchange struct for UnibeeApiBeanGatewayCurrencyExchange
type UnibeeApiBeanGatewayCurrencyExchange struct {
	// the exchange amount of gateway
	ExchangeAmount *int64 `json:"exchange_amount,omitempty"`
	// the exchange rate of gateway, set to 0 if using https://app.exchangerate-api.com/ instead of fixed exchange rate
	ExchangeRate *float32 `json:"exchange_rate,omitempty"`
	// the currency of gateway exchange from
	FromCurrency *string `json:"from_currency,omitempty"`
	// the currency of gateway exchange to
	ToCurrency *string `json:"to_currency,omitempty"`
}

// NewUnibeeApiBeanGatewayCurrencyExchange instantiates a new UnibeeApiBeanGatewayCurrencyExchange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanGatewayCurrencyExchange() *UnibeeApiBeanGatewayCurrencyExchange {
	this := UnibeeApiBeanGatewayCurrencyExchange{}
	return &this
}

// NewUnibeeApiBeanGatewayCurrencyExchangeWithDefaults instantiates a new UnibeeApiBeanGatewayCurrencyExchange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanGatewayCurrencyExchangeWithDefaults() *UnibeeApiBeanGatewayCurrencyExchange {
	this := UnibeeApiBeanGatewayCurrencyExchange{}
	return &this
}

// GetExchangeAmount returns the ExchangeAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanGatewayCurrencyExchange) GetExchangeAmount() int64 {
	if o == nil || IsNil(o.ExchangeAmount) {
		var ret int64
		return ret
	}
	return *o.ExchangeAmount
}

// GetExchangeAmountOk returns a tuple with the ExchangeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanGatewayCurrencyExchange) GetExchangeAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.ExchangeAmount) {
		return nil, false
	}
	return o.ExchangeAmount, true
}

// HasExchangeAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanGatewayCurrencyExchange) HasExchangeAmount() bool {
	if o != nil && !IsNil(o.ExchangeAmount) {
		return true
	}

	return false
}

// SetExchangeAmount gets a reference to the given int64 and assigns it to the ExchangeAmount field.
func (o *UnibeeApiBeanGatewayCurrencyExchange) SetExchangeAmount(v int64) {
	o.ExchangeAmount = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *UnibeeApiBeanGatewayCurrencyExchange) GetExchangeRate() float32 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float32
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanGatewayCurrencyExchange) GetExchangeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *UnibeeApiBeanGatewayCurrencyExchange) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float32 and assigns it to the ExchangeRate field.
func (o *UnibeeApiBeanGatewayCurrencyExchange) SetExchangeRate(v float32) {
	o.ExchangeRate = &v
}

// GetFromCurrency returns the FromCurrency field value if set, zero value otherwise.
func (o *UnibeeApiBeanGatewayCurrencyExchange) GetFromCurrency() string {
	if o == nil || IsNil(o.FromCurrency) {
		var ret string
		return ret
	}
	return *o.FromCurrency
}

// GetFromCurrencyOk returns a tuple with the FromCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanGatewayCurrencyExchange) GetFromCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.FromCurrency) {
		return nil, false
	}
	return o.FromCurrency, true
}

// HasFromCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanGatewayCurrencyExchange) HasFromCurrency() bool {
	if o != nil && !IsNil(o.FromCurrency) {
		return true
	}

	return false
}

// SetFromCurrency gets a reference to the given string and assigns it to the FromCurrency field.
func (o *UnibeeApiBeanGatewayCurrencyExchange) SetFromCurrency(v string) {
	o.FromCurrency = &v
}

// GetToCurrency returns the ToCurrency field value if set, zero value otherwise.
func (o *UnibeeApiBeanGatewayCurrencyExchange) GetToCurrency() string {
	if o == nil || IsNil(o.ToCurrency) {
		var ret string
		return ret
	}
	return *o.ToCurrency
}

// GetToCurrencyOk returns a tuple with the ToCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanGatewayCurrencyExchange) GetToCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.ToCurrency) {
		return nil, false
	}
	return o.ToCurrency, true
}

// HasToCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanGatewayCurrencyExchange) HasToCurrency() bool {
	if o != nil && !IsNil(o.ToCurrency) {
		return true
	}

	return false
}

// SetToCurrency gets a reference to the given string and assigns it to the ToCurrency field.
func (o *UnibeeApiBeanGatewayCurrencyExchange) SetToCurrency(v string) {
	o.ToCurrency = &v
}

func (o UnibeeApiBeanGatewayCurrencyExchange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanGatewayCurrencyExchange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExchangeAmount) {
		toSerialize["exchange_amount"] = o.ExchangeAmount
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchange_rate"] = o.ExchangeRate
	}
	if !IsNil(o.FromCurrency) {
		toSerialize["from_currency"] = o.FromCurrency
	}
	if !IsNil(o.ToCurrency) {
		toSerialize["to_currency"] = o.ToCurrency
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanGatewayCurrencyExchange struct {
	value *UnibeeApiBeanGatewayCurrencyExchange
	isSet bool
}

func (v NullableUnibeeApiBeanGatewayCurrencyExchange) Get() *UnibeeApiBeanGatewayCurrencyExchange {
	return v.value
}

func (v *NullableUnibeeApiBeanGatewayCurrencyExchange) Set(val *UnibeeApiBeanGatewayCurrencyExchange) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanGatewayCurrencyExchange) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanGatewayCurrencyExchange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanGatewayCurrencyExchange(val *UnibeeApiBeanGatewayCurrencyExchange) *NullableUnibeeApiBeanGatewayCurrencyExchange {
	return &NullableUnibeeApiBeanGatewayCurrencyExchange{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanGatewayCurrencyExchange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanGatewayCurrencyExchange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


