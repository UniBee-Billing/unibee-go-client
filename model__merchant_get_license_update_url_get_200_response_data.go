/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509290914
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the MerchantGetLicenseUpdateUrlGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantGetLicenseUpdateUrlGet200ResponseData{}

// MerchantGetLicenseUpdateUrlGet200ResponseData struct for MerchantGetLicenseUpdateUrlGet200ResponseData
type MerchantGetLicenseUpdateUrlGet200ResponseData struct {
	// Url
	Url *string `json:"url,omitempty"`
}

// NewMerchantGetLicenseUpdateUrlGet200ResponseData instantiates a new MerchantGetLicenseUpdateUrlGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantGetLicenseUpdateUrlGet200ResponseData() *MerchantGetLicenseUpdateUrlGet200ResponseData {
	this := MerchantGetLicenseUpdateUrlGet200ResponseData{}
	return &this
}

// NewMerchantGetLicenseUpdateUrlGet200ResponseDataWithDefaults instantiates a new MerchantGetLicenseUpdateUrlGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantGetLicenseUpdateUrlGet200ResponseDataWithDefaults() *MerchantGetLicenseUpdateUrlGet200ResponseData {
	this := MerchantGetLicenseUpdateUrlGet200ResponseData{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *MerchantGetLicenseUpdateUrlGet200ResponseData) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGetLicenseUpdateUrlGet200ResponseData) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *MerchantGetLicenseUpdateUrlGet200ResponseData) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *MerchantGetLicenseUpdateUrlGet200ResponseData) SetUrl(v string) {
	o.Url = &v
}

func (o MerchantGetLicenseUpdateUrlGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantGetLicenseUpdateUrlGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableMerchantGetLicenseUpdateUrlGet200ResponseData struct {
	value *MerchantGetLicenseUpdateUrlGet200ResponseData
	isSet bool
}

func (v NullableMerchantGetLicenseUpdateUrlGet200ResponseData) Get() *MerchantGetLicenseUpdateUrlGet200ResponseData {
	return v.value
}

func (v *NullableMerchantGetLicenseUpdateUrlGet200ResponseData) Set(val *MerchantGetLicenseUpdateUrlGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantGetLicenseUpdateUrlGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantGetLicenseUpdateUrlGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantGetLicenseUpdateUrlGet200ResponseData(val *MerchantGetLicenseUpdateUrlGet200ResponseData) *NullableMerchantGetLicenseUpdateUrlGet200ResponseData {
	return &NullableMerchantGetLicenseUpdateUrlGet200ResponseData{value: val, isSet: true}
}

func (v NullableMerchantGetLicenseUpdateUrlGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantGetLicenseUpdateUrlGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


