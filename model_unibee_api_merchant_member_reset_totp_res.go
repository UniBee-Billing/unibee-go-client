/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508041414
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantMemberResetTotpRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantMemberResetTotpRes{}

// UnibeeApiMerchantMemberResetTotpRes struct for UnibeeApiMerchantMemberResetTotpRes
type UnibeeApiMerchantMemberResetTotpRes struct {
	MerchantMember *UnibeeApiBeanDetailMerchantMemberDetail `json:"merchantMember,omitempty"`
}

// NewUnibeeApiMerchantMemberResetTotpRes instantiates a new UnibeeApiMerchantMemberResetTotpRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantMemberResetTotpRes() *UnibeeApiMerchantMemberResetTotpRes {
	this := UnibeeApiMerchantMemberResetTotpRes{}
	return &this
}

// NewUnibeeApiMerchantMemberResetTotpResWithDefaults instantiates a new UnibeeApiMerchantMemberResetTotpRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantMemberResetTotpResWithDefaults() *UnibeeApiMerchantMemberResetTotpRes {
	this := UnibeeApiMerchantMemberResetTotpRes{}
	return &this
}

// GetMerchantMember returns the MerchantMember field value if set, zero value otherwise.
func (o *UnibeeApiMerchantMemberResetTotpRes) GetMerchantMember() UnibeeApiBeanDetailMerchantMemberDetail {
	if o == nil || IsNil(o.MerchantMember) {
		var ret UnibeeApiBeanDetailMerchantMemberDetail
		return ret
	}
	return *o.MerchantMember
}

// GetMerchantMemberOk returns a tuple with the MerchantMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantMemberResetTotpRes) GetMerchantMemberOk() (*UnibeeApiBeanDetailMerchantMemberDetail, bool) {
	if o == nil || IsNil(o.MerchantMember) {
		return nil, false
	}
	return o.MerchantMember, true
}

// HasMerchantMember returns a boolean if a field has been set.
func (o *UnibeeApiMerchantMemberResetTotpRes) HasMerchantMember() bool {
	if o != nil && !IsNil(o.MerchantMember) {
		return true
	}

	return false
}

// SetMerchantMember gets a reference to the given UnibeeApiBeanDetailMerchantMemberDetail and assigns it to the MerchantMember field.
func (o *UnibeeApiMerchantMemberResetTotpRes) SetMerchantMember(v UnibeeApiBeanDetailMerchantMemberDetail) {
	o.MerchantMember = &v
}

func (o UnibeeApiMerchantMemberResetTotpRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantMemberResetTotpRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MerchantMember) {
		toSerialize["merchantMember"] = o.MerchantMember
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantMemberResetTotpRes struct {
	value *UnibeeApiMerchantMemberResetTotpRes
	isSet bool
}

func (v NullableUnibeeApiMerchantMemberResetTotpRes) Get() *UnibeeApiMerchantMemberResetTotpRes {
	return v.value
}

func (v *NullableUnibeeApiMerchantMemberResetTotpRes) Set(val *UnibeeApiMerchantMemberResetTotpRes) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantMemberResetTotpRes) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantMemberResetTotpRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantMemberResetTotpRes(val *UnibeeApiMerchantMemberResetTotpRes) *NullableUnibeeApiMerchantMemberResetTotpRes {
	return &NullableUnibeeApiMerchantMemberResetTotpRes{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantMemberResetTotpRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantMemberResetTotpRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


