/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509290914
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantAuthClearTotpReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantAuthClearTotpReq{}

// UnibeeApiMerchantAuthClearTotpReq struct for UnibeeApiMerchantAuthClearTotpReq
type UnibeeApiMerchantAuthClearTotpReq struct {
	// The merchant member email address
	Email string `json:"email"`
	// TOTP Resume Code
	TotpResumeCode string `json:"totpResumeCode"`
}

type _UnibeeApiMerchantAuthClearTotpReq UnibeeApiMerchantAuthClearTotpReq

// NewUnibeeApiMerchantAuthClearTotpReq instantiates a new UnibeeApiMerchantAuthClearTotpReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantAuthClearTotpReq(email string, totpResumeCode string) *UnibeeApiMerchantAuthClearTotpReq {
	this := UnibeeApiMerchantAuthClearTotpReq{}
	this.Email = email
	this.TotpResumeCode = totpResumeCode
	return &this
}

// NewUnibeeApiMerchantAuthClearTotpReqWithDefaults instantiates a new UnibeeApiMerchantAuthClearTotpReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantAuthClearTotpReqWithDefaults() *UnibeeApiMerchantAuthClearTotpReq {
	this := UnibeeApiMerchantAuthClearTotpReq{}
	return &this
}

// GetEmail returns the Email field value
func (o *UnibeeApiMerchantAuthClearTotpReq) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthClearTotpReq) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UnibeeApiMerchantAuthClearTotpReq) SetEmail(v string) {
	o.Email = v
}

// GetTotpResumeCode returns the TotpResumeCode field value
func (o *UnibeeApiMerchantAuthClearTotpReq) GetTotpResumeCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotpResumeCode
}

// GetTotpResumeCodeOk returns a tuple with the TotpResumeCode field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthClearTotpReq) GetTotpResumeCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotpResumeCode, true
}

// SetTotpResumeCode sets field value
func (o *UnibeeApiMerchantAuthClearTotpReq) SetTotpResumeCode(v string) {
	o.TotpResumeCode = v
}

func (o UnibeeApiMerchantAuthClearTotpReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantAuthClearTotpReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["totpResumeCode"] = o.TotpResumeCode
	return toSerialize, nil
}

func (o *UnibeeApiMerchantAuthClearTotpReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"totpResumeCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantAuthClearTotpReq := _UnibeeApiMerchantAuthClearTotpReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varUnibeeApiMerchantAuthClearTotpReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantAuthClearTotpReq(varUnibeeApiMerchantAuthClearTotpReq)

	return err
}

type NullableUnibeeApiMerchantAuthClearTotpReq struct {
	value *UnibeeApiMerchantAuthClearTotpReq
	isSet bool
}

func (v NullableUnibeeApiMerchantAuthClearTotpReq) Get() *UnibeeApiMerchantAuthClearTotpReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantAuthClearTotpReq) Set(val *UnibeeApiMerchantAuthClearTotpReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantAuthClearTotpReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantAuthClearTotpReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantAuthClearTotpReq(val *UnibeeApiMerchantAuthClearTotpReq) *NullableUnibeeApiMerchantAuthClearTotpReq {
	return &NullableUnibeeApiMerchantAuthClearTotpReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantAuthClearTotpReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantAuthClearTotpReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


