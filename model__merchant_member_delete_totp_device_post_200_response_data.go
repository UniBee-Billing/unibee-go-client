/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509191247
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the MerchantMemberDeleteTotpDevicePost200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantMemberDeleteTotpDevicePost200ResponseData{}

// MerchantMemberDeleteTotpDevicePost200ResponseData struct for MerchantMemberDeleteTotpDevicePost200ResponseData
type MerchantMemberDeleteTotpDevicePost200ResponseData struct {
	// The devices list'
	DeviceList []UnibeeApiBeanMerchantMemberDevice `json:"deviceList,omitempty"`
}

// NewMerchantMemberDeleteTotpDevicePost200ResponseData instantiates a new MerchantMemberDeleteTotpDevicePost200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantMemberDeleteTotpDevicePost200ResponseData() *MerchantMemberDeleteTotpDevicePost200ResponseData {
	this := MerchantMemberDeleteTotpDevicePost200ResponseData{}
	return &this
}

// NewMerchantMemberDeleteTotpDevicePost200ResponseDataWithDefaults instantiates a new MerchantMemberDeleteTotpDevicePost200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantMemberDeleteTotpDevicePost200ResponseDataWithDefaults() *MerchantMemberDeleteTotpDevicePost200ResponseData {
	this := MerchantMemberDeleteTotpDevicePost200ResponseData{}
	return &this
}

// GetDeviceList returns the DeviceList field value if set, zero value otherwise.
func (o *MerchantMemberDeleteTotpDevicePost200ResponseData) GetDeviceList() []UnibeeApiBeanMerchantMemberDevice {
	if o == nil || IsNil(o.DeviceList) {
		var ret []UnibeeApiBeanMerchantMemberDevice
		return ret
	}
	return o.DeviceList
}

// GetDeviceListOk returns a tuple with the DeviceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMemberDeleteTotpDevicePost200ResponseData) GetDeviceListOk() ([]UnibeeApiBeanMerchantMemberDevice, bool) {
	if o == nil || IsNil(o.DeviceList) {
		return nil, false
	}
	return o.DeviceList, true
}

// HasDeviceList returns a boolean if a field has been set.
func (o *MerchantMemberDeleteTotpDevicePost200ResponseData) HasDeviceList() bool {
	if o != nil && !IsNil(o.DeviceList) {
		return true
	}

	return false
}

// SetDeviceList gets a reference to the given []UnibeeApiBeanMerchantMemberDevice and assigns it to the DeviceList field.
func (o *MerchantMemberDeleteTotpDevicePost200ResponseData) SetDeviceList(v []UnibeeApiBeanMerchantMemberDevice) {
	o.DeviceList = v
}

func (o MerchantMemberDeleteTotpDevicePost200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantMemberDeleteTotpDevicePost200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceList) {
		toSerialize["deviceList"] = o.DeviceList
	}
	return toSerialize, nil
}

type NullableMerchantMemberDeleteTotpDevicePost200ResponseData struct {
	value *MerchantMemberDeleteTotpDevicePost200ResponseData
	isSet bool
}

func (v NullableMerchantMemberDeleteTotpDevicePost200ResponseData) Get() *MerchantMemberDeleteTotpDevicePost200ResponseData {
	return v.value
}

func (v *NullableMerchantMemberDeleteTotpDevicePost200ResponseData) Set(val *MerchantMemberDeleteTotpDevicePost200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantMemberDeleteTotpDevicePost200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantMemberDeleteTotpDevicePost200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantMemberDeleteTotpDevicePost200ResponseData(val *MerchantMemberDeleteTotpDevicePost200ResponseData) *NullableMerchantMemberDeleteTotpDevicePost200ResponseData {
	return &NullableMerchantMemberDeleteTotpDevicePost200ResponseData{value: val, isSet: true}
}

func (v NullableMerchantMemberDeleteTotpDevicePost200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantMemberDeleteTotpDevicePost200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


