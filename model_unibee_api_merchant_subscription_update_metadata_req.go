/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202510192014
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantSubscriptionUpdateMetadataReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantSubscriptionUpdateMetadataReq{}

// UnibeeApiMerchantSubscriptionUpdateMetadataReq struct for UnibeeApiMerchantSubscriptionUpdateMetadataReq
type UnibeeApiMerchantSubscriptionUpdateMetadataReq struct {
	// Metadataï¼ŒMap
	Metadata *map[string]interface{} `json:"metadata,omitempty"`
	// SubscriptionId
	SubscriptionId *string `json:"subscriptionId,omitempty"`
}

// NewUnibeeApiMerchantSubscriptionUpdateMetadataReq instantiates a new UnibeeApiMerchantSubscriptionUpdateMetadataReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantSubscriptionUpdateMetadataReq() *UnibeeApiMerchantSubscriptionUpdateMetadataReq {
	this := UnibeeApiMerchantSubscriptionUpdateMetadataReq{}
	return &this
}

// NewUnibeeApiMerchantSubscriptionUpdateMetadataReqWithDefaults instantiates a new UnibeeApiMerchantSubscriptionUpdateMetadataReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantSubscriptionUpdateMetadataReqWithDefaults() *UnibeeApiMerchantSubscriptionUpdateMetadataReq {
	this := UnibeeApiMerchantSubscriptionUpdateMetadataReq{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateMetadataReq) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateMetadataReq) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateMetadataReq) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *UnibeeApiMerchantSubscriptionUpdateMetadataReq) SetMetadata(v map[string]interface{}) {
	o.Metadata = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateMetadataReq) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateMetadataReq) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateMetadataReq) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *UnibeeApiMerchantSubscriptionUpdateMetadataReq) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

func (o UnibeeApiMerchantSubscriptionUpdateMetadataReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantSubscriptionUpdateMetadataReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantSubscriptionUpdateMetadataReq struct {
	value *UnibeeApiMerchantSubscriptionUpdateMetadataReq
	isSet bool
}

func (v NullableUnibeeApiMerchantSubscriptionUpdateMetadataReq) Get() *UnibeeApiMerchantSubscriptionUpdateMetadataReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantSubscriptionUpdateMetadataReq) Set(val *UnibeeApiMerchantSubscriptionUpdateMetadataReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantSubscriptionUpdateMetadataReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantSubscriptionUpdateMetadataReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantSubscriptionUpdateMetadataReq(val *UnibeeApiMerchantSubscriptionUpdateMetadataReq) *NullableUnibeeApiMerchantSubscriptionUpdateMetadataReq {
	return &NullableUnibeeApiMerchantSubscriptionUpdateMetadataReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantSubscriptionUpdateMetadataReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantSubscriptionUpdateMetadataReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


