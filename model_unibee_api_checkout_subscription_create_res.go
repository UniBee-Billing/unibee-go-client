/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202504011414
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiCheckoutSubscriptionCreateRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiCheckoutSubscriptionCreateRes{}

// UnibeeApiCheckoutSubscriptionCreateRes struct for UnibeeApiCheckoutSubscriptionCreateRes
type UnibeeApiCheckoutSubscriptionCreateRes struct {
	Link *string `json:"link,omitempty"`
	OtherPendingCryptoSubscription *UnibeeApiBeanDetailSubscriptionDetail `json:"otherPendingCryptoSubscription,omitempty"`
	Paid *bool `json:"paid,omitempty"`
	Subscription *UnibeeApiBeanSubscription `json:"subscription,omitempty"`
	// token
	Token *string `json:"token,omitempty"`
	User *UnibeeApiBeanUserAccount `json:"user,omitempty"`
}

// NewUnibeeApiCheckoutSubscriptionCreateRes instantiates a new UnibeeApiCheckoutSubscriptionCreateRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiCheckoutSubscriptionCreateRes() *UnibeeApiCheckoutSubscriptionCreateRes {
	this := UnibeeApiCheckoutSubscriptionCreateRes{}
	return &this
}

// NewUnibeeApiCheckoutSubscriptionCreateResWithDefaults instantiates a new UnibeeApiCheckoutSubscriptionCreateRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiCheckoutSubscriptionCreateResWithDefaults() *UnibeeApiCheckoutSubscriptionCreateRes {
	this := UnibeeApiCheckoutSubscriptionCreateRes{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) SetLink(v string) {
	o.Link = &v
}

// GetOtherPendingCryptoSubscription returns the OtherPendingCryptoSubscription field value if set, zero value otherwise.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetOtherPendingCryptoSubscription() UnibeeApiBeanDetailSubscriptionDetail {
	if o == nil || IsNil(o.OtherPendingCryptoSubscription) {
		var ret UnibeeApiBeanDetailSubscriptionDetail
		return ret
	}
	return *o.OtherPendingCryptoSubscription
}

// GetOtherPendingCryptoSubscriptionOk returns a tuple with the OtherPendingCryptoSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetOtherPendingCryptoSubscriptionOk() (*UnibeeApiBeanDetailSubscriptionDetail, bool) {
	if o == nil || IsNil(o.OtherPendingCryptoSubscription) {
		return nil, false
	}
	return o.OtherPendingCryptoSubscription, true
}

// HasOtherPendingCryptoSubscription returns a boolean if a field has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) HasOtherPendingCryptoSubscription() bool {
	if o != nil && !IsNil(o.OtherPendingCryptoSubscription) {
		return true
	}

	return false
}

// SetOtherPendingCryptoSubscription gets a reference to the given UnibeeApiBeanDetailSubscriptionDetail and assigns it to the OtherPendingCryptoSubscription field.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) SetOtherPendingCryptoSubscription(v UnibeeApiBeanDetailSubscriptionDetail) {
	o.OtherPendingCryptoSubscription = &v
}

// GetPaid returns the Paid field value if set, zero value otherwise.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetPaid() bool {
	if o == nil || IsNil(o.Paid) {
		var ret bool
		return ret
	}
	return *o.Paid
}

// GetPaidOk returns a tuple with the Paid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetPaidOk() (*bool, bool) {
	if o == nil || IsNil(o.Paid) {
		return nil, false
	}
	return o.Paid, true
}

// HasPaid returns a boolean if a field has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) HasPaid() bool {
	if o != nil && !IsNil(o.Paid) {
		return true
	}

	return false
}

// SetPaid gets a reference to the given bool and assigns it to the Paid field.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) SetPaid(v bool) {
	o.Paid = &v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetSubscription() UnibeeApiBeanSubscription {
	if o == nil || IsNil(o.Subscription) {
		var ret UnibeeApiBeanSubscription
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetSubscriptionOk() (*UnibeeApiBeanSubscription, bool) {
	if o == nil || IsNil(o.Subscription) {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) HasSubscription() bool {
	if o != nil && !IsNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given UnibeeApiBeanSubscription and assigns it to the Subscription field.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) SetSubscription(v UnibeeApiBeanSubscription) {
	o.Subscription = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) SetToken(v string) {
	o.Token = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetUser() UnibeeApiBeanUserAccount {
	if o == nil || IsNil(o.User) {
		var ret UnibeeApiBeanUserAccount
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) GetUserOk() (*UnibeeApiBeanUserAccount, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given UnibeeApiBeanUserAccount and assigns it to the User field.
func (o *UnibeeApiCheckoutSubscriptionCreateRes) SetUser(v UnibeeApiBeanUserAccount) {
	o.User = &v
}

func (o UnibeeApiCheckoutSubscriptionCreateRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiCheckoutSubscriptionCreateRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.OtherPendingCryptoSubscription) {
		toSerialize["otherPendingCryptoSubscription"] = o.OtherPendingCryptoSubscription
	}
	if !IsNil(o.Paid) {
		toSerialize["paid"] = o.Paid
	}
	if !IsNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableUnibeeApiCheckoutSubscriptionCreateRes struct {
	value *UnibeeApiCheckoutSubscriptionCreateRes
	isSet bool
}

func (v NullableUnibeeApiCheckoutSubscriptionCreateRes) Get() *UnibeeApiCheckoutSubscriptionCreateRes {
	return v.value
}

func (v *NullableUnibeeApiCheckoutSubscriptionCreateRes) Set(val *UnibeeApiCheckoutSubscriptionCreateRes) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiCheckoutSubscriptionCreateRes) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiCheckoutSubscriptionCreateRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiCheckoutSubscriptionCreateRes(val *UnibeeApiCheckoutSubscriptionCreateRes) *NullableUnibeeApiCheckoutSubscriptionCreateRes {
	return &NullableUnibeeApiCheckoutSubscriptionCreateRes{value: val, isSet: true}
}

func (v NullableUnibeeApiCheckoutSubscriptionCreateRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiCheckoutSubscriptionCreateRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


