/*
OpenAPI UniBee

This is UniBee Api Server

API version: buildtime:202408060911 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantTaskEditTemplateRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantTaskEditTemplateRes{}

// UnibeeApiMerchantTaskEditTemplateRes struct for UnibeeApiMerchantTaskEditTemplateRes
type UnibeeApiMerchantTaskEditTemplateRes struct {
	Template *UnibeeApiBeanMerchantBatchExportTemplate `json:"template,omitempty"`
}

// NewUnibeeApiMerchantTaskEditTemplateRes instantiates a new UnibeeApiMerchantTaskEditTemplateRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantTaskEditTemplateRes() *UnibeeApiMerchantTaskEditTemplateRes {
	this := UnibeeApiMerchantTaskEditTemplateRes{}
	return &this
}

// NewUnibeeApiMerchantTaskEditTemplateResWithDefaults instantiates a new UnibeeApiMerchantTaskEditTemplateRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantTaskEditTemplateResWithDefaults() *UnibeeApiMerchantTaskEditTemplateRes {
	this := UnibeeApiMerchantTaskEditTemplateRes{}
	return &this
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *UnibeeApiMerchantTaskEditTemplateRes) GetTemplate() UnibeeApiBeanMerchantBatchExportTemplate {
	if o == nil || IsNil(o.Template) {
		var ret UnibeeApiBeanMerchantBatchExportTemplate
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskEditTemplateRes) GetTemplateOk() (*UnibeeApiBeanMerchantBatchExportTemplate, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *UnibeeApiMerchantTaskEditTemplateRes) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given UnibeeApiBeanMerchantBatchExportTemplate and assigns it to the Template field.
func (o *UnibeeApiMerchantTaskEditTemplateRes) SetTemplate(v UnibeeApiBeanMerchantBatchExportTemplate) {
	o.Template = &v
}

func (o UnibeeApiMerchantTaskEditTemplateRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantTaskEditTemplateRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantTaskEditTemplateRes struct {
	value *UnibeeApiMerchantTaskEditTemplateRes
	isSet bool
}

func (v NullableUnibeeApiMerchantTaskEditTemplateRes) Get() *UnibeeApiMerchantTaskEditTemplateRes {
	return v.value
}

func (v *NullableUnibeeApiMerchantTaskEditTemplateRes) Set(val *UnibeeApiMerchantTaskEditTemplateRes) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantTaskEditTemplateRes) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantTaskEditTemplateRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantTaskEditTemplateRes(val *UnibeeApiMerchantTaskEditTemplateRes) *NullableUnibeeApiMerchantTaskEditTemplateRes {
	return &NullableUnibeeApiMerchantTaskEditTemplateRes{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantTaskEditTemplateRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantTaskEditTemplateRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


