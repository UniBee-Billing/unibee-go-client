/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202506261206
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantSubscriptionUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantSubscriptionUpdateReq{}

// UnibeeApiMerchantSubscriptionUpdateReq struct for UnibeeApiMerchantSubscriptionUpdateReq
type UnibeeApiMerchantSubscriptionUpdateReq struct {
	// addonParams
	AddonParams []UnibeeApiBeanPlanAddonParam `json:"addonParams,omitempty"`
	// apply promo credit or not
	ApplyPromoCredit *bool `json:"applyPromoCredit,omitempty"`
	// apply promo credit amount, auto compute if not specified
	ApplyPromoCreditAmount *int32 `json:"applyPromoCreditAmount,omitempty"`
	// CancelUrl, back to cancelUrl if customer cancelled
	CancelUrl *string `json:"cancelUrl,omitempty"`
	// Currency to verify if provide
	ConfirmCurrency *string `json:"confirmCurrency,omitempty"`
	// TotalAmount to verify if provide
	ConfirmTotalAmount *int64 `json:"confirmTotalAmount,omitempty"`
	Discount *UnibeeApiBeanExternalDiscountParam `json:"discount,omitempty"`
	// DiscountCode
	DiscountCode *string `json:"discountCode,omitempty"`
	// Force Effect Immediate，1-Immediate，2-Next Period, this api will check upgrade|downgrade automatically
	EffectImmediate *int32 `json:"effectImmediate,omitempty"`
	// Id of gateway
	GatewayId *int32 `json:"gatewayId,omitempty"`
	// Gateway Payment Type
	GatewayPaymentType *string `json:"gatewayPaymentType,omitempty"`
	// ManualPayment
	ManualPayment *bool `json:"manualPayment,omitempty"`
	// Metadata，Map
	Metadata *map[string]interface{} `json:"metadata,omitempty"`
	// New PlanId
	NewPlanId int64 `json:"newPlanId"`
	ProductData *UnibeeApiBeanPlanProductParam `json:"productData,omitempty"`
	// The utc time to start Proration, default current time
	ProrationDate *int32 `json:"prorationDate,omitempty"`
	// Quantity
	Quantity int64 `json:"quantity"`
	// ReturnUrl, back to returnUrl if update completed
	ReturnUrl *string `json:"returnUrl,omitempty"`
	// SubscriptionId, either SubscriptionId or UserId needed, The only one active subscription of userId will update
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// TaxPercentage，1000 = 10%, override subscription taxPercentage if provide
	TaxPercentage *int32 `json:"taxPercentage,omitempty"`
	// UserId, either SubscriptionId or UserId needed, The only one active subscription will update if userId provide instead of subscriptionId
	UserId *int64 `json:"userId,omitempty"`
}

type _UnibeeApiMerchantSubscriptionUpdateReq UnibeeApiMerchantSubscriptionUpdateReq

// NewUnibeeApiMerchantSubscriptionUpdateReq instantiates a new UnibeeApiMerchantSubscriptionUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantSubscriptionUpdateReq(newPlanId int64, quantity int64) *UnibeeApiMerchantSubscriptionUpdateReq {
	this := UnibeeApiMerchantSubscriptionUpdateReq{}
	this.NewPlanId = newPlanId
	this.Quantity = quantity
	return &this
}

// NewUnibeeApiMerchantSubscriptionUpdateReqWithDefaults instantiates a new UnibeeApiMerchantSubscriptionUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantSubscriptionUpdateReqWithDefaults() *UnibeeApiMerchantSubscriptionUpdateReq {
	this := UnibeeApiMerchantSubscriptionUpdateReq{}
	return &this
}

// GetAddonParams returns the AddonParams field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetAddonParams() []UnibeeApiBeanPlanAddonParam {
	if o == nil || IsNil(o.AddonParams) {
		var ret []UnibeeApiBeanPlanAddonParam
		return ret
	}
	return o.AddonParams
}

// GetAddonParamsOk returns a tuple with the AddonParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetAddonParamsOk() ([]UnibeeApiBeanPlanAddonParam, bool) {
	if o == nil || IsNil(o.AddonParams) {
		return nil, false
	}
	return o.AddonParams, true
}

// HasAddonParams returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasAddonParams() bool {
	if o != nil && !IsNil(o.AddonParams) {
		return true
	}

	return false
}

// SetAddonParams gets a reference to the given []UnibeeApiBeanPlanAddonParam and assigns it to the AddonParams field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetAddonParams(v []UnibeeApiBeanPlanAddonParam) {
	o.AddonParams = v
}

// GetApplyPromoCredit returns the ApplyPromoCredit field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetApplyPromoCredit() bool {
	if o == nil || IsNil(o.ApplyPromoCredit) {
		var ret bool
		return ret
	}
	return *o.ApplyPromoCredit
}

// GetApplyPromoCreditOk returns a tuple with the ApplyPromoCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetApplyPromoCreditOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplyPromoCredit) {
		return nil, false
	}
	return o.ApplyPromoCredit, true
}

// HasApplyPromoCredit returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasApplyPromoCredit() bool {
	if o != nil && !IsNil(o.ApplyPromoCredit) {
		return true
	}

	return false
}

// SetApplyPromoCredit gets a reference to the given bool and assigns it to the ApplyPromoCredit field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetApplyPromoCredit(v bool) {
	o.ApplyPromoCredit = &v
}

// GetApplyPromoCreditAmount returns the ApplyPromoCreditAmount field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetApplyPromoCreditAmount() int32 {
	if o == nil || IsNil(o.ApplyPromoCreditAmount) {
		var ret int32
		return ret
	}
	return *o.ApplyPromoCreditAmount
}

// GetApplyPromoCreditAmountOk returns a tuple with the ApplyPromoCreditAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetApplyPromoCreditAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.ApplyPromoCreditAmount) {
		return nil, false
	}
	return o.ApplyPromoCreditAmount, true
}

// HasApplyPromoCreditAmount returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasApplyPromoCreditAmount() bool {
	if o != nil && !IsNil(o.ApplyPromoCreditAmount) {
		return true
	}

	return false
}

// SetApplyPromoCreditAmount gets a reference to the given int32 and assigns it to the ApplyPromoCreditAmount field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetApplyPromoCreditAmount(v int32) {
	o.ApplyPromoCreditAmount = &v
}

// GetCancelUrl returns the CancelUrl field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetCancelUrl() string {
	if o == nil || IsNil(o.CancelUrl) {
		var ret string
		return ret
	}
	return *o.CancelUrl
}

// GetCancelUrlOk returns a tuple with the CancelUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetCancelUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CancelUrl) {
		return nil, false
	}
	return o.CancelUrl, true
}

// HasCancelUrl returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasCancelUrl() bool {
	if o != nil && !IsNil(o.CancelUrl) {
		return true
	}

	return false
}

// SetCancelUrl gets a reference to the given string and assigns it to the CancelUrl field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetCancelUrl(v string) {
	o.CancelUrl = &v
}

// GetConfirmCurrency returns the ConfirmCurrency field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetConfirmCurrency() string {
	if o == nil || IsNil(o.ConfirmCurrency) {
		var ret string
		return ret
	}
	return *o.ConfirmCurrency
}

// GetConfirmCurrencyOk returns a tuple with the ConfirmCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetConfirmCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmCurrency) {
		return nil, false
	}
	return o.ConfirmCurrency, true
}

// HasConfirmCurrency returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasConfirmCurrency() bool {
	if o != nil && !IsNil(o.ConfirmCurrency) {
		return true
	}

	return false
}

// SetConfirmCurrency gets a reference to the given string and assigns it to the ConfirmCurrency field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetConfirmCurrency(v string) {
	o.ConfirmCurrency = &v
}

// GetConfirmTotalAmount returns the ConfirmTotalAmount field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetConfirmTotalAmount() int64 {
	if o == nil || IsNil(o.ConfirmTotalAmount) {
		var ret int64
		return ret
	}
	return *o.ConfirmTotalAmount
}

// GetConfirmTotalAmountOk returns a tuple with the ConfirmTotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetConfirmTotalAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.ConfirmTotalAmount) {
		return nil, false
	}
	return o.ConfirmTotalAmount, true
}

// HasConfirmTotalAmount returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasConfirmTotalAmount() bool {
	if o != nil && !IsNil(o.ConfirmTotalAmount) {
		return true
	}

	return false
}

// SetConfirmTotalAmount gets a reference to the given int64 and assigns it to the ConfirmTotalAmount field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetConfirmTotalAmount(v int64) {
	o.ConfirmTotalAmount = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetDiscount() UnibeeApiBeanExternalDiscountParam {
	if o == nil || IsNil(o.Discount) {
		var ret UnibeeApiBeanExternalDiscountParam
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetDiscountOk() (*UnibeeApiBeanExternalDiscountParam, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given UnibeeApiBeanExternalDiscountParam and assigns it to the Discount field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetDiscount(v UnibeeApiBeanExternalDiscountParam) {
	o.Discount = &v
}

// GetDiscountCode returns the DiscountCode field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetDiscountCode() string {
	if o == nil || IsNil(o.DiscountCode) {
		var ret string
		return ret
	}
	return *o.DiscountCode
}

// GetDiscountCodeOk returns a tuple with the DiscountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetDiscountCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountCode) {
		return nil, false
	}
	return o.DiscountCode, true
}

// HasDiscountCode returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasDiscountCode() bool {
	if o != nil && !IsNil(o.DiscountCode) {
		return true
	}

	return false
}

// SetDiscountCode gets a reference to the given string and assigns it to the DiscountCode field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetDiscountCode(v string) {
	o.DiscountCode = &v
}

// GetEffectImmediate returns the EffectImmediate field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetEffectImmediate() int32 {
	if o == nil || IsNil(o.EffectImmediate) {
		var ret int32
		return ret
	}
	return *o.EffectImmediate
}

// GetEffectImmediateOk returns a tuple with the EffectImmediate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetEffectImmediateOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectImmediate) {
		return nil, false
	}
	return o.EffectImmediate, true
}

// HasEffectImmediate returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasEffectImmediate() bool {
	if o != nil && !IsNil(o.EffectImmediate) {
		return true
	}

	return false
}

// SetEffectImmediate gets a reference to the given int32 and assigns it to the EffectImmediate field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetEffectImmediate(v int32) {
	o.EffectImmediate = &v
}

// GetGatewayId returns the GatewayId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetGatewayId() int32 {
	if o == nil || IsNil(o.GatewayId) {
		var ret int32
		return ret
	}
	return *o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetGatewayIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GatewayId) {
		return nil, false
	}
	return o.GatewayId, true
}

// HasGatewayId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasGatewayId() bool {
	if o != nil && !IsNil(o.GatewayId) {
		return true
	}

	return false
}

// SetGatewayId gets a reference to the given int32 and assigns it to the GatewayId field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetGatewayId(v int32) {
	o.GatewayId = &v
}

// GetGatewayPaymentType returns the GatewayPaymentType field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetGatewayPaymentType() string {
	if o == nil || IsNil(o.GatewayPaymentType) {
		var ret string
		return ret
	}
	return *o.GatewayPaymentType
}

// GetGatewayPaymentTypeOk returns a tuple with the GatewayPaymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetGatewayPaymentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayPaymentType) {
		return nil, false
	}
	return o.GatewayPaymentType, true
}

// HasGatewayPaymentType returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasGatewayPaymentType() bool {
	if o != nil && !IsNil(o.GatewayPaymentType) {
		return true
	}

	return false
}

// SetGatewayPaymentType gets a reference to the given string and assigns it to the GatewayPaymentType field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetGatewayPaymentType(v string) {
	o.GatewayPaymentType = &v
}

// GetManualPayment returns the ManualPayment field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetManualPayment() bool {
	if o == nil || IsNil(o.ManualPayment) {
		var ret bool
		return ret
	}
	return *o.ManualPayment
}

// GetManualPaymentOk returns a tuple with the ManualPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetManualPaymentOk() (*bool, bool) {
	if o == nil || IsNil(o.ManualPayment) {
		return nil, false
	}
	return o.ManualPayment, true
}

// HasManualPayment returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasManualPayment() bool {
	if o != nil && !IsNil(o.ManualPayment) {
		return true
	}

	return false
}

// SetManualPayment gets a reference to the given bool and assigns it to the ManualPayment field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetManualPayment(v bool) {
	o.ManualPayment = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetMetadata(v map[string]interface{}) {
	o.Metadata = &v
}

// GetNewPlanId returns the NewPlanId field value
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetNewPlanId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NewPlanId
}

// GetNewPlanIdOk returns a tuple with the NewPlanId field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetNewPlanIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewPlanId, true
}

// SetNewPlanId sets field value
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetNewPlanId(v int64) {
	o.NewPlanId = v
}

// GetProductData returns the ProductData field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetProductData() UnibeeApiBeanPlanProductParam {
	if o == nil || IsNil(o.ProductData) {
		var ret UnibeeApiBeanPlanProductParam
		return ret
	}
	return *o.ProductData
}

// GetProductDataOk returns a tuple with the ProductData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetProductDataOk() (*UnibeeApiBeanPlanProductParam, bool) {
	if o == nil || IsNil(o.ProductData) {
		return nil, false
	}
	return o.ProductData, true
}

// HasProductData returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasProductData() bool {
	if o != nil && !IsNil(o.ProductData) {
		return true
	}

	return false
}

// SetProductData gets a reference to the given UnibeeApiBeanPlanProductParam and assigns it to the ProductData field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetProductData(v UnibeeApiBeanPlanProductParam) {
	o.ProductData = &v
}

// GetProrationDate returns the ProrationDate field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetProrationDate() int32 {
	if o == nil || IsNil(o.ProrationDate) {
		var ret int32
		return ret
	}
	return *o.ProrationDate
}

// GetProrationDateOk returns a tuple with the ProrationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetProrationDateOk() (*int32, bool) {
	if o == nil || IsNil(o.ProrationDate) {
		return nil, false
	}
	return o.ProrationDate, true
}

// HasProrationDate returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasProrationDate() bool {
	if o != nil && !IsNil(o.ProrationDate) {
		return true
	}

	return false
}

// SetProrationDate gets a reference to the given int32 and assigns it to the ProrationDate field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetProrationDate(v int32) {
	o.ProrationDate = &v
}

// GetQuantity returns the Quantity field value
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetQuantity() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetQuantityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetQuantity(v int64) {
	o.Quantity = v
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetReturnUrl() string {
	if o == nil || IsNil(o.ReturnUrl) {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnUrl) {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasReturnUrl() bool {
	if o != nil && !IsNil(o.ReturnUrl) {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetTaxPercentage returns the TaxPercentage field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetTaxPercentage() int32 {
	if o == nil || IsNil(o.TaxPercentage) {
		var ret int32
		return ret
	}
	return *o.TaxPercentage
}

// GetTaxPercentageOk returns a tuple with the TaxPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetTaxPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxPercentage) {
		return nil, false
	}
	return o.TaxPercentage, true
}

// HasTaxPercentage returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasTaxPercentage() bool {
	if o != nil && !IsNil(o.TaxPercentage) {
		return true
	}

	return false
}

// SetTaxPercentage gets a reference to the given int32 and assigns it to the TaxPercentage field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetTaxPercentage(v int32) {
	o.TaxPercentage = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *UnibeeApiMerchantSubscriptionUpdateReq) SetUserId(v int64) {
	o.UserId = &v
}

func (o UnibeeApiMerchantSubscriptionUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantSubscriptionUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddonParams) {
		toSerialize["addonParams"] = o.AddonParams
	}
	if !IsNil(o.ApplyPromoCredit) {
		toSerialize["applyPromoCredit"] = o.ApplyPromoCredit
	}
	if !IsNil(o.ApplyPromoCreditAmount) {
		toSerialize["applyPromoCreditAmount"] = o.ApplyPromoCreditAmount
	}
	if !IsNil(o.CancelUrl) {
		toSerialize["cancelUrl"] = o.CancelUrl
	}
	if !IsNil(o.ConfirmCurrency) {
		toSerialize["confirmCurrency"] = o.ConfirmCurrency
	}
	if !IsNil(o.ConfirmTotalAmount) {
		toSerialize["confirmTotalAmount"] = o.ConfirmTotalAmount
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.DiscountCode) {
		toSerialize["discountCode"] = o.DiscountCode
	}
	if !IsNil(o.EffectImmediate) {
		toSerialize["effectImmediate"] = o.EffectImmediate
	}
	if !IsNil(o.GatewayId) {
		toSerialize["gatewayId"] = o.GatewayId
	}
	if !IsNil(o.GatewayPaymentType) {
		toSerialize["gatewayPaymentType"] = o.GatewayPaymentType
	}
	if !IsNil(o.ManualPayment) {
		toSerialize["manualPayment"] = o.ManualPayment
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["newPlanId"] = o.NewPlanId
	if !IsNil(o.ProductData) {
		toSerialize["productData"] = o.ProductData
	}
	if !IsNil(o.ProrationDate) {
		toSerialize["prorationDate"] = o.ProrationDate
	}
	toSerialize["quantity"] = o.Quantity
	if !IsNil(o.ReturnUrl) {
		toSerialize["returnUrl"] = o.ReturnUrl
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.TaxPercentage) {
		toSerialize["taxPercentage"] = o.TaxPercentage
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

func (o *UnibeeApiMerchantSubscriptionUpdateReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"newPlanId",
		"quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantSubscriptionUpdateReq := _UnibeeApiMerchantSubscriptionUpdateReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUnibeeApiMerchantSubscriptionUpdateReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantSubscriptionUpdateReq(varUnibeeApiMerchantSubscriptionUpdateReq)

	return err
}

type NullableUnibeeApiMerchantSubscriptionUpdateReq struct {
	value *UnibeeApiMerchantSubscriptionUpdateReq
	isSet bool
}

func (v NullableUnibeeApiMerchantSubscriptionUpdateReq) Get() *UnibeeApiMerchantSubscriptionUpdateReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantSubscriptionUpdateReq) Set(val *UnibeeApiMerchantSubscriptionUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantSubscriptionUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantSubscriptionUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantSubscriptionUpdateReq(val *UnibeeApiMerchantSubscriptionUpdateReq) *NullableUnibeeApiMerchantSubscriptionUpdateReq {
	return &NullableUnibeeApiMerchantSubscriptionUpdateReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantSubscriptionUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantSubscriptionUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


