/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508041414
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq{}

// UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq Preview for subscription onetime addon purchase
type UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq struct {
	// AddonId, id of one-time addon, the new payment will created base on the addon's amount'
	AddonId int64 `json:"addonId"`
	// apply promo credit or not
	ApplyPromoCredit *bool `json:"applyPromoCredit,omitempty"`
	// apply promo credit amount, auto compute if not specified
	ApplyPromoCreditAmount *int32 `json:"applyPromoCreditAmount,omitempty"`
	// Amount of discount
	DiscountAmount *int32 `json:"discountAmount,omitempty"`
	// DiscountCode
	DiscountCode *string `json:"discountCode,omitempty"`
	// Percentage of discount, 100=1%, ignore if discountAmount specified
	DiscountPercentage *int32 `json:"discountPercentage,omitempty"`
	// GatewayId, use user's gateway if not provide
	GatewayId *int32 `json:"gatewayId,omitempty"`
	// Gateway Payment Type
	GatewayPaymentType *string `json:"gatewayPaymentType,omitempty"`
	// Metadata，custom data
	Metadata *map[string]interface{} `json:"metadata,omitempty"`
	// Quantity, quantity of the new payment which one-time addon purchased
	Quantity int64 `json:"quantity"`
	// SubscriptionId, id of subscription which addon will attached, either SubscriptionId or UserId needed, The only one active subscription of userId will attach the addon
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// TaxPercentage，1000 = 10%, default user's taxPercentage if not specified
	TaxPercentage *int32 `json:"taxPercentage,omitempty"`
	// UserId, either SubscriptionId or UserId needed, The only one active subscription will update if userId provide instead of subscriptionId
	UserId *int64 `json:"userId,omitempty"`
}

type _UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq

// NewUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq instantiates a new UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq(addonId int64, quantity int64) *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq {
	this := UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq{}
	this.AddonId = addonId
	this.Quantity = quantity
	return &this
}

// NewUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReqWithDefaults instantiates a new UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReqWithDefaults() *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq {
	this := UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq{}
	return &this
}

// GetAddonId returns the AddonId field value
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetAddonId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AddonId
}

// GetAddonIdOk returns a tuple with the AddonId field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetAddonIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddonId, true
}

// SetAddonId sets field value
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetAddonId(v int64) {
	o.AddonId = v
}

// GetApplyPromoCredit returns the ApplyPromoCredit field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetApplyPromoCredit() bool {
	if o == nil || IsNil(o.ApplyPromoCredit) {
		var ret bool
		return ret
	}
	return *o.ApplyPromoCredit
}

// GetApplyPromoCreditOk returns a tuple with the ApplyPromoCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetApplyPromoCreditOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplyPromoCredit) {
		return nil, false
	}
	return o.ApplyPromoCredit, true
}

// HasApplyPromoCredit returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) HasApplyPromoCredit() bool {
	if o != nil && !IsNil(o.ApplyPromoCredit) {
		return true
	}

	return false
}

// SetApplyPromoCredit gets a reference to the given bool and assigns it to the ApplyPromoCredit field.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetApplyPromoCredit(v bool) {
	o.ApplyPromoCredit = &v
}

// GetApplyPromoCreditAmount returns the ApplyPromoCreditAmount field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetApplyPromoCreditAmount() int32 {
	if o == nil || IsNil(o.ApplyPromoCreditAmount) {
		var ret int32
		return ret
	}
	return *o.ApplyPromoCreditAmount
}

// GetApplyPromoCreditAmountOk returns a tuple with the ApplyPromoCreditAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetApplyPromoCreditAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.ApplyPromoCreditAmount) {
		return nil, false
	}
	return o.ApplyPromoCreditAmount, true
}

// HasApplyPromoCreditAmount returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) HasApplyPromoCreditAmount() bool {
	if o != nil && !IsNil(o.ApplyPromoCreditAmount) {
		return true
	}

	return false
}

// SetApplyPromoCreditAmount gets a reference to the given int32 and assigns it to the ApplyPromoCreditAmount field.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetApplyPromoCreditAmount(v int32) {
	o.ApplyPromoCreditAmount = &v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetDiscountAmount() int32 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret int32
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetDiscountAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given int32 and assigns it to the DiscountAmount field.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetDiscountAmount(v int32) {
	o.DiscountAmount = &v
}

// GetDiscountCode returns the DiscountCode field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetDiscountCode() string {
	if o == nil || IsNil(o.DiscountCode) {
		var ret string
		return ret
	}
	return *o.DiscountCode
}

// GetDiscountCodeOk returns a tuple with the DiscountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetDiscountCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountCode) {
		return nil, false
	}
	return o.DiscountCode, true
}

// HasDiscountCode returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) HasDiscountCode() bool {
	if o != nil && !IsNil(o.DiscountCode) {
		return true
	}

	return false
}

// SetDiscountCode gets a reference to the given string and assigns it to the DiscountCode field.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetDiscountCode(v string) {
	o.DiscountCode = &v
}

// GetDiscountPercentage returns the DiscountPercentage field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetDiscountPercentage() int32 {
	if o == nil || IsNil(o.DiscountPercentage) {
		var ret int32
		return ret
	}
	return *o.DiscountPercentage
}

// GetDiscountPercentageOk returns a tuple with the DiscountPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetDiscountPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.DiscountPercentage) {
		return nil, false
	}
	return o.DiscountPercentage, true
}

// HasDiscountPercentage returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) HasDiscountPercentage() bool {
	if o != nil && !IsNil(o.DiscountPercentage) {
		return true
	}

	return false
}

// SetDiscountPercentage gets a reference to the given int32 and assigns it to the DiscountPercentage field.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetDiscountPercentage(v int32) {
	o.DiscountPercentage = &v
}

// GetGatewayId returns the GatewayId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetGatewayId() int32 {
	if o == nil || IsNil(o.GatewayId) {
		var ret int32
		return ret
	}
	return *o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetGatewayIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GatewayId) {
		return nil, false
	}
	return o.GatewayId, true
}

// HasGatewayId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) HasGatewayId() bool {
	if o != nil && !IsNil(o.GatewayId) {
		return true
	}

	return false
}

// SetGatewayId gets a reference to the given int32 and assigns it to the GatewayId field.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetGatewayId(v int32) {
	o.GatewayId = &v
}

// GetGatewayPaymentType returns the GatewayPaymentType field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetGatewayPaymentType() string {
	if o == nil || IsNil(o.GatewayPaymentType) {
		var ret string
		return ret
	}
	return *o.GatewayPaymentType
}

// GetGatewayPaymentTypeOk returns a tuple with the GatewayPaymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetGatewayPaymentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayPaymentType) {
		return nil, false
	}
	return o.GatewayPaymentType, true
}

// HasGatewayPaymentType returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) HasGatewayPaymentType() bool {
	if o != nil && !IsNil(o.GatewayPaymentType) {
		return true
	}

	return false
}

// SetGatewayPaymentType gets a reference to the given string and assigns it to the GatewayPaymentType field.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetGatewayPaymentType(v string) {
	o.GatewayPaymentType = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetMetadata(v map[string]interface{}) {
	o.Metadata = &v
}

// GetQuantity returns the Quantity field value
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetQuantity() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetQuantityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetQuantity(v int64) {
	o.Quantity = v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetTaxPercentage returns the TaxPercentage field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetTaxPercentage() int32 {
	if o == nil || IsNil(o.TaxPercentage) {
		var ret int32
		return ret
	}
	return *o.TaxPercentage
}

// GetTaxPercentageOk returns a tuple with the TaxPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetTaxPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxPercentage) {
		return nil, false
	}
	return o.TaxPercentage, true
}

// HasTaxPercentage returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) HasTaxPercentage() bool {
	if o != nil && !IsNil(o.TaxPercentage) {
		return true
	}

	return false
}

// SetTaxPercentage gets a reference to the given int32 and assigns it to the TaxPercentage field.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetTaxPercentage(v int32) {
	o.TaxPercentage = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) SetUserId(v int64) {
	o.UserId = &v
}

func (o UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["addonId"] = o.AddonId
	if !IsNil(o.ApplyPromoCredit) {
		toSerialize["applyPromoCredit"] = o.ApplyPromoCredit
	}
	if !IsNil(o.ApplyPromoCreditAmount) {
		toSerialize["applyPromoCreditAmount"] = o.ApplyPromoCreditAmount
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discountAmount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountCode) {
		toSerialize["discountCode"] = o.DiscountCode
	}
	if !IsNil(o.DiscountPercentage) {
		toSerialize["discountPercentage"] = o.DiscountPercentage
	}
	if !IsNil(o.GatewayId) {
		toSerialize["gatewayId"] = o.GatewayId
	}
	if !IsNil(o.GatewayPaymentType) {
		toSerialize["gatewayPaymentType"] = o.GatewayPaymentType
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["quantity"] = o.Quantity
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.TaxPercentage) {
		toSerialize["taxPercentage"] = o.TaxPercentage
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

func (o *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addonId",
		"quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq := _UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq(varUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq)

	return err
}

type NullableUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq struct {
	value *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq
	isSet bool
}

func (v NullableUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) Get() *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) Set(val *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq(val *UnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) *NullableUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq {
	return &NullableUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantSubscriptionOnetimeAddonPreviewReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


