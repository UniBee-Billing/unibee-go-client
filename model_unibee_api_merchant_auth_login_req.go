/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508050652
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantAuthLoginReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantAuthLoginReq{}

// UnibeeApiMerchantAuthLoginReq Password login
type UnibeeApiMerchantAuthLoginReq struct {
	// The merchant member email address
	Email string `json:"email"`
	// The merchant member password
	Password string `json:"password"`
	// The totp code
	TotpCode *string `json:"totpCode,omitempty"`
}

type _UnibeeApiMerchantAuthLoginReq UnibeeApiMerchantAuthLoginReq

// NewUnibeeApiMerchantAuthLoginReq instantiates a new UnibeeApiMerchantAuthLoginReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantAuthLoginReq(email string, password string) *UnibeeApiMerchantAuthLoginReq {
	this := UnibeeApiMerchantAuthLoginReq{}
	this.Email = email
	this.Password = password
	return &this
}

// NewUnibeeApiMerchantAuthLoginReqWithDefaults instantiates a new UnibeeApiMerchantAuthLoginReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantAuthLoginReqWithDefaults() *UnibeeApiMerchantAuthLoginReq {
	this := UnibeeApiMerchantAuthLoginReq{}
	return &this
}

// GetEmail returns the Email field value
func (o *UnibeeApiMerchantAuthLoginReq) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthLoginReq) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UnibeeApiMerchantAuthLoginReq) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *UnibeeApiMerchantAuthLoginReq) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthLoginReq) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *UnibeeApiMerchantAuthLoginReq) SetPassword(v string) {
	o.Password = v
}

// GetTotpCode returns the TotpCode field value if set, zero value otherwise.
func (o *UnibeeApiMerchantAuthLoginReq) GetTotpCode() string {
	if o == nil || IsNil(o.TotpCode) {
		var ret string
		return ret
	}
	return *o.TotpCode
}

// GetTotpCodeOk returns a tuple with the TotpCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantAuthLoginReq) GetTotpCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TotpCode) {
		return nil, false
	}
	return o.TotpCode, true
}

// HasTotpCode returns a boolean if a field has been set.
func (o *UnibeeApiMerchantAuthLoginReq) HasTotpCode() bool {
	if o != nil && !IsNil(o.TotpCode) {
		return true
	}

	return false
}

// SetTotpCode gets a reference to the given string and assigns it to the TotpCode field.
func (o *UnibeeApiMerchantAuthLoginReq) SetTotpCode(v string) {
	o.TotpCode = &v
}

func (o UnibeeApiMerchantAuthLoginReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantAuthLoginReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["password"] = o.Password
	if !IsNil(o.TotpCode) {
		toSerialize["totpCode"] = o.TotpCode
	}
	return toSerialize, nil
}

func (o *UnibeeApiMerchantAuthLoginReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantAuthLoginReq := _UnibeeApiMerchantAuthLoginReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varUnibeeApiMerchantAuthLoginReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantAuthLoginReq(varUnibeeApiMerchantAuthLoginReq)

	return err
}

type NullableUnibeeApiMerchantAuthLoginReq struct {
	value *UnibeeApiMerchantAuthLoginReq
	isSet bool
}

func (v NullableUnibeeApiMerchantAuthLoginReq) Get() *UnibeeApiMerchantAuthLoginReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantAuthLoginReq) Set(val *UnibeeApiMerchantAuthLoginReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantAuthLoginReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantAuthLoginReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantAuthLoginReq(val *UnibeeApiMerchantAuthLoginReq) *NullableUnibeeApiMerchantAuthLoginReq {
	return &NullableUnibeeApiMerchantAuthLoginReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantAuthLoginReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantAuthLoginReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


