/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508150435
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanMerchantMemberDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanMerchantMemberDevice{}

// UnibeeApiBeanMerchantMemberDevice struct for UnibeeApiBeanMerchantMemberDevice
type UnibeeApiBeanMerchantMemberDevice struct {
	// Is CurrentDevice
	CurrentDevice *bool `json:"currentDevice,omitempty"`
	// Identity
	Identity *string `json:"identity,omitempty"`
	// IP Address
	IpAddress *string `json:"ipAddress,omitempty"`
	// Last Active Time
	LastActiveTime *int64 `json:"lastActiveTime,omitempty"`
	// Last Login Time
	LastLoginTime *int64 `json:"lastLoginTime,omitempty"`
	// Last Totp Verification Time
	LastTotpVerificationTime *int64 `json:"lastTotpVerificationTime,omitempty"`
	// Name
	Name *string `json:"name,omitempty"`
	// true-Active, false-Offline
	Status *bool `json:"status,omitempty"`
}

// NewUnibeeApiBeanMerchantMemberDevice instantiates a new UnibeeApiBeanMerchantMemberDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanMerchantMemberDevice() *UnibeeApiBeanMerchantMemberDevice {
	this := UnibeeApiBeanMerchantMemberDevice{}
	return &this
}

// NewUnibeeApiBeanMerchantMemberDeviceWithDefaults instantiates a new UnibeeApiBeanMerchantMemberDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanMerchantMemberDeviceWithDefaults() *UnibeeApiBeanMerchantMemberDevice {
	this := UnibeeApiBeanMerchantMemberDevice{}
	return &this
}

// GetCurrentDevice returns the CurrentDevice field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMemberDevice) GetCurrentDevice() bool {
	if o == nil || IsNil(o.CurrentDevice) {
		var ret bool
		return ret
	}
	return *o.CurrentDevice
}

// GetCurrentDeviceOk returns a tuple with the CurrentDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) GetCurrentDeviceOk() (*bool, bool) {
	if o == nil || IsNil(o.CurrentDevice) {
		return nil, false
	}
	return o.CurrentDevice, true
}

// HasCurrentDevice returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) HasCurrentDevice() bool {
	if o != nil && !IsNil(o.CurrentDevice) {
		return true
	}

	return false
}

// SetCurrentDevice gets a reference to the given bool and assigns it to the CurrentDevice field.
func (o *UnibeeApiBeanMerchantMemberDevice) SetCurrentDevice(v bool) {
	o.CurrentDevice = &v
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMemberDevice) GetIdentity() string {
	if o == nil || IsNil(o.Identity) {
		var ret string
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) GetIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.Identity) {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) HasIdentity() bool {
	if o != nil && !IsNil(o.Identity) {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given string and assigns it to the Identity field.
func (o *UnibeeApiBeanMerchantMemberDevice) SetIdentity(v string) {
	o.Identity = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMemberDevice) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *UnibeeApiBeanMerchantMemberDevice) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetLastActiveTime returns the LastActiveTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMemberDevice) GetLastActiveTime() int64 {
	if o == nil || IsNil(o.LastActiveTime) {
		var ret int64
		return ret
	}
	return *o.LastActiveTime
}

// GetLastActiveTimeOk returns a tuple with the LastActiveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) GetLastActiveTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastActiveTime) {
		return nil, false
	}
	return o.LastActiveTime, true
}

// HasLastActiveTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) HasLastActiveTime() bool {
	if o != nil && !IsNil(o.LastActiveTime) {
		return true
	}

	return false
}

// SetLastActiveTime gets a reference to the given int64 and assigns it to the LastActiveTime field.
func (o *UnibeeApiBeanMerchantMemberDevice) SetLastActiveTime(v int64) {
	o.LastActiveTime = &v
}

// GetLastLoginTime returns the LastLoginTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMemberDevice) GetLastLoginTime() int64 {
	if o == nil || IsNil(o.LastLoginTime) {
		var ret int64
		return ret
	}
	return *o.LastLoginTime
}

// GetLastLoginTimeOk returns a tuple with the LastLoginTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) GetLastLoginTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastLoginTime) {
		return nil, false
	}
	return o.LastLoginTime, true
}

// HasLastLoginTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) HasLastLoginTime() bool {
	if o != nil && !IsNil(o.LastLoginTime) {
		return true
	}

	return false
}

// SetLastLoginTime gets a reference to the given int64 and assigns it to the LastLoginTime field.
func (o *UnibeeApiBeanMerchantMemberDevice) SetLastLoginTime(v int64) {
	o.LastLoginTime = &v
}

// GetLastTotpVerificationTime returns the LastTotpVerificationTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMemberDevice) GetLastTotpVerificationTime() int64 {
	if o == nil || IsNil(o.LastTotpVerificationTime) {
		var ret int64
		return ret
	}
	return *o.LastTotpVerificationTime
}

// GetLastTotpVerificationTimeOk returns a tuple with the LastTotpVerificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) GetLastTotpVerificationTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastTotpVerificationTime) {
		return nil, false
	}
	return o.LastTotpVerificationTime, true
}

// HasLastTotpVerificationTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) HasLastTotpVerificationTime() bool {
	if o != nil && !IsNil(o.LastTotpVerificationTime) {
		return true
	}

	return false
}

// SetLastTotpVerificationTime gets a reference to the given int64 and assigns it to the LastTotpVerificationTime field.
func (o *UnibeeApiBeanMerchantMemberDevice) SetLastTotpVerificationTime(v int64) {
	o.LastTotpVerificationTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMemberDevice) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UnibeeApiBeanMerchantMemberDevice) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantMemberDevice) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantMemberDevice) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *UnibeeApiBeanMerchantMemberDevice) SetStatus(v bool) {
	o.Status = &v
}

func (o UnibeeApiBeanMerchantMemberDevice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanMerchantMemberDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentDevice) {
		toSerialize["currentDevice"] = o.CurrentDevice
	}
	if !IsNil(o.Identity) {
		toSerialize["identity"] = o.Identity
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.LastActiveTime) {
		toSerialize["lastActiveTime"] = o.LastActiveTime
	}
	if !IsNil(o.LastLoginTime) {
		toSerialize["lastLoginTime"] = o.LastLoginTime
	}
	if !IsNil(o.LastTotpVerificationTime) {
		toSerialize["lastTotpVerificationTime"] = o.LastTotpVerificationTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanMerchantMemberDevice struct {
	value *UnibeeApiBeanMerchantMemberDevice
	isSet bool
}

func (v NullableUnibeeApiBeanMerchantMemberDevice) Get() *UnibeeApiBeanMerchantMemberDevice {
	return v.value
}

func (v *NullableUnibeeApiBeanMerchantMemberDevice) Set(val *UnibeeApiBeanMerchantMemberDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanMerchantMemberDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanMerchantMemberDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanMerchantMemberDevice(val *UnibeeApiBeanMerchantMemberDevice) *NullableUnibeeApiBeanMerchantMemberDevice {
	return &NullableUnibeeApiBeanMerchantMemberDevice{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanMerchantMemberDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanMerchantMemberDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


