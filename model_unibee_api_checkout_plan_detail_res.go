/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509191247
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiCheckoutPlanDetailRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiCheckoutPlanDetailRes{}

// UnibeeApiCheckoutPlanDetailRes struct for UnibeeApiCheckoutPlanDetailRes
type UnibeeApiCheckoutPlanDetailRes struct {
	Merchant *UnibeeApiBeanMerchant `json:"merchant,omitempty"`
	Plan *UnibeeApiBeanDetailPlanDetail `json:"plan,omitempty"`
}

// NewUnibeeApiCheckoutPlanDetailRes instantiates a new UnibeeApiCheckoutPlanDetailRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiCheckoutPlanDetailRes() *UnibeeApiCheckoutPlanDetailRes {
	this := UnibeeApiCheckoutPlanDetailRes{}
	return &this
}

// NewUnibeeApiCheckoutPlanDetailResWithDefaults instantiates a new UnibeeApiCheckoutPlanDetailRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiCheckoutPlanDetailResWithDefaults() *UnibeeApiCheckoutPlanDetailRes {
	this := UnibeeApiCheckoutPlanDetailRes{}
	return &this
}

// GetMerchant returns the Merchant field value if set, zero value otherwise.
func (o *UnibeeApiCheckoutPlanDetailRes) GetMerchant() UnibeeApiBeanMerchant {
	if o == nil || IsNil(o.Merchant) {
		var ret UnibeeApiBeanMerchant
		return ret
	}
	return *o.Merchant
}

// GetMerchantOk returns a tuple with the Merchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiCheckoutPlanDetailRes) GetMerchantOk() (*UnibeeApiBeanMerchant, bool) {
	if o == nil || IsNil(o.Merchant) {
		return nil, false
	}
	return o.Merchant, true
}

// HasMerchant returns a boolean if a field has been set.
func (o *UnibeeApiCheckoutPlanDetailRes) HasMerchant() bool {
	if o != nil && !IsNil(o.Merchant) {
		return true
	}

	return false
}

// SetMerchant gets a reference to the given UnibeeApiBeanMerchant and assigns it to the Merchant field.
func (o *UnibeeApiCheckoutPlanDetailRes) SetMerchant(v UnibeeApiBeanMerchant) {
	o.Merchant = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *UnibeeApiCheckoutPlanDetailRes) GetPlan() UnibeeApiBeanDetailPlanDetail {
	if o == nil || IsNil(o.Plan) {
		var ret UnibeeApiBeanDetailPlanDetail
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiCheckoutPlanDetailRes) GetPlanOk() (*UnibeeApiBeanDetailPlanDetail, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *UnibeeApiCheckoutPlanDetailRes) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given UnibeeApiBeanDetailPlanDetail and assigns it to the Plan field.
func (o *UnibeeApiCheckoutPlanDetailRes) SetPlan(v UnibeeApiBeanDetailPlanDetail) {
	o.Plan = &v
}

func (o UnibeeApiCheckoutPlanDetailRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiCheckoutPlanDetailRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Merchant) {
		toSerialize["merchant"] = o.Merchant
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	return toSerialize, nil
}

type NullableUnibeeApiCheckoutPlanDetailRes struct {
	value *UnibeeApiCheckoutPlanDetailRes
	isSet bool
}

func (v NullableUnibeeApiCheckoutPlanDetailRes) Get() *UnibeeApiCheckoutPlanDetailRes {
	return v.value
}

func (v *NullableUnibeeApiCheckoutPlanDetailRes) Set(val *UnibeeApiCheckoutPlanDetailRes) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiCheckoutPlanDetailRes) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiCheckoutPlanDetailRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiCheckoutPlanDetailRes(val *UnibeeApiCheckoutPlanDetailRes) *NullableUnibeeApiCheckoutPlanDetailRes {
	return &NullableUnibeeApiCheckoutPlanDetailRes{value: val, isSet: true}
}

func (v NullableUnibeeApiCheckoutPlanDetailRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiCheckoutPlanDetailRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


