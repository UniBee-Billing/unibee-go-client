/*
OpenAPI UniBee

This is UniBee Api Server

API version: buildtime:202407080801 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantTaskNewReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantTaskNewReq{}

// UnibeeApiMerchantTaskNewReq struct for UnibeeApiMerchantTaskNewReq
type UnibeeApiMerchantTaskNewReq struct {
	// Payload
	Payload *map[string]string `json:"payload,omitempty"`
	// SkipColumnIndexes, the column will be skipped in the export file if its index specified, start from 0
	SkipColumnIndexes []int32 `json:"skipColumnIndexes,omitempty"`
	// Task,InvoiceExport|UserExport|SubscriptionExport|TransactionExport|DiscountExport|UserDiscountExport
	Task *string `json:"task,omitempty"`
}

// NewUnibeeApiMerchantTaskNewReq instantiates a new UnibeeApiMerchantTaskNewReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantTaskNewReq() *UnibeeApiMerchantTaskNewReq {
	this := UnibeeApiMerchantTaskNewReq{}
	return &this
}

// NewUnibeeApiMerchantTaskNewReqWithDefaults instantiates a new UnibeeApiMerchantTaskNewReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantTaskNewReqWithDefaults() *UnibeeApiMerchantTaskNewReq {
	this := UnibeeApiMerchantTaskNewReq{}
	return &this
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *UnibeeApiMerchantTaskNewReq) GetPayload() map[string]string {
	if o == nil || IsNil(o.Payload) {
		var ret map[string]string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewReq) GetPayloadOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *UnibeeApiMerchantTaskNewReq) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]string and assigns it to the Payload field.
func (o *UnibeeApiMerchantTaskNewReq) SetPayload(v map[string]string) {
	o.Payload = &v
}

// GetSkipColumnIndexes returns the SkipColumnIndexes field value if set, zero value otherwise.
func (o *UnibeeApiMerchantTaskNewReq) GetSkipColumnIndexes() []int32 {
	if o == nil || IsNil(o.SkipColumnIndexes) {
		var ret []int32
		return ret
	}
	return o.SkipColumnIndexes
}

// GetSkipColumnIndexesOk returns a tuple with the SkipColumnIndexes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewReq) GetSkipColumnIndexesOk() ([]int32, bool) {
	if o == nil || IsNil(o.SkipColumnIndexes) {
		return nil, false
	}
	return o.SkipColumnIndexes, true
}

// HasSkipColumnIndexes returns a boolean if a field has been set.
func (o *UnibeeApiMerchantTaskNewReq) HasSkipColumnIndexes() bool {
	if o != nil && !IsNil(o.SkipColumnIndexes) {
		return true
	}

	return false
}

// SetSkipColumnIndexes gets a reference to the given []int32 and assigns it to the SkipColumnIndexes field.
func (o *UnibeeApiMerchantTaskNewReq) SetSkipColumnIndexes(v []int32) {
	o.SkipColumnIndexes = v
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *UnibeeApiMerchantTaskNewReq) GetTask() string {
	if o == nil || IsNil(o.Task) {
		var ret string
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewReq) GetTaskOk() (*string, bool) {
	if o == nil || IsNil(o.Task) {
		return nil, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *UnibeeApiMerchantTaskNewReq) HasTask() bool {
	if o != nil && !IsNil(o.Task) {
		return true
	}

	return false
}

// SetTask gets a reference to the given string and assigns it to the Task field.
func (o *UnibeeApiMerchantTaskNewReq) SetTask(v string) {
	o.Task = &v
}

func (o UnibeeApiMerchantTaskNewReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantTaskNewReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	if !IsNil(o.SkipColumnIndexes) {
		toSerialize["skipColumnIndexes"] = o.SkipColumnIndexes
	}
	if !IsNil(o.Task) {
		toSerialize["task"] = o.Task
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantTaskNewReq struct {
	value *UnibeeApiMerchantTaskNewReq
	isSet bool
}

func (v NullableUnibeeApiMerchantTaskNewReq) Get() *UnibeeApiMerchantTaskNewReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantTaskNewReq) Set(val *UnibeeApiMerchantTaskNewReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantTaskNewReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantTaskNewReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantTaskNewReq(val *UnibeeApiMerchantTaskNewReq) *NullableUnibeeApiMerchantTaskNewReq {
	return &NullableUnibeeApiMerchantTaskNewReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantTaskNewReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantTaskNewReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


