/*
OpenAPI UniBee

This is UniBee Api Server

API version: buildtime:202408081000 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnibeeApiMerchantTaskNewReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantTaskNewReq{}

// UnibeeApiMerchantTaskNewReq struct for UnibeeApiMerchantTaskNewReq
type UnibeeApiMerchantTaskNewReq struct {
	// ExportColumns, the export file column list, will export all columns if not specified
	ExportColumns []string `json:"exportColumns,omitempty"`
	// The format of export file, xlsx|csv, will be xlsx if not specified
	Format *string `json:"format,omitempty"`
	// Payload
	Payload *map[string]interface{} `json:"payload,omitempty"`
	// Task,InvoiceExport|UserExport|SubscriptionExport|TransactionExport|DiscountExport|UserDiscountExport
	Task string `json:"task"`
}

type _UnibeeApiMerchantTaskNewReq UnibeeApiMerchantTaskNewReq

// NewUnibeeApiMerchantTaskNewReq instantiates a new UnibeeApiMerchantTaskNewReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantTaskNewReq(task string) *UnibeeApiMerchantTaskNewReq {
	this := UnibeeApiMerchantTaskNewReq{}
	this.Task = task
	return &this
}

// NewUnibeeApiMerchantTaskNewReqWithDefaults instantiates a new UnibeeApiMerchantTaskNewReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantTaskNewReqWithDefaults() *UnibeeApiMerchantTaskNewReq {
	this := UnibeeApiMerchantTaskNewReq{}
	return &this
}

// GetExportColumns returns the ExportColumns field value if set, zero value otherwise.
func (o *UnibeeApiMerchantTaskNewReq) GetExportColumns() []string {
	if o == nil || IsNil(o.ExportColumns) {
		var ret []string
		return ret
	}
	return o.ExportColumns
}

// GetExportColumnsOk returns a tuple with the ExportColumns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewReq) GetExportColumnsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExportColumns) {
		return nil, false
	}
	return o.ExportColumns, true
}

// HasExportColumns returns a boolean if a field has been set.
func (o *UnibeeApiMerchantTaskNewReq) HasExportColumns() bool {
	if o != nil && !IsNil(o.ExportColumns) {
		return true
	}

	return false
}

// SetExportColumns gets a reference to the given []string and assigns it to the ExportColumns field.
func (o *UnibeeApiMerchantTaskNewReq) SetExportColumns(v []string) {
	o.ExportColumns = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *UnibeeApiMerchantTaskNewReq) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewReq) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *UnibeeApiMerchantTaskNewReq) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *UnibeeApiMerchantTaskNewReq) SetFormat(v string) {
	o.Format = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *UnibeeApiMerchantTaskNewReq) GetPayload() map[string]interface{} {
	if o == nil || IsNil(o.Payload) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewReq) GetPayloadOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *UnibeeApiMerchantTaskNewReq) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]interface{} and assigns it to the Payload field.
func (o *UnibeeApiMerchantTaskNewReq) SetPayload(v map[string]interface{}) {
	o.Payload = &v
}

// GetTask returns the Task field value
func (o *UnibeeApiMerchantTaskNewReq) GetTask() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Task
}

// GetTaskOk returns a tuple with the Task field value
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantTaskNewReq) GetTaskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Task, true
}

// SetTask sets field value
func (o *UnibeeApiMerchantTaskNewReq) SetTask(v string) {
	o.Task = v
}

func (o UnibeeApiMerchantTaskNewReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantTaskNewReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExportColumns) {
		toSerialize["exportColumns"] = o.ExportColumns
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	toSerialize["task"] = o.Task
	return toSerialize, nil
}

func (o *UnibeeApiMerchantTaskNewReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"task",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnibeeApiMerchantTaskNewReq := _UnibeeApiMerchantTaskNewReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUnibeeApiMerchantTaskNewReq)

	if err != nil {
		return err
	}

	*o = UnibeeApiMerchantTaskNewReq(varUnibeeApiMerchantTaskNewReq)

	return err
}

type NullableUnibeeApiMerchantTaskNewReq struct {
	value *UnibeeApiMerchantTaskNewReq
	isSet bool
}

func (v NullableUnibeeApiMerchantTaskNewReq) Get() *UnibeeApiMerchantTaskNewReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantTaskNewReq) Set(val *UnibeeApiMerchantTaskNewReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantTaskNewReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantTaskNewReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantTaskNewReq(val *UnibeeApiMerchantTaskNewReq) *NullableUnibeeApiMerchantTaskNewReq {
	return &NullableUnibeeApiMerchantTaskNewReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantTaskNewReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantTaskNewReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


