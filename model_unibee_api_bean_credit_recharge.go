/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509191247
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanCreditRecharge type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanCreditRecharge{}

// UnibeeApiBeanCreditRecharge struct for UnibeeApiBeanCreditRecharge
type UnibeeApiBeanCreditRecharge struct {
	// type of credit account, 1-main recharge account, 2-promo credit account
	AccountType *int32 `json:"accountType,omitempty"`
	// create utc time
	CreateTime *int64 `json:"createTime,omitempty"`
	// id of credit account
	CreditId *int64 `json:"creditId,omitempty"`
	// currency
	Currency *string `json:"currency,omitempty"`
	// recharge description
	Description *string `json:"description,omitempty"`
	// payment gateway id
	GatewayId *int64 `json:"gatewayId,omitempty"`
	// Id
	Id *int64 `json:"id,omitempty"`
	// invoice_id
	InvoiceId *string `json:"invoiceId,omitempty"`
	// recharge name
	Name *string `json:"name,omitempty"`
	// paid time
	PaidTime *int64 `json:"paidTime,omitempty"`
	// the payment amount for recharge
	PaymentAmount *string `json:"paymentAmount,omitempty"`
	// paymentId
	PaymentId *string `json:"paymentId,omitempty"`
	// unique recharge id for credit account
	RechargeId *string `json:"rechargeId,omitempty"`
	// recharge status, 10-in charging，20-recharge success，30-recharge failed
	RechargeStatus *int32 `json:"rechargeStatus,omitempty"`
	// recharge total amount, cent
	TotalAmount *int64 `json:"totalAmount,omitempty"`
	// total refund amount,cent
	TotalRefundAmount *int64 `json:"totalRefundAmount,omitempty"`
	// user_id
	UserId *int64 `json:"userId,omitempty"`
}

// NewUnibeeApiBeanCreditRecharge instantiates a new UnibeeApiBeanCreditRecharge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanCreditRecharge() *UnibeeApiBeanCreditRecharge {
	this := UnibeeApiBeanCreditRecharge{}
	return &this
}

// NewUnibeeApiBeanCreditRechargeWithDefaults instantiates a new UnibeeApiBeanCreditRecharge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanCreditRechargeWithDefaults() *UnibeeApiBeanCreditRecharge {
	this := UnibeeApiBeanCreditRecharge{}
	return &this
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetAccountType() int32 {
	if o == nil || IsNil(o.AccountType) {
		var ret int32
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetAccountTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given int32 and assigns it to the AccountType field.
func (o *UnibeeApiBeanCreditRecharge) SetAccountType(v int32) {
	o.AccountType = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *UnibeeApiBeanCreditRecharge) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetCreditId returns the CreditId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetCreditId() int64 {
	if o == nil || IsNil(o.CreditId) {
		var ret int64
		return ret
	}
	return *o.CreditId
}

// GetCreditIdOk returns a tuple with the CreditId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetCreditIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CreditId) {
		return nil, false
	}
	return o.CreditId, true
}

// HasCreditId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasCreditId() bool {
	if o != nil && !IsNil(o.CreditId) {
		return true
	}

	return false
}

// SetCreditId gets a reference to the given int64 and assigns it to the CreditId field.
func (o *UnibeeApiBeanCreditRecharge) SetCreditId(v int64) {
	o.CreditId = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *UnibeeApiBeanCreditRecharge) SetCurrency(v string) {
	o.Currency = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UnibeeApiBeanCreditRecharge) SetDescription(v string) {
	o.Description = &v
}

// GetGatewayId returns the GatewayId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetGatewayId() int64 {
	if o == nil || IsNil(o.GatewayId) {
		var ret int64
		return ret
	}
	return *o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetGatewayIdOk() (*int64, bool) {
	if o == nil || IsNil(o.GatewayId) {
		return nil, false
	}
	return o.GatewayId, true
}

// HasGatewayId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasGatewayId() bool {
	if o != nil && !IsNil(o.GatewayId) {
		return true
	}

	return false
}

// SetGatewayId gets a reference to the given int64 and assigns it to the GatewayId field.
func (o *UnibeeApiBeanCreditRecharge) SetGatewayId(v int64) {
	o.GatewayId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UnibeeApiBeanCreditRecharge) SetId(v int64) {
	o.Id = &v
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId) {
		var ret string
		return ret
	}
	return *o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceId) {
		return nil, false
	}
	return o.InvoiceId, true
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasInvoiceId() bool {
	if o != nil && !IsNil(o.InvoiceId) {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given string and assigns it to the InvoiceId field.
func (o *UnibeeApiBeanCreditRecharge) SetInvoiceId(v string) {
	o.InvoiceId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UnibeeApiBeanCreditRecharge) SetName(v string) {
	o.Name = &v
}

// GetPaidTime returns the PaidTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetPaidTime() int64 {
	if o == nil || IsNil(o.PaidTime) {
		var ret int64
		return ret
	}
	return *o.PaidTime
}

// GetPaidTimeOk returns a tuple with the PaidTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetPaidTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.PaidTime) {
		return nil, false
	}
	return o.PaidTime, true
}

// HasPaidTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasPaidTime() bool {
	if o != nil && !IsNil(o.PaidTime) {
		return true
	}

	return false
}

// SetPaidTime gets a reference to the given int64 and assigns it to the PaidTime field.
func (o *UnibeeApiBeanCreditRecharge) SetPaidTime(v int64) {
	o.PaidTime = &v
}

// GetPaymentAmount returns the PaymentAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetPaymentAmount() string {
	if o == nil || IsNil(o.PaymentAmount) {
		var ret string
		return ret
	}
	return *o.PaymentAmount
}

// GetPaymentAmountOk returns a tuple with the PaymentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetPaymentAmountOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentAmount) {
		return nil, false
	}
	return o.PaymentAmount, true
}

// HasPaymentAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasPaymentAmount() bool {
	if o != nil && !IsNil(o.PaymentAmount) {
		return true
	}

	return false
}

// SetPaymentAmount gets a reference to the given string and assigns it to the PaymentAmount field.
func (o *UnibeeApiBeanCreditRecharge) SetPaymentAmount(v string) {
	o.PaymentAmount = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *UnibeeApiBeanCreditRecharge) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetRechargeId returns the RechargeId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetRechargeId() string {
	if o == nil || IsNil(o.RechargeId) {
		var ret string
		return ret
	}
	return *o.RechargeId
}

// GetRechargeIdOk returns a tuple with the RechargeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetRechargeIdOk() (*string, bool) {
	if o == nil || IsNil(o.RechargeId) {
		return nil, false
	}
	return o.RechargeId, true
}

// HasRechargeId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasRechargeId() bool {
	if o != nil && !IsNil(o.RechargeId) {
		return true
	}

	return false
}

// SetRechargeId gets a reference to the given string and assigns it to the RechargeId field.
func (o *UnibeeApiBeanCreditRecharge) SetRechargeId(v string) {
	o.RechargeId = &v
}

// GetRechargeStatus returns the RechargeStatus field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetRechargeStatus() int32 {
	if o == nil || IsNil(o.RechargeStatus) {
		var ret int32
		return ret
	}
	return *o.RechargeStatus
}

// GetRechargeStatusOk returns a tuple with the RechargeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetRechargeStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.RechargeStatus) {
		return nil, false
	}
	return o.RechargeStatus, true
}

// HasRechargeStatus returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasRechargeStatus() bool {
	if o != nil && !IsNil(o.RechargeStatus) {
		return true
	}

	return false
}

// SetRechargeStatus gets a reference to the given int32 and assigns it to the RechargeStatus field.
func (o *UnibeeApiBeanCreditRecharge) SetRechargeStatus(v int32) {
	o.RechargeStatus = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetTotalAmount() int64 {
	if o == nil || IsNil(o.TotalAmount) {
		var ret int64
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetTotalAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given int64 and assigns it to the TotalAmount field.
func (o *UnibeeApiBeanCreditRecharge) SetTotalAmount(v int64) {
	o.TotalAmount = &v
}

// GetTotalRefundAmount returns the TotalRefundAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetTotalRefundAmount() int64 {
	if o == nil || IsNil(o.TotalRefundAmount) {
		var ret int64
		return ret
	}
	return *o.TotalRefundAmount
}

// GetTotalRefundAmountOk returns a tuple with the TotalRefundAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetTotalRefundAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalRefundAmount) {
		return nil, false
	}
	return o.TotalRefundAmount, true
}

// HasTotalRefundAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasTotalRefundAmount() bool {
	if o != nil && !IsNil(o.TotalRefundAmount) {
		return true
	}

	return false
}

// SetTotalRefundAmount gets a reference to the given int64 and assigns it to the TotalRefundAmount field.
func (o *UnibeeApiBeanCreditRecharge) SetTotalRefundAmount(v int64) {
	o.TotalRefundAmount = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UnibeeApiBeanCreditRecharge) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanCreditRecharge) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UnibeeApiBeanCreditRecharge) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *UnibeeApiBeanCreditRecharge) SetUserId(v int64) {
	o.UserId = &v
}

func (o UnibeeApiBeanCreditRecharge) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanCreditRecharge) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountType) {
		toSerialize["accountType"] = o.AccountType
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.CreditId) {
		toSerialize["creditId"] = o.CreditId
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.GatewayId) {
		toSerialize["gatewayId"] = o.GatewayId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InvoiceId) {
		toSerialize["invoiceId"] = o.InvoiceId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PaidTime) {
		toSerialize["paidTime"] = o.PaidTime
	}
	if !IsNil(o.PaymentAmount) {
		toSerialize["paymentAmount"] = o.PaymentAmount
	}
	if !IsNil(o.PaymentId) {
		toSerialize["paymentId"] = o.PaymentId
	}
	if !IsNil(o.RechargeId) {
		toSerialize["rechargeId"] = o.RechargeId
	}
	if !IsNil(o.RechargeStatus) {
		toSerialize["rechargeStatus"] = o.RechargeStatus
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if !IsNil(o.TotalRefundAmount) {
		toSerialize["totalRefundAmount"] = o.TotalRefundAmount
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanCreditRecharge struct {
	value *UnibeeApiBeanCreditRecharge
	isSet bool
}

func (v NullableUnibeeApiBeanCreditRecharge) Get() *UnibeeApiBeanCreditRecharge {
	return v.value
}

func (v *NullableUnibeeApiBeanCreditRecharge) Set(val *UnibeeApiBeanCreditRecharge) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanCreditRecharge) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanCreditRecharge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanCreditRecharge(val *UnibeeApiBeanCreditRecharge) *NullableUnibeeApiBeanCreditRecharge {
	return &NullableUnibeeApiBeanCreditRecharge{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanCreditRecharge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanCreditRecharge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


