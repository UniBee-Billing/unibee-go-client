/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508050652
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanTemplateVariableGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanTemplateVariableGroup{}

// UnibeeApiBeanTemplateVariableGroup struct for UnibeeApiBeanTemplateVariableGroup
type UnibeeApiBeanTemplateVariableGroup struct {
	GroupName *string `json:"groupName,omitempty"`
	Variables []UnibeeApiBeanTemplateVariable `json:"variables,omitempty"`
}

// NewUnibeeApiBeanTemplateVariableGroup instantiates a new UnibeeApiBeanTemplateVariableGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanTemplateVariableGroup() *UnibeeApiBeanTemplateVariableGroup {
	this := UnibeeApiBeanTemplateVariableGroup{}
	return &this
}

// NewUnibeeApiBeanTemplateVariableGroupWithDefaults instantiates a new UnibeeApiBeanTemplateVariableGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanTemplateVariableGroupWithDefaults() *UnibeeApiBeanTemplateVariableGroup {
	this := UnibeeApiBeanTemplateVariableGroup{}
	return &this
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *UnibeeApiBeanTemplateVariableGroup) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanTemplateVariableGroup) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *UnibeeApiBeanTemplateVariableGroup) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *UnibeeApiBeanTemplateVariableGroup) SetGroupName(v string) {
	o.GroupName = &v
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *UnibeeApiBeanTemplateVariableGroup) GetVariables() []UnibeeApiBeanTemplateVariable {
	if o == nil || IsNil(o.Variables) {
		var ret []UnibeeApiBeanTemplateVariable
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanTemplateVariableGroup) GetVariablesOk() ([]UnibeeApiBeanTemplateVariable, bool) {
	if o == nil || IsNil(o.Variables) {
		return nil, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *UnibeeApiBeanTemplateVariableGroup) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given []UnibeeApiBeanTemplateVariable and assigns it to the Variables field.
func (o *UnibeeApiBeanTemplateVariableGroup) SetVariables(v []UnibeeApiBeanTemplateVariable) {
	o.Variables = v
}

func (o UnibeeApiBeanTemplateVariableGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanTemplateVariableGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	if !IsNil(o.Variables) {
		toSerialize["variables"] = o.Variables
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanTemplateVariableGroup struct {
	value *UnibeeApiBeanTemplateVariableGroup
	isSet bool
}

func (v NullableUnibeeApiBeanTemplateVariableGroup) Get() *UnibeeApiBeanTemplateVariableGroup {
	return v.value
}

func (v *NullableUnibeeApiBeanTemplateVariableGroup) Set(val *UnibeeApiBeanTemplateVariableGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanTemplateVariableGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanTemplateVariableGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanTemplateVariableGroup(val *UnibeeApiBeanTemplateVariableGroup) *NullableUnibeeApiBeanTemplateVariableGroup {
	return &NullableUnibeeApiBeanTemplateVariableGroup{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanTemplateVariableGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanTemplateVariableGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


