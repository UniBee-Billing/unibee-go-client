/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202506261206
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanDetailUserMerchantMetricLimitStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanDetailUserMerchantMetricLimitStat{}

// UnibeeApiBeanDetailUserMerchantMetricLimitStat struct for UnibeeApiBeanDetailUserMerchantMetricLimitStat
type UnibeeApiBeanDetailUserMerchantMetricLimitStat struct {
	// CurrentUsedValue
	CurrentUsedValue *int64 `json:"CurrentUsedValue,omitempty"`
	MetricLimit *UnibeeApiBeanDetailPlanMetricLimitDetail `json:"metricLimit,omitempty"`
}

// NewUnibeeApiBeanDetailUserMerchantMetricLimitStat instantiates a new UnibeeApiBeanDetailUserMerchantMetricLimitStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanDetailUserMerchantMetricLimitStat() *UnibeeApiBeanDetailUserMerchantMetricLimitStat {
	this := UnibeeApiBeanDetailUserMerchantMetricLimitStat{}
	return &this
}

// NewUnibeeApiBeanDetailUserMerchantMetricLimitStatWithDefaults instantiates a new UnibeeApiBeanDetailUserMerchantMetricLimitStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanDetailUserMerchantMetricLimitStatWithDefaults() *UnibeeApiBeanDetailUserMerchantMetricLimitStat {
	this := UnibeeApiBeanDetailUserMerchantMetricLimitStat{}
	return &this
}

// GetCurrentUsedValue returns the CurrentUsedValue field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMerchantMetricLimitStat) GetCurrentUsedValue() int64 {
	if o == nil || IsNil(o.CurrentUsedValue) {
		var ret int64
		return ret
	}
	return *o.CurrentUsedValue
}

// GetCurrentUsedValueOk returns a tuple with the CurrentUsedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricLimitStat) GetCurrentUsedValueOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentUsedValue) {
		return nil, false
	}
	return o.CurrentUsedValue, true
}

// HasCurrentUsedValue returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricLimitStat) HasCurrentUsedValue() bool {
	if o != nil && !IsNil(o.CurrentUsedValue) {
		return true
	}

	return false
}

// SetCurrentUsedValue gets a reference to the given int64 and assigns it to the CurrentUsedValue field.
func (o *UnibeeApiBeanDetailUserMerchantMetricLimitStat) SetCurrentUsedValue(v int64) {
	o.CurrentUsedValue = &v
}

// GetMetricLimit returns the MetricLimit field value if set, zero value otherwise.
func (o *UnibeeApiBeanDetailUserMerchantMetricLimitStat) GetMetricLimit() UnibeeApiBeanDetailPlanMetricLimitDetail {
	if o == nil || IsNil(o.MetricLimit) {
		var ret UnibeeApiBeanDetailPlanMetricLimitDetail
		return ret
	}
	return *o.MetricLimit
}

// GetMetricLimitOk returns a tuple with the MetricLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricLimitStat) GetMetricLimitOk() (*UnibeeApiBeanDetailPlanMetricLimitDetail, bool) {
	if o == nil || IsNil(o.MetricLimit) {
		return nil, false
	}
	return o.MetricLimit, true
}

// HasMetricLimit returns a boolean if a field has been set.
func (o *UnibeeApiBeanDetailUserMerchantMetricLimitStat) HasMetricLimit() bool {
	if o != nil && !IsNil(o.MetricLimit) {
		return true
	}

	return false
}

// SetMetricLimit gets a reference to the given UnibeeApiBeanDetailPlanMetricLimitDetail and assigns it to the MetricLimit field.
func (o *UnibeeApiBeanDetailUserMerchantMetricLimitStat) SetMetricLimit(v UnibeeApiBeanDetailPlanMetricLimitDetail) {
	o.MetricLimit = &v
}

func (o UnibeeApiBeanDetailUserMerchantMetricLimitStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanDetailUserMerchantMetricLimitStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentUsedValue) {
		toSerialize["CurrentUsedValue"] = o.CurrentUsedValue
	}
	if !IsNil(o.MetricLimit) {
		toSerialize["metricLimit"] = o.MetricLimit
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanDetailUserMerchantMetricLimitStat struct {
	value *UnibeeApiBeanDetailUserMerchantMetricLimitStat
	isSet bool
}

func (v NullableUnibeeApiBeanDetailUserMerchantMetricLimitStat) Get() *UnibeeApiBeanDetailUserMerchantMetricLimitStat {
	return v.value
}

func (v *NullableUnibeeApiBeanDetailUserMerchantMetricLimitStat) Set(val *UnibeeApiBeanDetailUserMerchantMetricLimitStat) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanDetailUserMerchantMetricLimitStat) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanDetailUserMerchantMetricLimitStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanDetailUserMerchantMetricLimitStat(val *UnibeeApiBeanDetailUserMerchantMetricLimitStat) *NullableUnibeeApiBeanDetailUserMerchantMetricLimitStat {
	return &NullableUnibeeApiBeanDetailUserMerchantMetricLimitStat{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanDetailUserMerchantMetricLimitStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanDetailUserMerchantMetricLimitStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


