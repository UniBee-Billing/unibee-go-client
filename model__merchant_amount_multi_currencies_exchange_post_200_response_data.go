/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509191247
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the MerchantAmountMultiCurrenciesExchangePost200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantAmountMultiCurrenciesExchangePost200ResponseData{}

// MerchantAmountMultiCurrenciesExchangePost200ResponseData struct for MerchantAmountMultiCurrenciesExchangePost200ResponseData
type MerchantAmountMultiCurrenciesExchangePost200ResponseData struct {
	// Merchant's MultiCurrencies
	MultiCurrencyConfigs []UnibeeApiBeanPlanMultiCurrency `json:"multiCurrencyConfigs,omitempty"`
}

// NewMerchantAmountMultiCurrenciesExchangePost200ResponseData instantiates a new MerchantAmountMultiCurrenciesExchangePost200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantAmountMultiCurrenciesExchangePost200ResponseData() *MerchantAmountMultiCurrenciesExchangePost200ResponseData {
	this := MerchantAmountMultiCurrenciesExchangePost200ResponseData{}
	return &this
}

// NewMerchantAmountMultiCurrenciesExchangePost200ResponseDataWithDefaults instantiates a new MerchantAmountMultiCurrenciesExchangePost200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantAmountMultiCurrenciesExchangePost200ResponseDataWithDefaults() *MerchantAmountMultiCurrenciesExchangePost200ResponseData {
	this := MerchantAmountMultiCurrenciesExchangePost200ResponseData{}
	return &this
}

// GetMultiCurrencyConfigs returns the MultiCurrencyConfigs field value if set, zero value otherwise.
func (o *MerchantAmountMultiCurrenciesExchangePost200ResponseData) GetMultiCurrencyConfigs() []UnibeeApiBeanPlanMultiCurrency {
	if o == nil || IsNil(o.MultiCurrencyConfigs) {
		var ret []UnibeeApiBeanPlanMultiCurrency
		return ret
	}
	return o.MultiCurrencyConfigs
}

// GetMultiCurrencyConfigsOk returns a tuple with the MultiCurrencyConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantAmountMultiCurrenciesExchangePost200ResponseData) GetMultiCurrencyConfigsOk() ([]UnibeeApiBeanPlanMultiCurrency, bool) {
	if o == nil || IsNil(o.MultiCurrencyConfigs) {
		return nil, false
	}
	return o.MultiCurrencyConfigs, true
}

// HasMultiCurrencyConfigs returns a boolean if a field has been set.
func (o *MerchantAmountMultiCurrenciesExchangePost200ResponseData) HasMultiCurrencyConfigs() bool {
	if o != nil && !IsNil(o.MultiCurrencyConfigs) {
		return true
	}

	return false
}

// SetMultiCurrencyConfigs gets a reference to the given []UnibeeApiBeanPlanMultiCurrency and assigns it to the MultiCurrencyConfigs field.
func (o *MerchantAmountMultiCurrenciesExchangePost200ResponseData) SetMultiCurrencyConfigs(v []UnibeeApiBeanPlanMultiCurrency) {
	o.MultiCurrencyConfigs = v
}

func (o MerchantAmountMultiCurrenciesExchangePost200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantAmountMultiCurrenciesExchangePost200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MultiCurrencyConfigs) {
		toSerialize["multiCurrencyConfigs"] = o.MultiCurrencyConfigs
	}
	return toSerialize, nil
}

type NullableMerchantAmountMultiCurrenciesExchangePost200ResponseData struct {
	value *MerchantAmountMultiCurrenciesExchangePost200ResponseData
	isSet bool
}

func (v NullableMerchantAmountMultiCurrenciesExchangePost200ResponseData) Get() *MerchantAmountMultiCurrenciesExchangePost200ResponseData {
	return v.value
}

func (v *NullableMerchantAmountMultiCurrenciesExchangePost200ResponseData) Set(val *MerchantAmountMultiCurrenciesExchangePost200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantAmountMultiCurrenciesExchangePost200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantAmountMultiCurrenciesExchangePost200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantAmountMultiCurrenciesExchangePost200ResponseData(val *MerchantAmountMultiCurrenciesExchangePost200ResponseData) *NullableMerchantAmountMultiCurrenciesExchangePost200ResponseData {
	return &NullableMerchantAmountMultiCurrenciesExchangePost200ResponseData{value: val, isSet: true}
}

func (v NullableMerchantAmountMultiCurrenciesExchangePost200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantAmountMultiCurrenciesExchangePost200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


