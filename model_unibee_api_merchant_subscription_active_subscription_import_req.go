/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202508150435
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq{}

// UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq Each repetition import overrides existing subscriptions with matching ExternalSubscriptionId.
type UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq struct {
	// Required, UTC time, The reference point that aligns future billing cycle dates. It sets the day of week for week intervals, the day of month for month and year intervals, and the month of year for year intervals, format '2006-01-02 15:04:05'
	BillingCycleAnchor *string `json:"billingCycleAnchor,omitempty"`
	// Required. Specifies the ISO 3166-1 alpha-2 country code for the subscription (e.g., EE, RU). This code determines the applicable tax rules for the subscription.
	CountryCode *string `json:"countryCode,omitempty"`
	// Required, UTC time, the creation time of subscription, format '2006-01-02 15:04:05'
	CreateTime *string `json:"createTime,omitempty"`
	// Required, UTC time, the current period end time of subscription, format '2006-01-02 15:04:05'
	CurrentPeriodEnd *string `json:"currentPeriodEnd,omitempty"`
	// Required, UTC time, the current period start time of subscription, format '2006-01-02 15:04:05'
	CurrentPeriodStart *string `json:"currentPeriodStart,omitempty"`
	// The email of user, one of Email or ExternalUserId is required
	Email *string `json:"email,omitempty"`
	// Optional. Unit: cents. If greater than 0, the system will verify the calculated total amount against this value
	ExpectedTotalAmount *int64 `json:"expectedTotalAmount,omitempty"`
	// The external id of plan, one of planId or ExternalPlanId is required, plan should created at UniBee at first
	ExternalPlanId *string `json:"externalPlanId,omitempty"`
	// Required, The external id of subscription
	ExternalSubscriptionId *string `json:"externalSubscriptionId,omitempty"`
	// The external id of user, one of Email or ExternalUserId is required 
	ExternalUserId *string `json:"externalUserId,omitempty"`
	// In json format, additional features data of subscription, will join user's metric data in user api if provided'
	Features *string `json:"features,omitempty"`
	// UTC time, the first payment success time of subscription, format '2006-01-02 15:04:05'
	FirstPaidTime *string `json:"firstPaidTime,omitempty"`
	// Required, should one of stripe|paypal|wire_transfer|changelly 
	Gateway *string `json:"gateway,omitempty"`
	// The id of plan, one of planId or ExternalPlanId is required, plan should created at UniBee at first 
	PlanId *int64 `json:"planId,omitempty"`
	// the quantity of plan, default 1 if not provided 
	Quantity *int64 `json:"quantity,omitempty"`
	// The tax percentage. Only applicable when the system VAT gateway not setup. Value is in thousandths (e.g., 1000 = 10%).
	TaxPercentage *int64 `json:"taxPercentage,omitempty"`
	// The Vat Number of user
	VatNumber *string `json:"vatNumber,omitempty"`
}

// NewUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq instantiates a new UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq() *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq {
	this := UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq{}
	return &this
}

// NewUnibeeApiMerchantSubscriptionActiveSubscriptionImportReqWithDefaults instantiates a new UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantSubscriptionActiveSubscriptionImportReqWithDefaults() *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq {
	this := UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq{}
	return &this
}

// GetBillingCycleAnchor returns the BillingCycleAnchor field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetBillingCycleAnchor() string {
	if o == nil || IsNil(o.BillingCycleAnchor) {
		var ret string
		return ret
	}
	return *o.BillingCycleAnchor
}

// GetBillingCycleAnchorOk returns a tuple with the BillingCycleAnchor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetBillingCycleAnchorOk() (*string, bool) {
	if o == nil || IsNil(o.BillingCycleAnchor) {
		return nil, false
	}
	return o.BillingCycleAnchor, true
}

// HasBillingCycleAnchor returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasBillingCycleAnchor() bool {
	if o != nil && !IsNil(o.BillingCycleAnchor) {
		return true
	}

	return false
}

// SetBillingCycleAnchor gets a reference to the given string and assigns it to the BillingCycleAnchor field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetBillingCycleAnchor(v string) {
	o.BillingCycleAnchor = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetCurrentPeriodEnd returns the CurrentPeriodEnd field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetCurrentPeriodEnd() string {
	if o == nil || IsNil(o.CurrentPeriodEnd) {
		var ret string
		return ret
	}
	return *o.CurrentPeriodEnd
}

// GetCurrentPeriodEndOk returns a tuple with the CurrentPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetCurrentPeriodEndOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentPeriodEnd) {
		return nil, false
	}
	return o.CurrentPeriodEnd, true
}

// HasCurrentPeriodEnd returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasCurrentPeriodEnd() bool {
	if o != nil && !IsNil(o.CurrentPeriodEnd) {
		return true
	}

	return false
}

// SetCurrentPeriodEnd gets a reference to the given string and assigns it to the CurrentPeriodEnd field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetCurrentPeriodEnd(v string) {
	o.CurrentPeriodEnd = &v
}

// GetCurrentPeriodStart returns the CurrentPeriodStart field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetCurrentPeriodStart() string {
	if o == nil || IsNil(o.CurrentPeriodStart) {
		var ret string
		return ret
	}
	return *o.CurrentPeriodStart
}

// GetCurrentPeriodStartOk returns a tuple with the CurrentPeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetCurrentPeriodStartOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentPeriodStart) {
		return nil, false
	}
	return o.CurrentPeriodStart, true
}

// HasCurrentPeriodStart returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasCurrentPeriodStart() bool {
	if o != nil && !IsNil(o.CurrentPeriodStart) {
		return true
	}

	return false
}

// SetCurrentPeriodStart gets a reference to the given string and assigns it to the CurrentPeriodStart field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetCurrentPeriodStart(v string) {
	o.CurrentPeriodStart = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetEmail(v string) {
	o.Email = &v
}

// GetExpectedTotalAmount returns the ExpectedTotalAmount field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetExpectedTotalAmount() int64 {
	if o == nil || IsNil(o.ExpectedTotalAmount) {
		var ret int64
		return ret
	}
	return *o.ExpectedTotalAmount
}

// GetExpectedTotalAmountOk returns a tuple with the ExpectedTotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetExpectedTotalAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpectedTotalAmount) {
		return nil, false
	}
	return o.ExpectedTotalAmount, true
}

// HasExpectedTotalAmount returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasExpectedTotalAmount() bool {
	if o != nil && !IsNil(o.ExpectedTotalAmount) {
		return true
	}

	return false
}

// SetExpectedTotalAmount gets a reference to the given int64 and assigns it to the ExpectedTotalAmount field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetExpectedTotalAmount(v int64) {
	o.ExpectedTotalAmount = &v
}

// GetExternalPlanId returns the ExternalPlanId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetExternalPlanId() string {
	if o == nil || IsNil(o.ExternalPlanId) {
		var ret string
		return ret
	}
	return *o.ExternalPlanId
}

// GetExternalPlanIdOk returns a tuple with the ExternalPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetExternalPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalPlanId) {
		return nil, false
	}
	return o.ExternalPlanId, true
}

// HasExternalPlanId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasExternalPlanId() bool {
	if o != nil && !IsNil(o.ExternalPlanId) {
		return true
	}

	return false
}

// SetExternalPlanId gets a reference to the given string and assigns it to the ExternalPlanId field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetExternalPlanId(v string) {
	o.ExternalPlanId = &v
}

// GetExternalSubscriptionId returns the ExternalSubscriptionId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetExternalSubscriptionId() string {
	if o == nil || IsNil(o.ExternalSubscriptionId) {
		var ret string
		return ret
	}
	return *o.ExternalSubscriptionId
}

// GetExternalSubscriptionIdOk returns a tuple with the ExternalSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetExternalSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalSubscriptionId) {
		return nil, false
	}
	return o.ExternalSubscriptionId, true
}

// HasExternalSubscriptionId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasExternalSubscriptionId() bool {
	if o != nil && !IsNil(o.ExternalSubscriptionId) {
		return true
	}

	return false
}

// SetExternalSubscriptionId gets a reference to the given string and assigns it to the ExternalSubscriptionId field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetExternalSubscriptionId(v string) {
	o.ExternalSubscriptionId = &v
}

// GetExternalUserId returns the ExternalUserId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetExternalUserId() string {
	if o == nil || IsNil(o.ExternalUserId) {
		var ret string
		return ret
	}
	return *o.ExternalUserId
}

// GetExternalUserIdOk returns a tuple with the ExternalUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetExternalUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalUserId) {
		return nil, false
	}
	return o.ExternalUserId, true
}

// HasExternalUserId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasExternalUserId() bool {
	if o != nil && !IsNil(o.ExternalUserId) {
		return true
	}

	return false
}

// SetExternalUserId gets a reference to the given string and assigns it to the ExternalUserId field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetExternalUserId(v string) {
	o.ExternalUserId = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetFeatures() string {
	if o == nil || IsNil(o.Features) {
		var ret string
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given string and assigns it to the Features field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetFeatures(v string) {
	o.Features = &v
}

// GetFirstPaidTime returns the FirstPaidTime field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetFirstPaidTime() string {
	if o == nil || IsNil(o.FirstPaidTime) {
		var ret string
		return ret
	}
	return *o.FirstPaidTime
}

// GetFirstPaidTimeOk returns a tuple with the FirstPaidTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetFirstPaidTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FirstPaidTime) {
		return nil, false
	}
	return o.FirstPaidTime, true
}

// HasFirstPaidTime returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasFirstPaidTime() bool {
	if o != nil && !IsNil(o.FirstPaidTime) {
		return true
	}

	return false
}

// SetFirstPaidTime gets a reference to the given string and assigns it to the FirstPaidTime field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetFirstPaidTime(v string) {
	o.FirstPaidTime = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetGateway() string {
	if o == nil || IsNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetGateway(v string) {
	o.Gateway = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetPlanId() int64 {
	if o == nil || IsNil(o.PlanId) {
		var ret int64
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetPlanIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given int64 and assigns it to the PlanId field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetPlanId(v int64) {
	o.PlanId = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetQuantity() int64 {
	if o == nil || IsNil(o.Quantity) {
		var ret int64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int64 and assigns it to the Quantity field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetQuantity(v int64) {
	o.Quantity = &v
}

// GetTaxPercentage returns the TaxPercentage field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetTaxPercentage() int64 {
	if o == nil || IsNil(o.TaxPercentage) {
		var ret int64
		return ret
	}
	return *o.TaxPercentage
}

// GetTaxPercentageOk returns a tuple with the TaxPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetTaxPercentageOk() (*int64, bool) {
	if o == nil || IsNil(o.TaxPercentage) {
		return nil, false
	}
	return o.TaxPercentage, true
}

// HasTaxPercentage returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasTaxPercentage() bool {
	if o != nil && !IsNil(o.TaxPercentage) {
		return true
	}

	return false
}

// SetTaxPercentage gets a reference to the given int64 and assigns it to the TaxPercentage field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetTaxPercentage(v int64) {
	o.TaxPercentage = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetVatNumber() string {
	if o == nil || IsNil(o.VatNumber) {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) GetVatNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VatNumber) {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) HasVatNumber() bool {
	if o != nil && !IsNil(o.VatNumber) {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) SetVatNumber(v string) {
	o.VatNumber = &v
}

func (o UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingCycleAnchor) {
		toSerialize["billingCycleAnchor"] = o.BillingCycleAnchor
	}
	if !IsNil(o.CountryCode) {
		toSerialize["countryCode"] = o.CountryCode
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.CurrentPeriodEnd) {
		toSerialize["currentPeriodEnd"] = o.CurrentPeriodEnd
	}
	if !IsNil(o.CurrentPeriodStart) {
		toSerialize["currentPeriodStart"] = o.CurrentPeriodStart
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.ExpectedTotalAmount) {
		toSerialize["expectedTotalAmount"] = o.ExpectedTotalAmount
	}
	if !IsNil(o.ExternalPlanId) {
		toSerialize["externalPlanId"] = o.ExternalPlanId
	}
	if !IsNil(o.ExternalSubscriptionId) {
		toSerialize["externalSubscriptionId"] = o.ExternalSubscriptionId
	}
	if !IsNil(o.ExternalUserId) {
		toSerialize["externalUserId"] = o.ExternalUserId
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.FirstPaidTime) {
		toSerialize["firstPaidTime"] = o.FirstPaidTime
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.TaxPercentage) {
		toSerialize["taxPercentage"] = o.TaxPercentage
	}
	if !IsNil(o.VatNumber) {
		toSerialize["vatNumber"] = o.VatNumber
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq struct {
	value *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq
	isSet bool
}

func (v NullableUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) Get() *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq {
	return v.value
}

func (v *NullableUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) Set(val *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq(val *UnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) *NullableUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq {
	return &NullableUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantSubscriptionActiveSubscriptionImportReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


