/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202504011414
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the MerchantGatewayArchivePost200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantGatewayArchivePost200ResponseData{}

// MerchantGatewayArchivePost200ResponseData struct for MerchantGatewayArchivePost200ResponseData
type MerchantGatewayArchivePost200ResponseData struct {
	Gateway *UnibeeApiBeanDetailGateway `json:"gateway,omitempty"`
}

// NewMerchantGatewayArchivePost200ResponseData instantiates a new MerchantGatewayArchivePost200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantGatewayArchivePost200ResponseData() *MerchantGatewayArchivePost200ResponseData {
	this := MerchantGatewayArchivePost200ResponseData{}
	return &this
}

// NewMerchantGatewayArchivePost200ResponseDataWithDefaults instantiates a new MerchantGatewayArchivePost200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantGatewayArchivePost200ResponseDataWithDefaults() *MerchantGatewayArchivePost200ResponseData {
	this := MerchantGatewayArchivePost200ResponseData{}
	return &this
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *MerchantGatewayArchivePost200ResponseData) GetGateway() UnibeeApiBeanDetailGateway {
	if o == nil || IsNil(o.Gateway) {
		var ret UnibeeApiBeanDetailGateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGatewayArchivePost200ResponseData) GetGatewayOk() (*UnibeeApiBeanDetailGateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *MerchantGatewayArchivePost200ResponseData) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given UnibeeApiBeanDetailGateway and assigns it to the Gateway field.
func (o *MerchantGatewayArchivePost200ResponseData) SetGateway(v UnibeeApiBeanDetailGateway) {
	o.Gateway = &v
}

func (o MerchantGatewayArchivePost200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantGatewayArchivePost200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	return toSerialize, nil
}

type NullableMerchantGatewayArchivePost200ResponseData struct {
	value *MerchantGatewayArchivePost200ResponseData
	isSet bool
}

func (v NullableMerchantGatewayArchivePost200ResponseData) Get() *MerchantGatewayArchivePost200ResponseData {
	return v.value
}

func (v *NullableMerchantGatewayArchivePost200ResponseData) Set(val *MerchantGatewayArchivePost200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantGatewayArchivePost200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantGatewayArchivePost200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantGatewayArchivePost200ResponseData(val *MerchantGatewayArchivePost200ResponseData) *NullableMerchantGatewayArchivePost200ResponseData {
	return &NullableMerchantGatewayArchivePost200ResponseData{value: val, isSet: true}
}

func (v NullableMerchantGatewayArchivePost200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantGatewayArchivePost200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


