/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202509290914
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanMerchantCheckout type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanMerchantCheckout{}

// UnibeeApiBeanMerchantCheckout struct for UnibeeApiBeanMerchantCheckout
type UnibeeApiBeanMerchantCheckout struct {
	// create utc time
	CreateTime *int64 `json:"createTime,omitempty"`
	// checkout config data
	Data *map[string]interface{} `json:"data,omitempty"`
	// description
	Description *string `json:"description,omitempty"`
	// ID
	Id *int64 `json:"id,omitempty"`
	// is default
	IsDefault *bool `json:"isDefault,omitempty"`
	// merchantId
	MerchantId *int64 `json:"merchantId,omitempty"`
	// name
	Name *string `json:"name,omitempty"`
	// checkout staging config data
	StagingData *map[string]interface{} `json:"stagingData,omitempty"`
	// update utc time
	UpdateTime *int64 `json:"updateTime,omitempty"`
}

// NewUnibeeApiBeanMerchantCheckout instantiates a new UnibeeApiBeanMerchantCheckout object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanMerchantCheckout() *UnibeeApiBeanMerchantCheckout {
	this := UnibeeApiBeanMerchantCheckout{}
	return &this
}

// NewUnibeeApiBeanMerchantCheckoutWithDefaults instantiates a new UnibeeApiBeanMerchantCheckout object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanMerchantCheckoutWithDefaults() *UnibeeApiBeanMerchantCheckout {
	this := UnibeeApiBeanMerchantCheckout{}
	return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCheckout) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCheckout) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCheckout) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *UnibeeApiBeanMerchantCheckout) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCheckout) GetData() map[string]interface{} {
	if o == nil || IsNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCheckout) GetDataOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCheckout) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *UnibeeApiBeanMerchantCheckout) SetData(v map[string]interface{}) {
	o.Data = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCheckout) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCheckout) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCheckout) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UnibeeApiBeanMerchantCheckout) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCheckout) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCheckout) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCheckout) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UnibeeApiBeanMerchantCheckout) SetId(v int64) {
	o.Id = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCheckout) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCheckout) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCheckout) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *UnibeeApiBeanMerchantCheckout) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCheckout) GetMerchantId() int64 {
	if o == nil || IsNil(o.MerchantId) {
		var ret int64
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCheckout) GetMerchantIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCheckout) HasMerchantId() bool {
	if o != nil && !IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given int64 and assigns it to the MerchantId field.
func (o *UnibeeApiBeanMerchantCheckout) SetMerchantId(v int64) {
	o.MerchantId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCheckout) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCheckout) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCheckout) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UnibeeApiBeanMerchantCheckout) SetName(v string) {
	o.Name = &v
}

// GetStagingData returns the StagingData field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCheckout) GetStagingData() map[string]interface{} {
	if o == nil || IsNil(o.StagingData) {
		var ret map[string]interface{}
		return ret
	}
	return *o.StagingData
}

// GetStagingDataOk returns a tuple with the StagingData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCheckout) GetStagingDataOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.StagingData) {
		return nil, false
	}
	return o.StagingData, true
}

// HasStagingData returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCheckout) HasStagingData() bool {
	if o != nil && !IsNil(o.StagingData) {
		return true
	}

	return false
}

// SetStagingData gets a reference to the given map[string]interface{} and assigns it to the StagingData field.
func (o *UnibeeApiBeanMerchantCheckout) SetStagingData(v map[string]interface{}) {
	o.StagingData = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *UnibeeApiBeanMerchantCheckout) GetUpdateTime() int64 {
	if o == nil || IsNil(o.UpdateTime) {
		var ret int64
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanMerchantCheckout) GetUpdateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *UnibeeApiBeanMerchantCheckout) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given int64 and assigns it to the UpdateTime field.
func (o *UnibeeApiBeanMerchantCheckout) SetUpdateTime(v int64) {
	o.UpdateTime = &v
}

func (o UnibeeApiBeanMerchantCheckout) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanMerchantCheckout) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsDefault) {
		toSerialize["isDefault"] = o.IsDefault
	}
	if !IsNil(o.MerchantId) {
		toSerialize["merchantId"] = o.MerchantId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StagingData) {
		toSerialize["stagingData"] = o.StagingData
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanMerchantCheckout struct {
	value *UnibeeApiBeanMerchantCheckout
	isSet bool
}

func (v NullableUnibeeApiBeanMerchantCheckout) Get() *UnibeeApiBeanMerchantCheckout {
	return v.value
}

func (v *NullableUnibeeApiBeanMerchantCheckout) Set(val *UnibeeApiBeanMerchantCheckout) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanMerchantCheckout) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanMerchantCheckout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanMerchantCheckout(val *UnibeeApiBeanMerchantCheckout) *NullableUnibeeApiBeanMerchantCheckout {
	return &NullableUnibeeApiBeanMerchantCheckout{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanMerchantCheckout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanMerchantCheckout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


