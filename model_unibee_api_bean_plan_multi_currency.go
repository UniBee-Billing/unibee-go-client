/*
OpenAPI UniBee

UniBee Api Server

API version: daily,buildtime:202510192014
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanPlanMultiCurrency type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanPlanMultiCurrency{}

// UnibeeApiBeanPlanMultiCurrency struct for UnibeeApiBeanPlanMultiCurrency
type UnibeeApiBeanPlanMultiCurrency struct {
	// the amount of exchange rate
	Amount *int64 `json:"amount,omitempty"`
	// using https://app.exchangerate-api.com/ to update exchange rate if true, the exchange APIKey need setup first
	AutoExchange *bool `json:"autoExchange,omitempty"`
	// target currency
	Currency *string `json:"currency,omitempty"`
	// disable currency exchange
	Disable *bool `json:"disable,omitempty"`
	// exchange rate, no setup required if AutoExchange is true
	ExchangeRate *float32 `json:"exchangeRate,omitempty"`
}

// NewUnibeeApiBeanPlanMultiCurrency instantiates a new UnibeeApiBeanPlanMultiCurrency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanPlanMultiCurrency() *UnibeeApiBeanPlanMultiCurrency {
	this := UnibeeApiBeanPlanMultiCurrency{}
	return &this
}

// NewUnibeeApiBeanPlanMultiCurrencyWithDefaults instantiates a new UnibeeApiBeanPlanMultiCurrency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanPlanMultiCurrencyWithDefaults() *UnibeeApiBeanPlanMultiCurrency {
	this := UnibeeApiBeanPlanMultiCurrency{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *UnibeeApiBeanPlanMultiCurrency) GetAmount() int64 {
	if o == nil || IsNil(o.Amount) {
		var ret int64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanPlanMultiCurrency) GetAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanPlanMultiCurrency) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int64 and assigns it to the Amount field.
func (o *UnibeeApiBeanPlanMultiCurrency) SetAmount(v int64) {
	o.Amount = &v
}

// GetAutoExchange returns the AutoExchange field value if set, zero value otherwise.
func (o *UnibeeApiBeanPlanMultiCurrency) GetAutoExchange() bool {
	if o == nil || IsNil(o.AutoExchange) {
		var ret bool
		return ret
	}
	return *o.AutoExchange
}

// GetAutoExchangeOk returns a tuple with the AutoExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanPlanMultiCurrency) GetAutoExchangeOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoExchange) {
		return nil, false
	}
	return o.AutoExchange, true
}

// HasAutoExchange returns a boolean if a field has been set.
func (o *UnibeeApiBeanPlanMultiCurrency) HasAutoExchange() bool {
	if o != nil && !IsNil(o.AutoExchange) {
		return true
	}

	return false
}

// SetAutoExchange gets a reference to the given bool and assigns it to the AutoExchange field.
func (o *UnibeeApiBeanPlanMultiCurrency) SetAutoExchange(v bool) {
	o.AutoExchange = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *UnibeeApiBeanPlanMultiCurrency) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanPlanMultiCurrency) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanPlanMultiCurrency) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *UnibeeApiBeanPlanMultiCurrency) SetCurrency(v string) {
	o.Currency = &v
}

// GetDisable returns the Disable field value if set, zero value otherwise.
func (o *UnibeeApiBeanPlanMultiCurrency) GetDisable() bool {
	if o == nil || IsNil(o.Disable) {
		var ret bool
		return ret
	}
	return *o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanPlanMultiCurrency) GetDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.Disable) {
		return nil, false
	}
	return o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *UnibeeApiBeanPlanMultiCurrency) HasDisable() bool {
	if o != nil && !IsNil(o.Disable) {
		return true
	}

	return false
}

// SetDisable gets a reference to the given bool and assigns it to the Disable field.
func (o *UnibeeApiBeanPlanMultiCurrency) SetDisable(v bool) {
	o.Disable = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *UnibeeApiBeanPlanMultiCurrency) GetExchangeRate() float32 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float32
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanPlanMultiCurrency) GetExchangeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *UnibeeApiBeanPlanMultiCurrency) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float32 and assigns it to the ExchangeRate field.
func (o *UnibeeApiBeanPlanMultiCurrency) SetExchangeRate(v float32) {
	o.ExchangeRate = &v
}

func (o UnibeeApiBeanPlanMultiCurrency) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanPlanMultiCurrency) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.AutoExchange) {
		toSerialize["autoExchange"] = o.AutoExchange
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Disable) {
		toSerialize["disable"] = o.Disable
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanPlanMultiCurrency struct {
	value *UnibeeApiBeanPlanMultiCurrency
	isSet bool
}

func (v NullableUnibeeApiBeanPlanMultiCurrency) Get() *UnibeeApiBeanPlanMultiCurrency {
	return v.value
}

func (v *NullableUnibeeApiBeanPlanMultiCurrency) Set(val *UnibeeApiBeanPlanMultiCurrency) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanPlanMultiCurrency) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanPlanMultiCurrency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanPlanMultiCurrency(val *UnibeeApiBeanPlanMultiCurrency) *NullableUnibeeApiBeanPlanMultiCurrency {
	return &NullableUnibeeApiBeanPlanMultiCurrency{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanPlanMultiCurrency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanPlanMultiCurrency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


